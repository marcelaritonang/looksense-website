(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[418],{28494:(e,t,r)=>{"use strict";r.d(t,{C:()=>a});var n=r(92289);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&n.ZSL.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}},57774:(e,t,r)=>{"use strict";r.d(t,{dH:()=>s,lO:()=>i});var n=r(92289),a=r(28494);function s(e){let t=new Float32Array(e.length);for(let r=0;r<e.length;++r)t[r]=Math.abs(e[r]);return t}let i={kernelName:n.ljI,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,r=e.backend;(0,a.C)(t,"abs");let i=new Float32Array(n.ZSL.sizeFromShape(t.shape));return i=s(r.data.get(t.dataId).values),r.makeOutput(i,t.shape,t.dtype)}}},44457:(e,t,r)=>{"use strict";r.d(t,{UK:()=>u,WQ:()=>l,mx:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e+t),o=(0,s.B)((e,t,r,n)=>({real:e+r,imag:t+n})),l=(0,s.j)(n.OMN,i,o),u={kernelName:n.OMN,backendName:"cpu",kernelFunc:l}},46893:(e,t,r)=>{"use strict";r.d(t,{N:()=>s,X:()=>a});var n=r(92289);function a(e,t,r,a,s){let i=n.ZSL.sizeFromShape(a),o=n.ZSL.makeZerosTypedArray(s,r);for(let r=0;r<e.length;r++){let n=e[r];if(n<0)throw Error("Input x must be non-negative!");n>=s||(i>0?o[n]+=t[r]:o[n]+=1)}return o}function s(e,t,r,a=!1){let i=e.shape[0],o=e.shape[1],l=(0,n.ra8)([i,r],t.dtype);for(let n=0;n<i;n++)for(let s=0;s<o;s++){let i=e.get(n,s);if(i<0)throw Error("Input x must be non-negative!");i>=r||(a?l.set(1,n,i):t.size>0?l.set(l.get(n,i)+t.get(n,s),n,i):l.set(l.get(n,i)+1,n,i))}return l}},68018:(e,t,r)=>{"use strict";r.d(t,{LY:()=>l,f6:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e&t),o=(0,s.j)(n.HNs,i),l={kernelName:n.HNs,backendName:"cpu",kernelFunc:o}},23613:(e,t,r)=>{"use strict";r.d(t,{Ml:()=>p,ct:()=>u,wg:()=>h});var n=r(92289),a=r(51825),s=r(93565),i=r(10338),o=r(34900),l=r(90082);function u(e,t,r,s){if("int32"===s)return[t,"int32",Int32Array.from(e)];if("bool"===s){let s=n.ZSL.toTypedArray([0],r),[i,o]=(0,a.Z)((e,t)=>e!==t?1:0)(t,[],e,s,"bool");return[o,"bool",i]}throw Error(`Error in Cast: failed to cast ${r} to ${s}`)}function h(e){let{inputs:t,backend:r,attrs:a}=e,{x:p}=t,{dtype:d}=a;if("complex64"===d){if("complex64"===p.dtype)return(0,o.D)({inputs:{x:p},backend:r});let e=(0,s.U)(r,p.shape,p.dtype),t=h({inputs:{x:p},backend:r,attrs:{dtype:"float32"}}),n=(0,i.f)({inputs:{real:t,imag:e},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),n}if("complex64"===p.dtype){let e=(0,l.x)({inputs:{input:p},backend:r}),t=h({inputs:{x:e},backend:r,attrs:{dtype:d}});return r.disposeIntermediateTensorInfo(e),t}if(!n.ZSL.hasEncodingLoss(p.dtype,d)){let e=(0,o.D)({inputs:{x:p},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:d}}let[c,f,m]=u(r.data.get(p.dataId).values,p.shape,p.dtype,d);return r.makeTensorInfo(c,f,m)}let p={kernelName:n.KXH,backendName:"cpu",kernelFunc:h}},26779:(e,t,r)=>{"use strict";r.d(t,{YG:()=>i,uf:()=>l});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>Math.ceil(e)),o=(0,s.F)(n.QDP,i),l={kernelName:n.QDP,backendName:"cpu",kernelFunc:o}},10338:(e,t,r)=>{"use strict";function n(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=r.makeTensorInfo(n.shape,"complex64");return r.data.get(o.dataId).complexTensorInfos={real:r.makeTensorInfo(n.shape,"float32",s),imag:r.makeTensorInfo(a.shape,"float32",i)},o}r.d(t,{f:()=>n,v:()=>a});let a={kernelName:r(92289).pr3,backendName:"cpu",kernelFunc:n}},59317:(e,t,r)=>{"use strict";r.d(t,{h:()=>a});var n=r(92289);function a(e,t,r,a){let s=n.ZSL.getArrayFromDType(r,n.ZSL.sizeFromShape(t));if(a&&"string"!==r){let t=0;e.forEach(e=>{let r=n.ZSL.sizeFromShape(e.shape);s.set(e.vals,t),t+=r})}else{let a=0;e.forEach(e=>{let i="string"===r?n.C0T.fromUint8ToStringArray(e.vals):e.vals,o=0;for(let r=0;r<e.shape[0];++r){let n=r*t[1]+a;for(let t=0;t<e.shape[1];++t)s[n+t]=i[o++]}a+=e.shape[1]})}return s}},42486:(e,t,r)=>{"use strict";r.d(t,{LC:()=>o,RY:()=>l,z3:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e===t?1:0),o=(0,s.j)(n.BRl,i,null,"bool"),l={kernelName:n.BRl,backendName:"cpu",kernelFunc:o}},65085:(e,t,r)=>{"use strict";r.d(t,{AC:()=>l,oN:()=>o,sG:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>Math.exp(e)),o=(0,s.F)(n.ox3,i,"float32"),l={kernelName:n.ox3,backendName:"cpu",kernelFunc:o}},60615:(e,t,r)=>{"use strict";r.d(t,{Yp:()=>l,uM:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>Math.expm1(e)),o=(0,s.F)(n.ybj,i),l={kernelName:n.ybj,backendName:"cpu",kernelFunc:o}},92464:(e,t,r)=>{"use strict";r.d(t,{Hc:()=>l,vS:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>Math.floor(e)),o=(0,s.F)(n.ZgB,i),l={kernelName:n.ZgB,backendName:"cpu",kernelFunc:o}},17370:(e,t,r)=>{"use strict";r.d(t,{q:()=>a});var n=r(92289);function a(e,t,r,a,s,i,o,l,u){let h=(0,n.ra8)([a,i],r);for(let r=0;r<a;r++){let n=[],a=0;for(let t=0;t<s;t++){let i=e[r*s+t];a+=i*o[t],n.push(i)}if(a<0||a>=u/i)throw Error(`Invalid indices: ${n} does not index into ${l}`);for(let e=0;e<i;e++)h.values[r*i+e]=t.get(...t.indexToLoc(a*i+e))}return h}},17108:(e,t,r)=>{"use strict";r.d(t,{G:()=>a});var n=r(92289);function a(e,t,r){let a=(0,n.ra8)(r,e.dtype);for(let r=0;r<a.size;++r){let n=a.indexToLoc(r).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];let l=e.locToIndex(n);0<=l&&l<e.values.length&&(a.values[r]=e.values[l])}return a}},6080:(e,t,r)=>{"use strict";r.d(t,{rq:()=>i,xp:()=>l});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e>t?1:0),o=(0,s.j)(n.XhZ,i,null,"bool"),l={kernelName:n.XhZ,backendName:"cpu",kernelFunc:o}},39772:(e,t,r)=>{"use strict";r.d(t,{VM:()=>l,lg:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e>=t?1:0),o=(0,s.j)(n.lLS,i,null,"bool"),l={kernelName:n.lLS,backendName:"cpu",kernelFunc:o}},34900:(e,t,r)=>{"use strict";function n(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}r.d(t,{D:()=>n,F:()=>a});let a={kernelName:r(92289).lzr,backendName:"cpu",kernelFunc:n}},54739:(e,t,r)=>{"use strict";r.d(t,{WR:()=>i,YW:()=>l});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e<t?1:0),o=(0,s.j)(n.mIA,i,null,"bool"),l={kernelName:n.mIA,backendName:"cpu",kernelFunc:o}},65225:(e,t,r)=>{"use strict";r.d(t,{Q:()=>l,cu:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e<=t?1:0),o=(0,s.j)(n.CwD,i,null,"bool"),l={kernelName:n.CwD,backendName:"cpu",kernelFunc:o}},83360:(e,t,r)=>{"use strict";r.d(t,{G:()=>a});var n=r(92289);function a(e,t,r){let a=(t-e)/(r-1),s=n.ZSL.makeZerosTypedArray(r,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}},78036:(e,t,r)=>{"use strict";r.d(t,{Fx:()=>l,px:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>Math.log(e)),o=(0,s.F)(n.tG8,i),l={kernelName:n.tG8,backendName:"cpu",kernelFunc:o}},9927:(e,t,r)=>{"use strict";r.d(t,{j:()=>a});var n=r(92289);function a(e,t,r,a){let s=n.ZSL.getTypedArrayFromDType(a,n.ZSL.sizeFromShape(r));for(let r=0;r<s.length;++r){let n=r*t,a=e[n];for(let r=0;r<t;++r){let t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}s[r]=a}return s}},31144:(e,t,r)=>{"use strict";r.d(t,{He:()=>i,l9:()=>l});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>Math.max(e,t)),o=(0,s.j)(n.LDN,i),l={kernelName:n.LDN,backendName:"cpu",kernelFunc:o}},91122:(e,t,r)=>{"use strict";r.d(t,{Nu:()=>l,hE:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>Math.min(e,t)),o=(0,s.j)(n.LG0,i),l={kernelName:n.LG0,backendName:"cpu",kernelFunc:o}},24686:(e,t,r)=>{"use strict";r.d(t,{BF:()=>i,lw:()=>l,tJ:()=>u});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e*t),o=(0,s.B)((e,t,r,n)=>({real:e*r-t*n,imag:e*n+t*r})),l=(0,s.j)(n.xu7,i,o),u={kernelName:n.xu7,backendName:"cpu",kernelFunc:l}},88456:(e,t,r)=>{"use strict";r.d(t,{Dk:()=>i,hd:()=>o});var n=r(92289),a=r(28494),s=r(24686);function i(e,t,r){let a=n.ZSL.createScalarValue(-1,r);return(0,s.BF)([],t,a,e,r)}let o={kernelName:n.l0G,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t;(0,a.C)(n,"neg");let[s,o]=i(r.data.get(n.dataId).values,n.shape,n.dtype);return r.makeTensorInfo(o,n.dtype,s)}}},17329:(e,t,r)=>{"use strict";r.d(t,{AL:()=>l,cl:()=>i});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e!==t?1:0),o=(0,s.j)(n.ylV,i,null,"bool"),l={kernelName:n.ylV,backendName:"cpu",kernelFunc:o}},67055:(e,t,r)=>{"use strict";r.d(t,{S3:()=>o,_B:()=>i});var n=r(92289),a=r(28494),s=r(4957);function i(e,t,r,a){let[s,i]=n.C0T.computeOutAndReduceShapes(e,a),o=(0,n.TuY)(t,"int32"),l=n.ZSL.makeZerosTypedArray(n.ZSL.sizeFromShape(s),o),u=n.ZSL.sizeFromShape(i);for(let e=0;e<l.length;++e){let t=e*u,n=1;for(let e=0;e<u;++e)n*=r[t+e];l[e]=n}return{outVals:l,outShape:s,outDtype:o}}let o={kernelName:n.kdj,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:o}=e,{x:l}=t,{axis:u,keepDims:h}=o;(0,a.C)(l,"prod");let p=l.shape.length,d=n.ZSL.parseAxisParam(u,l.shape),c=n.C0T.getAxesPermutation(d,p),f=d,m=l,g=[];null!=c&&(g.push(m=(0,s.m)({inputs:{x:l},backend:r,attrs:{perm:c}})),f=n.C0T.getInnerMostAxes(f.length,p));let y=r.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:v}=i(m.shape,m.dtype,y,f),w=x;return h&&(w=n.C0T.expandShapeToKeepDim(x,d)),g.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(w,v,b)}}},22966:(e,t,r)=>{"use strict";r.d(t,{u:()=>s});var n=r(92289);function a(e,t){let r=e.slice(0,t);for(;r.length<t;)r.push(1);for(let n=t;n<e.length;n++)r[t-1]*=e[n];return r}function s(e,t,r,s,i,o,l,u){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");if(!function(e,t,r){e.forEach((e,a)=>{if(e<0||e>=r){let s=n.ZSL.indexToLoc(a,t.length,n.ZSL.computeStrides(t)).join(",");throw Error(`indices[${s}] = ${e} is not in [0, ${r})`)}})}(o,l,t[0][0]-1),0===s.length)throw Error("params.rank must be nonzero");let{outSplits:h,valueSlices:p,numValues:d}=function(e,t,r,n){let a=[],s=0,i=Array(t.length-1+r.length).fill(null).map(()=>[0]);!function(e,t){for(let r=0;r<e.length;++r){let n=e[r],a=r===e.length-1?t:e[r+1].length;if(0===n.length)throw Error("Ragged splits may not be empty");if(n[0]<0)throw Error("Ragged splits must be non-negative");if(n[n.length-1]>a)throw Error("Ragged splits must not point past values");for(let e=1;e<n.length;++e)if(n[e-1]>n[e])throw Error("Ragged splits must be sorted in ascending order")}}(r,n);let o=1;for(let e=0;e<t.length-1;++e){o*=t[e];let r=t[e+1];for(let t=1;t<o+1;++t)i[e].push(t*r)}for(let n=0;n<e.length;++n){let o=e[n],l=e[n]+1;for(let e=0;e<r.length;++e){let n=r[e],a=e+t.length-1;if(a>=0){let e=i[a],t=e[e.length-1]-n[o];for(let e=o;e<l;++e)i[a].push(n[e+1]+t)}o=n[o],l=n[l]}l!==o&&(a.push([o,l]),s+=l-o)}return{outSplits:i,valueSlices:a,numValues:s}}(o,l,e,s[0]),c=function(e){let t=[];for(let r=0;r<e.length;++r){let a=e[r].length,s=n.ZSL.getArrayFromDType("int32",a);t.push(s),e[r].forEach((e,t)=>s[t]=e)}return t}(h),f=function(e,t,r,s,i){let o=t.slice();o[0]=i;let l=n.ZSL.getArrayFromDType(r,n.ZSL.sizeFromShape(o)),u=e.length,h=0===u?0:u/t[0];return!function(e,t,r,n,s,i){let o=a(t,2)[1],l=a(i,2)[1],u=0;for(let t of r)for(let r=t[0];r<t[1];++r){for(let t=0;t<n;++t)s[u*l+t]=e[r*o+t];++u}}(e,t,s,h,l,o),[l,o]}(r,s,i,p,d);return[c,f[0],f[1]]}},48424:(e,t,r)=>{"use strict";r.d(t,{_:()=>a});var n=r(92289);function a(e,t,r,a,s,i,o){if(t.length>1)throw Error("starts must be a scalar or vector");if(s.length>1)throw Error("limits must be a scalar or vector");if(o.length>1)throw Error("deltas must be a scalar or vector");let l=0===t.length,u=0===s.length,h=0===o.length,p=[];l||p.push(t[0]),u||p.push(s[0]),h||p.push(o[0]);for(let e=1;e<p.length;++e)if(p[e]!==p[e-1])throw Error("starts, limits, and deltas must have the same shape");let d=0===p.length?1:p[0],c=n.ZSL.getArrayFromDType("int32",d+1);c[0]=0;for(let t=0;t<d;++t){let r;let n=l?e[0]:e[t],s=u?a[0]:a[t],o=h?i[0]:i[t];if(0===o)throw Error("Requires delta != 0");if(o>0&&s<n||o<0&&s>n)r=0;else if((r=Math.ceil(Math.abs((s-n)/o)))>0x7fffffff)throw Error("Requires ((limit - start) / delta) <= 2147483647");c[t+1]=c[t]+r}let f=c[d],m=n.ZSL.getArrayFromDType(r,f),g=0;for(let t=0;t<d;++t){let r=c[t+1]-c[t],n=l?e[0]:e[t],a=h?i[0]:i[t];for(let e=0;e<r;++e)m[g++]=n,n+=a}return[c,m]}},85768:(e,t,r)=>{"use strict";r.d(t,{K:()=>l});var n=r(92289),a=n.C0T.RowPartitionType;class s{constructor(e,t,r,a,s,i,o,l,u,h){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=a,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=n.C0T.getRowPartitionTypesHelper(h),this.raggedRank=n.C0T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===a.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===a.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case a.VALUE_ROWIDS:return s.getMaxWidthValueRowID(t);case a.ROW_SPLITS:return s.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${a[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let r=0;for(let n=0;n<t-1;++n){let t=e[n+1]-e[n];t>r&&(r=t)}return r}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let r=0,n=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==n&&(n=t,a=Math.max(s-r,a),r=s)}return Math.max(t-r,a)}tensorShapeFromTensor(e,t,r=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return o(e,r)}calculateOutputSize(e){let t=this.valuesShape,r=this.defaultValueShape;n.C0T.validateDefaultValueShape(r,t);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=n.C0T.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,r){let a=Math.min(e,r),s=[],i=0;for(let e=0;e<a;++e,i+=t)s.push(i);for(let t=a;t<e;++t)s.push(-1);return n.ZSL.assert(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,r,n){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(n,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=r;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,r,n){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i<n?l+=r:l=-1);else{if(i=0,o=a,a>=t.length)throw Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw Error("Invalid row ids.");return s}calculateOutputIndex(e,t,r,n){let s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case a.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,r,n);case a.ROW_SPLITS:if(s.length-1>t.length)throw Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,r,n);default:throw Error(`Unsupported partition type: ${a[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case a.FIRST_DIM_SIZE:return e[0];case a.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case a.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${a[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),r=Array(this.raggedRank+1);r[r.length-1]=1;for(let e=r.length-2;e>=0;--e)r[e]=r[e+1]*t[e+1];let a=o(t,!1),s=n.ZSL.getArrayFromDType(this.valuesDType,n.ZSL.sizeFromShape(a));if(r[0]*t[0]>0){let n=this.calculateFirstParentOutputIndex(e,r[0],t[0]);for(let e=1;e<=this.raggedRank;++e)n=this.calculateOutputIndex(e-1,n,r[e],t[e]);this.setOutput(this.raggedRank,n,s,a)}return[a,s]}setOutput(e,t,r,a){if(0===r.length)return;let s=this.values,o=a.slice();o=o.slice(e+1);let l=n.ZSL.sizeFromShape(o),u=t.length,h=this.defaultValue;if(h.length!==l&&1!==h.length){let e=this.defaultValueShape;(0,n.DZQ)(()=>{let t=(0,n.tQQ)(h,e);h=(0,n.hOW)(t,o).dataSync()})}let p=0,d=0,c=0;for(let e=0;e<=u;++e){let n=e<u?t[e]:-1;if(n===c){++c;continue}if(d<c){let e=s.subarray(p*l);i(r.subarray(d*l),e,(c-d)*l)}if(e>=u&&(n=Math.floor(r.length/l)),n>c){if(1===this.defaultValue.length)r.subarray(c*l,n*l).fill(this.defaultValue[0]),c=n;else for(;n>c;)i(r.slice(c*l),h,l),++c}n<0?(p=e+1,d=c):(p=e,c=(d=c)+1)}}}function i(e,t,r){for(let n=0;n<r;n++)e[n]=t[n]}function o(e,t){let r=[];for(let n of e){if(n<0){if(!t)throw Error(`Dimension ${n} must be >= 0`);if(n<-1)throw Error(`Dimension ${n} must be >= -1`);n=-1}r.push(n)}return r}function l(e,t,r,n,a,i,o,l,u,h){return new s(e,t,r,n,a,i,o,l,u,h).compute()}},77778:(e,t,r)=>{"use strict";r.d(t,{q:()=>a});var n=r(92289);function a(e,t,r,a){let s=e<t&&r<0,i=t<e&&r>1;if(e===t||s||i)return n.ZSL.makeZerosTypedArray(0,a);let o=Math.abs(Math.ceil((t-e)/r)),l=n.ZSL.makeZerosTypedArray(o,a);t<e&&1===r&&(r=-1),l[0]=e;for(let e=1;e<l.length;e++)l[e]=l[e-1]+r;return l}},90082:(e,t,r)=>{"use strict";function n(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.real,s=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,s)}r.d(t,{r:()=>a,x:()=>n});let a={kernelName:r(92289).LRy,backendName:"cpu",kernelFunc:n}},12634:(e,t,r)=>{"use strict";r.d(t,{Lt:()=>l,Zy:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>1/Math.sqrt(e)),o=(0,s.F)(n.TOR,i),l={kernelName:n.TOR,backendName:"cpu",kernelFunc:o}},487:(e,t,r)=>{"use strict";r.d(t,{b:()=>a});var n=r(92289);function a(e,t,r,a,s,i,o,l,u,h){let p=e.values,d=t.values;if(0===a)return(0,n.ra8)(r,t.dtype);let c=u instanceof n.ylz?u:(0,n.ra8)([a/s,s],t.dtype);"string"==typeof u?c.values.fill(u):"number"==typeof u?c.values.fill(u):"boolean"==typeof u&&c.values.fill(+u);for(let e=0;e<i;e++){let n=[],i=0;for(let t=0;t<o;t++){let r=p[e*o+t];n.push(r),i+=r*l[t]}if(i<0||i>=a/s)throw Error(`Invalid indices: ${n} does not index into ${r}`);for(let r=0;r<s;r++)h?c.values[i*s+r]+=d[e*s+r]:c.values[i*s+r]=0===t.rank?d[0]:d[e*s+r]}return c}},13646:(e,t,r)=>{"use strict";r.d(t,{X3:()=>l,ry:()=>o,zv:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>1/(1+Math.exp(-e))),o=(0,s.v)(n.vI1,e=>1/(1+Math.exp(-e))),l={kernelName:n.vI1,backendName:"cpu",kernelFunc:o}},95988:(e,t,r)=>{"use strict";r.d(t,{HS:()=>s,di:()=>i,lv:()=>o});var n=r(92289),a=r(28494);function s(e,t,r,a,s){let i=n.Kro.isSliceContinous(a,t,r),o=n.ZSL.sizeFromShape(r),l=n.ZSL.computeStrides(a);if(i){let r=n.Kro.computeFlatOffset(t,l);return"string"===s?e.slice(r,r+o):e.subarray(r,r+o)}let u="string"===s?n.C0T.fromUint8ToStringArray(e):e,h=(0,n.ra8)(a,s,u),p=(0,n.ra8)(r,s);for(let e=0;e<p.size;++e){let r=p.indexToLoc(e),n=r.map((e,r)=>e+t[r]);p.set(h.get(...n),...r)}return"string"===s?n.C0T.fromStringArrayToUint8(p.values):p.values}function i(e){let{inputs:t,backend:r,attrs:i}=e,{x:o}=t,{begin:l,size:u}=i;(0,a.C)(o,"slice");let[h,p]=n.Kro.parseSliceParams(o,l,u);n.Kro.assertParamsValid(o,h,p);let d=s(r.data.get(o.dataId).values,h,p,o.shape,o.dtype);return r.makeTensorInfo(p,o.dtype,d)}let o={kernelName:n.JiE,backendName:"cpu",kernelFunc:i}},77112:(e,t,r)=>{"use strict";r.d(t,{y:()=>a});var n=r(92289);function a(e,t,r,a,s,i,o){let l=t[0],u=i[0],h=Array(u),p=Array(l),d=t[1];if(0===u){if(0!==l)throw Error(n.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));return[n.ZSL.getArrayFromDType(r,0),[0,d],n.ZSL.getArrayFromDType(s,0),h,p]}let c=!0,f=0,m=Array(u).fill(0);for(let t=0;t<l;++t){let r=e[t*d];if(r<0)throw Error(n.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,r));if(r>=u)throw Error(n.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,r,u));++m[r],c=c&&r>=f,f=r}let g=!0;for(let e=0;e<u;++e){let t=0===m[e];h[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&c){for(let e=0;e<l;++e)p[e]=e;return[e,[l,d],a,h,p]}{let t=m[u-1],i=n.ZSL.getArrayFromDType(r,t*d),c=n.ZSL.getArrayFromDType(s,t),f=Array(u).fill(0);for(let t=0;t<l;++t){let r=e[t*d],n=f[r],s=(0===r?0:m[r-1])+n;f[r]++;for(let r=0;r<d;++r)i[s*d+r]=e[t*d+r];c[s]=a[t],p[t]=s}for(let e=0;e<u;++e)if(0===f[e]){let t=0===e?0:m[e-1];i[t*d+0]=e;for(let e=1;e<d;++e)i[t*d+e]=0;c[t]=o}return[i,[t,d],c,h,p]}}},40075:(e,t,r)=>{"use strict";r.d(t,{l:()=>a});var n=r(92289);function a(e,t,r,a,s){let i=n.ZSL.sizeFromShape(a),o=t[0],l=s.length,u=[],h=1,p=-1;for(let e=0;e<l;++e){let t=s[e];if(-1===t){if(-1!==p)throw Error(n.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,e));p=e,u.push(1)}else{if(t<0)throw Error(n.C0T.getSparseReshapeNegativeOutputDimErrorMessage(e,t));h*=t,u.push(t)}}if(-1!==p){if(h<=0)throw Error(n.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(i/h);if(h*e!==i)throw Error(n.C0T.getSparseReshapeInputOutputMultipleErrorMessage(a,u));u[p]=e}if(n.ZSL.sizeFromShape(u)!==i)throw Error(n.C0T.getSparseReshapeInputOutputMismatchErrorMessage(a,u));let d=a.length,c=[];if(d>0){c[d-1]=1;for(let e=d-2;e>=0;--e)c[e]=c[e+1]*a[e+1]}let f=[];if(l>0){f[l-1]=1;for(let e=l-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}let m=n.ZSL.getArrayFromDType(r,o*l);for(let t=0;t<o;++t){let r=0;for(let n=0;n<d;++n)r+=e[t*d+n]*c[n];for(let e=0;e<l;++e)m[t*l+e]=Math.trunc(r/f[e]),r%=f[e]}return[m,[o,l],u]}},34719:(e,t,r)=>{"use strict";r.d(t,{z:()=>a});var n=r(92289);function a(e,t,r,s,i,o=!1,l=0){let u=s.length,h=[t[0],e.length/t[0]],p=h[1],d=u>0?i[u-1]+1:0;if(d<0)throw Error(n.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=d;let f=c.reduce((e,t)=>e*t,1),m=n.ZSL.getArrayFromDType(r,f);if(0===u)return d>0&&m.fill(l),[m,c];if(d<=0)throw Error(n.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,y=1,b=0,x=i[0];for(;;){let t=0;if(y<u){if(x===(t=i[y])){++y;continue}if(x>=t)throw Error(n.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw Error(n.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>b&&m.fill(l,b*p,x*p);for(let t=g;t<y;++t){let r=s[t];if(r<0||r>=h[0])throw Error(n.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,s[t],h[0]));for(let t=0;t<p;t++)m[x*p+t]+=e[r*p+t]}if(o)for(let e=0;e<p;e++)m[x*p+e]/=y-g;if(g=y,++y,b=x+1,x=t,y>u)break}return b<d&&m.fill(l,b*p,d*p),[m,c]}},16008:(e,t,r)=>{"use strict";r.d(t,{Fu:()=>l,x6:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)(e=>Math.sqrt(e)),o=(0,s.v)(n.dFH,e=>Math.sqrt(e)),l={kernelName:n.dFH,backendName:"cpu",kernelFunc:o}},11533:(e,t,r)=>{"use strict";r.d(t,{C:()=>l,_:()=>i});var n=r(92289),a=r(30333),s=r(25920);let i=(0,a.o)((e,t)=>{let{pattern:r,replaceGlobal:n,rewrite:a}=t;return e.replace(new RegExp(r,n?"g":""),a)}),o=(0,s.F)(n.GZp,i),l={kernelName:n.GZp,backendName:"cpu",kernelFunc:o}},31180:(e,t,r)=>{"use strict";r.d(t,{e:()=>a});var n=r(92289);function a(e,t,r,a){let s=(0,n.ra8)(e,t.dtype);for(let e=0;e<s.size;e++){let n=s.indexToLoc(e),i=Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[e]*r[e]+a[e];s.set(t.get(...i),...n)}return s}},86656:(e,t,r)=>{"use strict";r.d(t,{G:()=>s});var n=r(92289);class a{constructor(e,t,r,a,s,i){this.separator=n.ZSL.encodeString(e),this.nGramWidths=t,this.leftPad=n.ZSL.encodeString(r),this.rightPad=n.ZSL.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,r,n,a,s){for(let i=0;i<a;++i){let o;let l=this.getPadWidth(s),u=Math.max(0,l-i),h=Math.max(0,l-(a-(i+1))),p=s-(u+h),d=t+(u>0?0:i-l);o=0+u*this.leftPad.length;for(let t=0;t<p;++t)o+=e[d+t].length;o+=h*this.rightPad.length,o+=(u+h+p-1)*this.separator.length,r[n+i]=new Uint8Array(o);let c=r[n+i],f=0,m=e=>e.forEach(e=>c[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<p-1;++t)m(e[d+t]),m(this.separator);if(p>0){m(e[d+p-1]);for(let e=0;e<h;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<h-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let r=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let n=1;n<a;++n){let a=t[n]>=e;if(!(a=a&&t[n]<=r))throw Error(`Invalid split value ${t[n]}, must be in [${e}, ${r}]`);e=t[n]}if(e!==r)throw Error(`Last split value must be data size. Expected ${r}, got ${e}`)}let s=a-1,i=n.ZSL.getArrayFromDType("int32",a);if(0===r||0===a){let e=Array(r);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){let r=t[e]-t[e-1],n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(r,e)}),this.preserveShort&&r>0&&0===n&&(n=1),i[e]=i[e-1]+n}let o=Array(i[s]);for(let r=0;r<s;++r){let n=t[r],a=i[r];if(this.nGramWidths.forEach(s=>{let i=t[r+1]-t[r],l=this.getNumNGrams(i,s);this.createNGrams(e,n,o,a,l,s),a+=l}),this.preserveShort&&a===i[r]){let s=t[r+1]-t[r];if(0===s)continue;let i=s+2*this.padWidth;this.createNGrams(e,n,o,a,1,i)}}return[o,i]}}function s(e,t,r,n,s,i,o,l){return new a(r,n,s,i,o,l).compute(e,t)}},74520:(e,t,r)=>{"use strict";r.d(t,{S:()=>a});var n=r(92289);function a(e,t,r){let a=e.length,s=[],i=0,o=0,l=Array(a);for(let n=0;n<a;++n){let a=s.length;!function(e,t,r,n){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)n.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);r&&0===t.length||n.push(t),s=(e=e.subarray(s+1)).indexOf(a)}r&&0===e.length||n.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);r&&0===t.length||n.push(t),a=s+1}}(e[n],t,r,s);let u=s.length-a;l[n]=u,i+=u,o=Math.max(o,u)}let u=n.ZSL.getArrayFromDType("int32",2*i),h=Array(i),p=[a,o],d=0;for(let e=0;e<a;++e)for(let t=0;t<l[e];++t)u[2*d]=e,u[2*d+1]=t,h[d]=s[d],++d;return[u,h,p]}},49169:(e,t,r)=>{"use strict";r.d(t,{f:()=>a});var n=r(92289);function a(e,t){let r=n.ZSL.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)r[a]=n.ZSL.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return r}},15444:(e,t,r)=>{"use strict";r.d(t,{Zl:()=>u,dl:()=>i,jb:()=>l});var n=r(92289),a=r(51825),s=r(54292);let i=(0,a.Z)((e,t)=>e-t),o=(0,s.B)((e,t,r,n)=>({real:e-r,imag:t-n})),l=(0,s.j)(n.PbM,i,o),u={kernelName:n.PbM,backendName:"cpu",kernelFunc:l}},53609:(e,t,r)=>{"use strict";r.d(t,{D:()=>a});var n=r(92289);function a(e,t){let r=Array(e.rank);for(let n=0;n<r.length;n++)r[n]=e.shape[n]*t[n];let a=(0,n.ra8)(r,e.dtype);for(let t=0;t<a.values.length;++t){let r=a.indexToLoc(t),n=Array(e.rank);for(let t=0;t<n.length;t++)n[t]=r[t]%e.shape[t];let s=e.locToIndex(n);a.values[t]=e.values[s]}return a}},71725:(e,t,r)=>{"use strict";r.d(t,{x:()=>s});var n=r(92289);let a=(e,t)=>{let r=t.value-e.value;return 0===r?e.index-t.index:r};function s(e,t,r,s,i){let o=t[t.length-1],[l,u]=[e.length/o,o],h=n.ZSL.getTypedArrayFromDType(r,l*s),p=n.ZSL.getTypedArrayFromDType("int32",l*s);for(let t=0;t<l;t++){let r=t*u,o=e.subarray(r,r+u),l=Array(o.length);o.forEach((e,t)=>l[t]={value:e,index:t}),s<l.length&&(function e(t,r,s=0,i=t.length-1){for(;i>s;){if(i-s>600){let n=i-s+1,a=r-s+1,o=Math.log(n),l=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*l*(n-l)/n)*Math.sign(a-n/2),h=Math.max(s,Math.floor(r-a*l/n+u)),p=Math.min(i,Math.floor(r+(n-a)*l/n+u));e(t,r,h,p)}let o=t[r],l=s,u=i;for(n.ZSL.swap(t,s,r),a(t[i],o)>0&&n.ZSL.swap(t,s,i);l<u;){for(n.ZSL.swap(t,l,u),l++,u--;0>a(t[l],o);)l+=1;for(;a(t[u],o)>0;)u-=1}0===a(t[s],o)?n.ZSL.swap(t,s,u):(u+=1,n.ZSL.swap(t,u,i)),u<=r&&(s=u+1),r<=u&&(i=u-1)}}(l,s),l=l.slice(0,s)),i&&l.sort(a);let d=t*s,c=h.subarray(d,d+s),f=p.subarray(d,d+s);for(let e=0;e<s;e++)c[e]=l[e].value,f[e]=l[e].index}let d=t.slice();return d[d.length-1]=s,[(0,n.ra8)(d,r,h),(0,n.ra8)(d,"int32",p)]}},4957:(e,t,r)=>{"use strict";r.d(t,{W:()=>o,m:()=>i});var n=r(92289),a=r(28494),s=r(59848);function i(e){let{inputs:t,attrs:r,backend:n}=e,{x:i}=t,{perm:o}=r;(0,a.C)(i,"transpose");let l=Array(i.shape.length);for(let e=0;e<l.length;e++)l[e]=i.shape[o[e]];let u=n.data.get(i.dataId).values,h=(0,s._)(u,i.shape,i.dtype,o,l);return{dataId:n.write(h,l,i.dtype),shape:l,dtype:i.dtype}}let o={kernelName:n.wx0,backendName:"cpu",kernelFunc:i}},59848:(e,t,r)=>{"use strict";r.d(t,{_:()=>a});var n=r(92289);function a(e,t,r,a,s){let i=t.length,o=n.ZSL.sizeFromShape(t),l=n.ZSL.computeStrides(t),u=n.ZSL.computeStrides(s),h=n.ZSL.getTypedArrayFromDType(r,n.ZSL.sizeFromShape(s));for(let t=0;t<o;++t){let r=n.ZSL.indexToLoc(t,i,l),s=Array(r.length);for(let e=0;e<s.length;e++)s[e]=r[a[e]];h[n.ZSL.locToIndex(s,i,u)]=e[t]}return h}},47456:(e,t,r)=>{"use strict";r.d(t,{w:()=>a});var n=r(92289);function a(e,t,r,a){let s=n.ZSL.parseAxisParam(t,r)[0],i=[1,r[0],1];for(let e=0;e<s;e++)i[0]*=r[e];i[1]=r[s];for(let e=s+1;e<r.length;e++)i[2]*=r[e];let o=new Map,l=new Int32Array(r[s]),u=new n.ylz(i,a,e),h=[],p=1===i[0]&&1===i[2];for(let t=0;t<r[s];t++){let r;if(p)r=e[t].toString();else{let e=[];for(let r=0;r<i[0];r++)for(let n=0;n<i[2];n++)e.push(u.get(r,t,n));r=e.join(",")}let n=o.get(r);if(null!=n)l[t]=n;else{let e=o.size;o.set(r,e),l[t]=e,h.push(t)}}let d=i.slice();d[1]=o.size;let c=new n.ylz(d,a);h.forEach((e,t)=>{for(let r=0;r<i[0];r++)for(let n=0;n<i[2];n++)c.set(u.get(r,e,n),r,t,n)});let f=r.slice();return f[s]=d[1],{outputValues:c.values,outputShape:f,indices:l}}},51825:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var n=r(92289);function a(e){return(t,r,a,s,i)=>{let o=n.C0T.assertAndGetBroadcastShape(t,r),l=o.length,u=n.ZSL.computeStrides(o),h=n.ZSL.sizeFromShape(o),p=n.ZSL.getTypedArrayFromDType(i,h),d=t.length,c=r.length,f=n.ZSL.computeStrides(t),m=n.ZSL.computeStrides(r),g=n.C0T.getBroadcastDims(t,o),y=n.C0T.getBroadcastDims(r,o);if(g.length+y.length===0)for(let t=0;t<p.length;++t)p[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<p.length;++t){let r=n.ZSL.indexToLoc(t,l,u),i=r.slice(-d);g.forEach(e=>i[e]=0);let o=n.ZSL.locToIndex(i,d,f),h=r.slice(-c);y.forEach(e=>h[e]=0);let b=n.ZSL.locToIndex(h,c,m);p[t]=e(a[o],s[b])}return[p,o]}}},54292:(e,t,r)=>{"use strict";r.d(t,{B:()=>l,j:()=>o});var n=r(92289),a=r(28494),s=r(23613),i=r(10338);function o(e,t,r,o){return null==r?({inputs:r,backend:s})=>{let{a:i,b:l}=r;(0,a.C)([i,l],e);let u=s.data.get(i.dataId).values,h=s.data.get(l.dataId).values,p="string"===i.dtype?n.C0T.fromUint8ToStringArray(u):u,d="string"===i.dtype?n.C0T.fromUint8ToStringArray(h):h,c=o||i.dtype,[f,m]=t(i.shape,l.shape,p,d,c);return s.makeTensorInfo(m,c,f)}:({inputs:e,backend:n})=>{let{a,b:l}=e;if("complex64"===a.dtype||"complex64"===l.dtype){let e=(0,s.wg)({inputs:{x:a},backend:n,attrs:{dtype:"complex64"}}),t=n.data.get(e.dataId),o=t.complexTensorInfos.real,u=t.complexTensorInfos.imag,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=(0,s.wg)({inputs:{x:l},backend:n,attrs:{dtype:"complex64"}}),c=n.data.get(d.dataId),f=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,g=n.data.get(f.dataId).values,y=n.data.get(m.dataId).values,[b,x,v]=r(a.shape,l.shape,h,p,g,y),w=n.makeTensorInfo(v,"float32",b),T=n.makeTensorInfo(v,"float32",x),S=(0,i.f)({inputs:{real:w,imag:T},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(T),S}{let e=n.data.get(a.dataId).values,r=n.data.get(l.dataId).values,s=o||a.dtype,[i,u]=t(a.shape,l.shape,e,r,s);return n.makeTensorInfo(u,s,i)}}}function l(e){return(t,r,a,s,i,o)=>{let l=n.C0T.assertAndGetBroadcastShape(t,r),u=n.ZSL.sizeFromShape(l),h=l.length,p=n.ZSL.computeStrides(l),d=n.ZSL.getTypedArrayFromDType("float32",u),c=n.ZSL.getTypedArrayFromDType("float32",u),f=n.C0T.getBroadcastDims(t,l),m=n.C0T.getBroadcastDims(r,l),g=n.C0T.mergeRealAndImagArrays(a,s),y=n.C0T.mergeRealAndImagArrays(i,o),b=t.length,x=n.ZSL.computeStrides(t),v=r.length,w=n.ZSL.computeStrides(r);if(f.length+m.length===0)for(let t=0;t<d.length;t++){let r=t%g.length,n=t%y.length,a=e(g[2*r],g[2*r+1],y[2*n],y[2*n+1]);d[t]=a.real,c[t]=a.imag}else for(let t=0;t<d.length;t++){let r=n.ZSL.indexToLoc(t,h,p),a=r.slice(-b);f.forEach(e=>a[e]=0);let s=n.ZSL.locToIndex(a,b,x),i=r.slice(-v);m.forEach(e=>i[e]=0);let o=n.ZSL.locToIndex(i,v,w),l=e(g[2*s],g[2*s+1],y[2*o],y[2*o+1]);d[t]=l.real,c[t]=l.imag}return[d,c,l]}}},30333:(e,t,r)=>{"use strict";r.d(t,{o:()=>a});var n=r(92289);function a(e){return(t,r,a)=>{let s=n.ZSL.getArrayFromDType(r,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}},25920:(e,t,r)=>{"use strict";r.d(t,{F:()=>o,v:()=>i});var n=r(92289),a=r(28494),s=r(30333);function i(e,t,r){return o(e,(0,s.o)(t),r)}function o(e,t,r){return({inputs:s,attrs:i,backend:o})=>{let l;let{x:u}=s;(0,a.C)(u,e);let h=o.data.get(u.dataId).values;if("string"===u.dtype){if(!Array.isArray(h))throw Error("String tensor's value was not an instance of Array");l=n.C0T.fromUint8ToStringArray(h)}else l=h;let p=r||u.dtype,d=t(l,p,i);return o.makeTensorInfo(u.shape,p,d)}}},93565:(e,t,r)=>{"use strict";r.d(t,{U:()=>function e(t,r,s="float32"){if("complex64"===s){let n=e(t,r,"float32"),s=e(t,r,"float32");return(0,a.f)({inputs:{real:n,imag:s},backend:t})}let i=n.ZSL.makeZerosTypedArray(n.ZSL.sizeFromShape(r),s);return t.makeTensorInfo(r,s,i)}});var n=r(92289),a=r(10338)},70771:(e,t,r)=>{"use strict";r.d(t,{bU:()=>function e(t,r){if(!(t in a)||null!=r){let e=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let r=null==t?function(e){if(!(0,n._K2)().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return(r.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete a[e]},!1),(0,n._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(s.failIfMajorPerformanceCaveat=!1),1===e)?r.getContext("webgl",s)||r.getContext("experimental-webgl",s):r.getContext("webgl2",s)}(t,r);if(null===e)return console.log("Could not get context for WebGL version",t),null;a[t]=e}let i=a[t];return null==i||i.isContextLost()?(delete a[t],e(t)):(i.disable(i.DEPTH_TEST),i.disable(i.STENCIL_TEST),i.disable(i.BLEND),i.disable(i.DITHER),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SAMPLE_COVERAGE),i.enable(i.SCISSOR_TEST),i.enable(i.CULL_FACE),i.cullFace(i.BACK),a[t])},lj:()=>i});var n=r(92289);let a={},s={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){a[e]=t}},14825:(e,t,r)=>{"use strict";r.d(t,{K:()=>o});var n=r(29709),a=r(22900),s=r(80162),i=r(45524);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i.BB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=(0,n.B)();this.outputShape=e,this.enableShapeUniforms=(0,a.ik)(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?s.WA(["r","c","d"],e):s.UG(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}},88:(e,t,r)=>{"use strict";r.d(t,{S:()=>o});var n=r(29709),a=r(22900),s=r(80162),i=r(45524);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i.BB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=(0,n.B)();this.outputShape=e,this.enableShapeUniforms=(0,a.ik)(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?s.WA(["r","c","d"],e):s.UG(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}},5e4:(e,t,r)=>{"use strict";r.d(t,{$:()=>i});var n=r(29709),a=r(80162),s=r(45524);class i{constructor(e){this.variableNames=["A"],this.outTexUsage=s.tT.DOWNLOAD;let t=(0,n.B)();this.outputShape=e,this.userCode=`
      ${a.G2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}},92431:(e,t,r)=>{"use strict";r.d(t,{N:()=>i});var n=r(29709),a=r(80162),s=r(45524);class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=s.tT.DOWNLOAD;let t=(0,n.B)();this.outputShape=e,this.userCode=`
      ${a.G2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}},56785:(e,t,r)=>{"use strict";r.d(t,{C:()=>o});var n=r(29709),a=r(22900),s=r(80162);let i={R:0,G:1,B:2,A:3};class o{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=(0,n.B)();this.outputShape=e,this.enableShapeUniforms=(0,a.ik)(this.outputShape.length);let l="result";t&&(l="floor(result * 255. + 0.5)");let u="";for(let e=0;e<r.length;e++){let t=r[e];u+=`
          if(offset == ${e}) {
            result = values[${i[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?s.Od():s.fM(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${u}
        }
        ${o.output} = vec4(${l}, 0., 0., 0.);
      }
    `}}},20432:(e,t,r)=>{"use strict";r.d(t,{A:()=>i});var n=r(29709),a=r(22900),s=r(80162);class i{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=(0,n.B)();this.outputShape=e,this.enableShapeUniforms=(0,a.ik)(this.outputShape.length);let i="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){let a=2*t+n;i+=`
          localCoords = coords;
          if(localCoords[2] + ${n} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${n};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${a}] = values[0];
            } else if (offset == 1) {
              result[${a}] = values[1];
            } else if (offset == 2) {
              result[${a}] = values[2];
            } else {
              result[${a}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?s.Od():s.fM(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${r.output} = ${o};
        }
    `}}},8639:(e,t,r)=>{"use strict";var n=r(92289),a=r(21256);let s=(0,n._K2)();s.registerFlag("HAS_WEBGL",()=>s.getNumber("WEBGL_VERSION")>0),s.registerFlag("WEBGL_VERSION",()=>(0,a.Zj)(2)?2:(0,a.Zj)(1)?1:0),s.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),s.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===s.get("WEBGL_VERSION")),s.registerFlag("WEBGL_CPU_FORWARD",()=>!0),s.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),s.registerFlag("WEBGL_PACK",()=>s.getBool("HAS_WEBGL")),s.registerFlag("WEBGL_PACK_NORMALIZATION",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_CLIP",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_REDUCE",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_LAZILY_UNPACK",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_CONV_IM2COL",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(0,a.Se)(s.getNumber("WEBGL_VERSION"))),s.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(0,a.jL)(s.getNumber("WEBGL_VERSION"))),s.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=s.getNumber("WEBGL_VERSION");return 0===e?0:(0,a.VJ)(e)}),s.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>s.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!n.eMq.isMobile()),s.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(0,a.I2)(s.getNumber("WEBGL_VERSION"))),s.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!s.getBool("WEBGL_FORCE_F16_TEXTURES")&&s.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),s.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(0,a.N6)(s.getNumber("WEBGL_VERSION"))),s.registerFlag("WEBGL_FENCE_API_ENABLED",()=>(0,a.Ut)(s.getNumber("WEBGL_VERSION"))),s.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>s.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),s.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),s.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>n.eMq.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),s.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),s.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),s.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),s.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),s.registerFlag("WEBGL_EXP_CONV",()=>!1),s.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>s.getBool("IS_TEST")),s.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),s.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),s.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),s.registerFlag("ENGINE_COMPILE_ONLY",()=>!1)},29709:(e,t,r)=>{"use strict";r.d(t,{B:()=>a});var n=r(92289);function a(){let e,t,r,a,s,i,o,l,u,h;return 2===(0,n._K2)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",r="out",a="in",s="texture",i="outputColor",o="out vec4 outputColor;",l=(0,n._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",h=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",r="varying",a="varying",s="texture2D",i="gl_FragColor",o="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,h=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:r,varyingFs:a,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:h}}},18677:(e,t,r)=>{"use strict";r.d(t,{n:()=>l});var n=r(92289),a=r(70771),s=r(64806),i=r(45524),o=r(21256);class l{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=(0,n._K2)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,(0,a.lj)(t,e)):this.gl=(0,a.bU)(t),e=this.gl,2===(0,n._K2)().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>o.ul(t,()=>t.createVertexArray()),this.bindVertexArray=e=>o.ul(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>o.ul(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>o.ul(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>o.ul(e,()=>t.createVertexArrayOES()),this.bindVertexArray=r=>o.ul(e,()=>t.bindVertexArrayOES(r)),this.deleteVertexArray=r=>o.ul(e,()=>t.deleteVertexArrayOES(r)),this.getVertexArray=()=>o.ul(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float",l="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,n._K2)().getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=o.HM(this.gl,"OES_texture_float"),o.Ql(this.gl,e))this.textureHalfFloatExtension=o.HM(this.gl,e);else if((0,n._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),o.Ql(this.gl,l))this.colorBufferHalfFloatExtension=o.HM(this.gl,l);else if((0,n._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",o.Ql(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(o.Ql(this.gl,l))this.colorBufferHalfFloatExtension=this.gl.getExtension(l);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=s.b1(this.gl),this.indexBuffer=s.Ng(this.gl),this.framebuffer=o.oN(this.gl),this.textureConfig=i.EZ(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,n._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;o.ul(e,()=>e.finish()),o.ul(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),o.ul(e,()=>e.deleteFramebuffer(this.framebuffer)),o.ul(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),o.ul(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),o.ul(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),s.cD(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),s.WH(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),s.Hw(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),s.qg(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,n){this.throwIfDisposed(),s.y7(this.gl,e,t,r,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),s.Me(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),s.bG(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(o.sA(this.gl,this.framebuffer),this.outputTexture=null),o.ul(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>s.ir(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,n,a,i){return s.SD(this.gl,e,t,r,n,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return s.$k(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);let n=s.zP(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if((0,n._K2)().getBool("WEBGL_FENCE_API_ENABLED")){let n=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{let t=e.clientWaitSync(n,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=n}else(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>s.uS(this.gl,t,r))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=s.yr(t));let r=o.rC(t);o.ul(t,()=>t.attachShader(r,this.vertexShader)),o.ul(t,()=>t.attachShader(r,e)),o.R7(t,r);let n=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&o.bz(t,n),n}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;o.ul(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),s.Z(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(o.ul(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&o.bz(this.gl,this.program),o.ul(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return(this.throwIfDisposed(),r)?o.Rh(this.gl,e,t):o.Yn(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),o.ul(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),o.y_(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();let[n,a]=i.NO(t,r);this.setOutputMatrixTextureDriver(e,n,a)}setOutputMatrixWriteRegion(e,t,r,n){this.setOutputMatrixWriteRegionDriver(r,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,r,n){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&o.bz(this.gl,this.program),o.s6(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),o.ul(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),o.ul(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=o.HM(this.gl,2===(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await n.ZSL.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,(0,n._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),r=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let r;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in(0,n._K2)().platform&&(r=(0,n._K2)().platform.setTimeoutCustom.bind((0,n._K2)().platform)),n.ZSL.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,r))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),o.SO(this.gl,e,this.framebuffer),this.debug&&o.s6(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(o.SO(this.gl,this.outputTexture,this.framebuffer),this.debug&&o.s6(this.gl)):o.sA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();let n=this.gl;o.SO(n,e,this.framebuffer),this.debug&&o.s6(n),this.outputTexture=e,o.ul(n,()=>n.viewport(0,0,t,r)),o.ul(n,()=>n.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,n){this.throwIfDisposed(),o.ul(this.gl,()=>this.gl.scissor(e,t,r,n))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}},22900:(e,t,r)=>{"use strict";r.d(t,{Kz:()=>i,Tb:()=>h,Tw:()=>o,ik:()=>p,mB:()=>u});var n=r(92289),a=r(57997),s=r(21256);function i(e,t,r,i){let l=r.map((e,r)=>{let n={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(n.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[r],shapeInfo:n}}),u=l.map(e=>e.shapeInfo),h={logicalShape:i.shape,texShape:i.texData.texShape,isUniform:!1,isPacked:i.texData.isPacked,flatOffset:null},p=a.yr(l,h,t),d=(0,s.yG)(e.gl,p),c=e.createProgram(d);return(0,n._K2)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:d,source:p,webGLProgram:c,inShapeInfos:u,outShapeInfo:h,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:d,source:p,webGLProgram:c,inShapeInfos:u,outShapeInfo:h},o(e,t,c)))}function o(e,t,r){let a,s,i;let o=[],l=[],u=null,h=null;for(let a of(h=e.getUniformLocation(r,"NAN",!1),1===(0,n._K2)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(r,"INFINITY",!1)),t.variableNames)){let n={name:a,uniform:e.getUniformLocation(r,a,!1),offset:e.getUniformLocation(r,`offset${a}`,!1)};t.enableShapeUniforms&&(n.shape=e.getUniformLocation(r,`${a}Shape`,!1),n.texShape=e.getUniformLocation(r,`${a}TexShape`,!1)),o.push(n)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(r,"outShape",!1),i=e.getUniformLocation(r,"outShapeStrides",!1),s=e.getUniformLocation(r,"outTexShape",!1)),t.customUniforms)for(let n of t.customUniforms)l.push(e.getUniformLocation(r,n.name,!1));return{variablesLocations:o,customUniformLocations:l,infLoc:u,nanLoc:h,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:s}}function l(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,r)=>{let a=e.logicalShape,s=t[r],i=s.shape;if(!n.ZSL.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&s.isUniform)return;let o=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!n.ZSL.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function u(e,t,r,s,i){t.program.enableShapeUniforms||(l(t.inShapeInfos,r),l([t.outShapeInfo],[s]));let o=s.texData.texture,u=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,u[0],u[1]):e.setOutputMatrixTexture(o.texture,u[0],u[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,n._K2)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let s=0;s<r.length;++s){let i=r[s],{uniform:o,offset:l,shape:u,texShape:h}=t.variablesLocations[s];if(u){let{uniformShape:r}=a.YE(t.program.packedInputs,i.shape,i.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(h&&e.gl.uniform2i(h,i.texData.texShape[0],i.texData.texShape[1]),null!=o){if(i.isUniform){if(2>n.ZSL.sizeFromShape(i.shape))e.gl.uniform1f(o,i.uniformValues[0]);else{let t=i.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}continue}null!=i.texData.slice&&null!=l&&e.gl.uniform1i(l,i.texData.slice.flatOffset),e.setInputMatrixTexture(i.texData.texture.texture,o,s)}}let h=t.outShapeLocation;if(h)switch(s.shape.length){case 1:e.gl.uniform1iv(h,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(h,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(h,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(h,new Int32Array(s.shape))}if(t.outShapeStridesLocation){let r=n.ZSL.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(r));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(r));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(r))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&i)for(let r=0;r<t.program.customUniforms.length;++r){let n=t.program.customUniforms[r],a=t.customUniformLocations[r],s=i[r];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else if("ivec4"===n.type)e.gl.uniform4iv(a,s);else throw Error(`uniform type ${n.type} is not supported yet.`)}e.executeProgram()}function h(e,t,r){let s="";t.concat(r).forEach(t=>{let i=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let o=t.texData.texShape,{useSqueezeShape:l,uniformShape:u,keptDims:h}=a.YE(e.packedInputs,t.shape,o),p="",d="",c="";if(1===u.length&&e.packedInputs){let e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];p=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){let e=n.ZSL.computeStrides(u);c=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;let f=t.shape.length,m=2===u.length&&n.ZSL.arraysEqual(t.shape,o),g=1===n.ZSL.sizeFromShape(t.shape),y=n.C0T.getBroadcastDims(t.shape,r.shape),b=!e.packedInputs&&f===r.shape.length&&n.ZSL.arraysEqual(o,r.texData.texShape),x=e.packedInputs||u.length>2?"":`${o[0]>1}_${o[1]>1}`;s+=`${f}_${b}_${l?h:""}_${u.length}_${g}_${y}_${m}_${p}_${d}_${c}_${x}_${i}`}else{let e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${i}`}});let i=e.userCode;return e.constructor.name+("_"+s+"_"+i)+`${(0,n._K2)().getNumber("WEBGL_VERSION")}`}function p(e){return(0,n._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}},64806:(e,t,r)=>{"use strict";r.d(t,{$k:()=>k,Hw:()=>g,Ij:()=>y,J$:()=>c,Me:()=>v,Ng:()=>u,SD:()=>C,WH:()=>f,Z:()=>w,b1:()=>l,bG:()=>b,cD:()=>d,fj:()=>p,ir:()=>I,qg:()=>S,uS:()=>E,wM:()=>m,y7:()=>T,yr:()=>o,z8:()=>x,zP:()=>N});var n=r(92289),a=r(29709),s=r(45524),i=r(21256);function o(e){let t=(0,a.B)(),r=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return i.yr(e,r)}function l(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return i.HW(e,t)}function u(e){let t=new Uint16Array([0,1,2,2,1,3]);return i.$e(e,t)}function h(e,t,r,a,s,o){i.ph(t,r);let l=i.sZ(e),u=e.TEXTURE_2D;return i.ul(e,()=>e.bindTexture(u,l)),i.ul(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),i.ul(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),i.ul(e,()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)),i.ul(e,()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===(0,n._K2)().getNumber("WEBGL_VERSION")?i.ul(e,()=>e.texImage2D(u,0,a,t,r,0,s,o,null)):i.ul(e,()=>e.texStorage2D(u,1,a,t,r)),i.ul(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:l,texShape:[r,t]}}function p(e){return e.internalFormatFloat}function d(e,t,r,n){let[a,i]=s.Qn(t,r);return h(e,a,i,p(n),n.textureFormatFloat,e.FLOAT)}function c(e){return e.internalFormatHalfFloat}function f(e,t,r,n){let[a,i]=s.Qn(t,r);return h(e,a,i,c(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function m(e){return e.downloadTextureFormat}function g(e,t,r,n){let[a,i]=s.Qn(t,r);return h(e,a,i,m(n),e.RGBA,e.UNSIGNED_BYTE)}function y(e){return e.internalFormatPackedFloat}function b(e,t,r,n){let[a,i]=s.NO(t,r);return h(e,a,i,y(n),e.RGBA,e.FLOAT)}function x(e){return e.internalFormatPackedHalfFloat}function v(e,t,r,n){let[a,i]=s.NO(t,r);return h(e,a,i,x(n),e.RGBA,n.textureTypeHalfFloat)}function w(e,t,r){return i.ul(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),i.rw(e,t,"clipSpacePos",r,3,20,0)&&i.rw(e,t,"uv",r,2,20,12)}function T(e,t,r,a,s,o){let l,u,h;i.ul(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(l=new Uint8Array(r*a*4),u=e.UNSIGNED_BYTE,h=e.RGBA):(l=new Float32Array(r*a*4),u=e.FLOAT,h=o.internalFormatPackedFloat),l.set(s),2===(0,n._K2)().getNumber("WEBGL_VERSION")?i.ul(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r,a,e.RGBA,u,l)):i.ul(e,()=>e.texImage2D(e.TEXTURE_2D,0,h,r,a,0,e.RGBA,u,l)),i.ul(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function S(e,t,r){i.ul(e,()=>e.bindTexture(e.TEXTURE_2D,t)),r.data instanceof Uint8Array?2===(0,n._K2)().getNumber("WEBGL_VERSION")?i.ul(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r.width,r.height,e.RGBA,e.UNSIGNED_BYTE,r.data)):i.ul(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)):2===(0,n._K2)().getNumber("WEBGL_VERSION")?i.ul(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,r)):i.ul(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)),i.ul(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function N(e,t,r,n){let a=e.createBuffer();i.ul(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*r;return i.ul(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),i.ul(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,0)),i.ul(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function k(e,t,r){let n=new Float32Array(r);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,n),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),n}function I(e,t,r,n){let[a,o]=s.Qn(t,r),l=new Uint8Array(s.EX(t*r,4));return i.ul(e,()=>e.readPixels(0,0,a,o,n.downloadTextureFormat,e.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function C(e,t,r,n,a,i,o,l){let u=new Float32Array(s.PM(i,o));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,u),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),u}function E(e,t,r){let n=new Float32Array(t*r*4);return i.ul(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,n)),n}},17808:(e,t,r)=>{"use strict";r.d(t,{Gs:()=>X,jm:()=>J,h0:()=>ee,PA:()=>et,Kf:()=>er,Md:()=>en,dv:()=>ea,PP:()=>es,E$:()=>ei,SF:()=>eo,CJ:()=>el,UF:()=>eu,QM:()=>eh,BW:()=>ed,Tm:()=>ep,mo:()=>ef,uw:()=>ec,AC:()=>em,rI:()=>eg,rw:()=>ey,Dy:()=>eb,h:()=>ex,Xe:()=>ev,rQ:()=>ew,ad:()=>eT,Og:()=>eS,G4:()=>eN,Oy:()=>ek,G3:()=>eI,we:()=>eC,tc:()=>eE,fC:()=>eA,BC:()=>e$,f8:()=>eR,J3:()=>eF,sB:()=>e_,vo:()=>eD,zN:()=>eO,LF:()=>eL,yZ:()=>eM,cy:()=>eP,UC:()=>ez,S6:()=>eB,fW:()=>eW,lL:()=>eV,$O:()=>eU,xt:()=>eG,Q5:()=>eZ,M_:()=>ej});var n={};r.r(n),r.d(n,{mx:()=>s.mx,XI:()=>i.X,Nk:()=>i.N,f6:()=>o.f6,ct:()=>l.ct,YG:()=>u.YG,hH:()=>h.h,z3:()=>p.z3,sG:()=>d.sG,uM:()=>c.uM,vS:()=>f.vS,qB:()=>m.q,GG:()=>g.G,lg:()=>b.lg,rq:()=>y.rq,cu:()=>v.cu,WR:()=>x.WR,GE:()=>w.G,px:()=>T.px,jC:()=>S.j,He:()=>N.He,hE:()=>k.hE,BF:()=>I.BF,Dk:()=>C.Dk,cl:()=>E.cl,_B:()=>A._B,ub:()=>$.u,_f:()=>R._,Ku:()=>F.K,qy:()=>_.q,Zy:()=>D.Zy,bu:()=>O.b,zv:()=>L.zv,dH:()=>a.dH,HS:()=>M.HS,yH:()=>P.y,l3:()=>z.l,z9:()=>B.z,x6:()=>W.x6,_m:()=>V._,eW:()=>U.e,GK:()=>G.G,SP:()=>Z.S,yr:()=>j.f,dl:()=>K.dl,Dw:()=>H.D,xT:()=>Y.x,_X:()=>Q._,wz:()=>q.w});var a=r(57774),s=r(44457),i=r(46893),o=r(68018),l=r(23613),u=r(26779),h=r(59317),p=r(42486),d=r(65085),c=r(60615),f=r(92464),m=r(17370),g=r(17108),y=r(6080),b=r(39772),x=r(54739),v=r(65225),w=r(83360),T=r(78036),S=r(9927),N=r(31144),k=r(91122),I=r(24686),C=r(88456),E=r(17329),A=r(67055),$=r(22966),R=r(48424),F=r(85768),_=r(77778),D=r(12634),O=r(487),L=r(13646),M=r(95988),P=r(77112),z=r(40075),B=r(34719),W=r(16008),V=r(11533),U=r(31180),G=r(86656),Z=r(74520),j=r(49169),K=r(15444),H=r(53609),Y=r(71725),Q=r(59848),q=r(47456);let{mx:X,XI:J,Nk:ee,f6:et,ct:er,YG:en,hH:ea,z3:es,sG:ei,uM:eo,vS:el,qB:eu,GG:eh,rq:ep,lg:ed,WR:ec,cu:ef,GE:em,px:eg,jC:ey,He:eb,hE:ex,BF:ev,Dk:ew,cl:eT,_B:eS,ub:eN,_f:ek,Ku:eI,qy:eC,Zy:eE,bu:eA,zv:e$,dH:eR,HS:eF,yH:e_,l3:eD,z9:eO,x6:eL,_m:eM,eW:eP,GK:ez,SP:eB,yr:eW,dl:eV,Dw:eU,xT:eG,_X:eZ,wz:ej}=n},46842:(e,t,r)=>{"use strict";r.d(t,{m:()=>i});var n=r(22900),a=r(69158),s=r(57997);class i{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=(0,n.ik)(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=(0,a.Jp)("rc",this.rank),t=(0,s.bf)(this.rank),r=this.getOutOfBoundsCondition(e),n=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${n}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let r=0;r<=1;r++)for(let n=0;n<=1;n++){let a=`${0===r?"r":"rp1"}, ${0===n?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);if(1===this.rank){let e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}},69158:(e,t,r)=>{"use strict";function n(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function a(e,t){return 1===t?[e]:n(e,t)}function s(e,t){if(1===e)return"rc";let r="";for(let n=0;n<e;n++)r+=t[n],n<e-1&&(r+=",");return r}r.d(t,{Fd:()=>n,Jp:()=>a,kp:()=>s})},76408:(e,t,r)=>{"use strict";r.d(t,{R:()=>s});var n=r(22900),a=r(80162);class s{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=(0,n.ik)(this.outputShape.length);let r="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),r+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${function(e,t){let r=t?a.TN(["r","c","d"],"inputShape"):a.UG(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${r}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?a.Od():a.fM(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}},80162:(e,t,r)=>{"use strict";r.d(t,{G2:()=>u,Od:()=>l,TN:()=>i,UG:()=>a,WA:()=>s,fM:()=>o});var n=r(92289);function a(e,t,r="index"){let s=n.ZSL.computeStrides(t);return s.map((t,n)=>{let a=`int ${e[n]} = ${r} / ${t}`,i=n===s.length-1?`int ${e[n+1]} = ${r} - ${e[n]} * ${t}`:`index -= ${e[n]} * ${t}`;return`${a}; ${i};`}).join("")}function s(e,t,r="index"){let a=n.ZSL.computeStrides(t);return a.map((t,n)=>{let s=`int ${e[n]} = ${r} / outShapeStrides[${n}]`,i=n===a.length-1?`int ${e[n+1]} = ${r} - ${e[n]} * outShapeStrides[${n}]`:`index -= ${e[n]} * outShapeStrides[${n}]`;return`${s}; ${i};`}).join("")}function i(e,t,r="index"){let n=function(e,t){let r=e.length,n=e.map(e=>`${t}[${e}]`),a=Array(r-1);a[r-2]=n[r-1];for(let e=r-3;e>=0;--e)a[e]=`(${a[e+1]} * ${n[e+1]})`;return a}(e.map((e,t)=>t),t);return n.map((t,a)=>{let s=`int ${e[a]} = ${r} / ${n[a]}`,i=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * ${n[a]}`:`index -= ${e[a]} * ${n[a]}`;return`${s}; ${i};`}).join("")}function o(e){let t=n.ZSL.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function l(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}let u=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`},45524:(e,t,r)=>{"use strict";r.d(t,{BB:()=>n,EX:()=>l,EZ:()=>d,GM:()=>u,NO:()=>h,PM:()=>p,Qn:()=>o,j:()=>s,tT:()=>a});var n,a,s,i=r(92289);function o(e,t){return[t,e]}function l(e,t){return e*t}function u(e){let t=Math.ceil(i.ZSL.sizeFromShape(e)/4);return i.ZSL.sizeToSquarishShape(t)}function h(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function p(e,t){let[r,n]=h(e,t);return r*n*4}function d(e,t){let r,n,a,s,o,l,u,h,p,d;return 2===(0,i._K2)().getNumber("WEBGL_VERSION")?(r=e.R32F,n=e.R16F,a=e.RGBA16F,s=e.RGBA32F,o=e.RED,u=4,h=1,p=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(r=e.RGBA,n=e.RGBA,a=e.RGBA,s=e.RGBA,o=e.RGBA,u=4,h=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(n||(n={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(a||(a={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(s||(s={}))},36117:(e,t,r)=>{"use strict";r.d(t,{p:()=>i});var n=r(92289),a=r(64806),s=r(45524);class i{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){let n;let a=l(t,r),i=u(e,a,r);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let h=o(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=h,this.log();let e=this.freeTextures[i].pop();return this.usedTextures[i].push(e),e}return a===s.j.PACKED_2X2_FLOAT32?n=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===s.j.PACKED_2X2_FLOAT16?n=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===s.j.UNPACKED_FLOAT32?n=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===s.j.UNPACKED_FLOAT16?n=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===s.j.PACKED_4X1_UNSIGNED_BYTE&&(n=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(n),this.numUsedTextures++,this._numBytesAllocated+=h,this.log(),n}releaseTexture(e,t,r,a){if(null==this.freeTextures)return;let s=l(r,a),i=u(t,s,a);i in this.freeTextures||(this.freeTextures[i]=[]);let h=o(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),p=(0,n._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==p&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=h):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=h),this.numUsedTextures--;let d=this.usedTextures[i],c=d&&d.indexOf(e);if(null==c||c<0)throw Error("Cannot release a texture that was never provided by this texture manager");d[c]=d[d.length-1],d.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function o(e,t,r,n,i){let o;let l=function(e,t){switch(e){case s.j.PACKED_2X2_FLOAT32:return(0,a.Ij)(t);case s.j.PACKED_2X2_FLOAT16:return(0,a.z8)(t);case s.j.UNPACKED_FLOAT32:return(0,a.fj)(t);case s.j.UNPACKED_FLOAT16:return(0,a.J$)(t);case s.j.PACKED_4X1_UNSIGNED_BYTE:return(0,a.wM)(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,n);if(i){let[t,r]=(0,s.NO)(e[0],e[1]);o=t*r}else{let[t,r]=(0,s.Qn)(e[0],e[1]);o=t*r}return o*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(r,l)}function l(e,t){if(e===s.tT.UPLOAD)return s.j.PACKED_2X2_FLOAT32;if(e===s.tT.RENDER||null==e)return(0,n._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?s.j.PACKED_2X2_FLOAT32:s.j.UNPACKED_FLOAT32:t?s.j.PACKED_2X2_FLOAT16:s.j.UNPACKED_FLOAT16;if(e===s.tT.DOWNLOAD||e===s.tT.PIXELS)return s.j.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function u(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}},16587:(e,t,r)=>{"use strict";r.d(t,{Hq:()=>d,Nb:()=>h,UC:()=>p,X0:()=>l,X8:()=>u,_Q:()=>i,dR:()=>s,hE:()=>a,pd:()=>o});var n=r(22900);class a{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=(0,n.ik)(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let s="if (isnan(x)) return x;",i="return x;",o="return abs(x);",l="return (x >= 0.0) ? x : (exp(x) - 1.0);",u=s+`
  return (x < 0.0) ? 0.0 : x;
`,h=s+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,p="return x;",d="return 1.0 / (1.0 + exp(-1.0 * x));"},3362:(e,t,r)=>{"use strict";r.d(t,{Hq:()=>l,Nb:()=>o,X0:()=>s,X8:()=>i,_Q:()=>a,rf:()=>u});var n=r(22900);let a="return x;",s=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,i=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,l="return 1.0 / (1.0 + exp(-1.0 * x));";class u{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=(0,n.ik)(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}},9109:(e,t,r)=>{"use strict";r.d(t,{z:()=>i});var n=r(22900),a=r(69158),s=r(57997);class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=(0,n.ik)(this.outputShape.length);let t=e.length,r=(0,a.Jp)("rc",t),i=(0,s.bf)(t),o=(0,a.kp)(t,r),l=r.slice(-2),u=t<=1?"rc":`vec2(${l.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${u}));
      }
    `}}},21256:(e,t,r)=>{"use strict";let n,a;r.d(t,{$e:()=>x,CE:()=>Z,FP:()=>_,HM:()=>h,HW:()=>b,I2:()=>W,N0:()=>R,N6:()=>V,P0:()=>O,Ph:()=>F,Ql:()=>z,R7:()=>g,Rh:()=>N,SO:()=>C,Se:()=>L,Ut:()=>G,VJ:()=>P,Yn:()=>k,Zj:()=>B,bz:()=>y,cr:()=>f,dm:()=>u,fA:()=>D,jL:()=>M,oN:()=>T,ph:()=>w,rC:()=>m,rw:()=>S,s6:()=>A,sA:()=>E,sZ:()=>v,ul:()=>l,yG:()=>d,y_:()=>I,yr:()=>p});var s=r(92289),i=r(70771),o=r(45524);function l(e,t){let r=t();return(0,s._K2)().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),r}function u(e){return!!((0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||596e-10<Math.abs(e)&&65504>Math.abs(e))}function h(e,t){return $(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function p(e,t){let r=$(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(l(e,()=>e.shaderSource(r,t)),l(e,()=>e.compileShader(r)),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),Error("Failed to compile vertex shader.");return r}function d(e,t){let r=$(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(l(e,()=>e.shaderSource(r,t)),l(e,()=>e.compileShader(r)),(0,s._K2)().get("ENGINE_COMPILE_ONLY"))return r;if(!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw f(t,e.getShaderInfoLog(r)),Error("Failed to compile fragment shader.");return r}let c=/ERROR: [0-9]+:([0-9]+):/g;function f(e,t){let r=c.exec(t);if(null==r){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+r[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map((e,t)=>s.ZSL.rightPad((t+1).toString(),i)+e),l=0;for(let e=0;e<o.length;e++)l=Math.max(o[e].length,l);let u=o.slice(0,n-1),h=o.slice(n-1,n),p=o.slice(n);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.ZSL.rightPad(h[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function m(e){return $(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function g(e,t){if(l(e,()=>e.linkProgram(t)),!(0,s._K2)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}function y(e,t){if(l(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function b(e,t){let r=$(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return l(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),l(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function x(e,t){let r=$(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return l(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)),l(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function v(e){return $(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function w(e,t){let r=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>r||t>r)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${r}x${r}].`)}function T(e){return $(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function S(e,t,r,n,a,s,i){let o=e.getAttribLocation(t,r);return -1!==o&&(l(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),l(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),l(e,()=>e.enableVertexAttribArray(o)),!0)}function N(e,t,r){return $(e,()=>e.getUniformLocation(t,r),'uniform "'+r+'" not present in program.')}function k(e,t,r){return e.getUniformLocation(t,r)}function I(e,t,r,n){l(e,()=>{(function(e,t){let r=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>r){let e=`[gl.TEXTURE0, gl.TEXTURE${r}]`;throw Error(`textureUnit must be in ${e}.`)}})(e,n),l(e,()=>e.activeTexture(e.TEXTURE0+n)),l(e,()=>e.bindTexture(e.TEXTURE_2D,t))}),l(e,()=>e.uniform1i(r,n))}function C(e,t,r){l(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),l(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function E(e,t){l(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),l(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function A(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $(e,t,r){let n=l(e,()=>t());if(null==n)throw Error(r);return n}function R(e,t=2){return s.ZSL.sizeFromShape(e.slice(0,e.length-t))}function F(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function _(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[R(e),...F(e)]),t}function D(e,t=!1){let r=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=(0,s._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&(0,s._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=r/2),t&&(r*=2,n*=2,1===(e=e.map((t,r)=>r>=e.length-2?s.ZSL.nearestLargerEven(e[r]):e[r])).length&&(e=[2,e[0]])),2!==e.length&&(e=s.ZSL.squeezeShape(e).newShape);let a=s.ZSL.sizeFromShape(e),i=null;e.length<=1&&a<=r?i=[1,a]:2===e.length&&e[0]<=r&&e[1]<=r?i=e:3===e.length&&e[0]*e[1]<=r&&e[2]<=r?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=r&&e[1]*e[2]<=r?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r&&(i=[e[0],e[1]*e[2]*e[3]]);let o=null!=i&&Math.max(...i)>n&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o){if(t){let t=R(e),r=2,n=2;e.length&&([r,n]=F(e)),a=r/2*t*(n/2),i=s.ZSL.sizeToSquarishShape(a).map(e=>2*e)}else i=s.ZSL.sizeToSquarishShape(a)}return i}function O(e,t){if(e=e.slice(-2),t=t.slice(-2),s.ZSL.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let r=e[e.length-1],n=t[t.length-1];if(r===n||r%2==0&&n%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function L(e){if(null==n){let t=(0,i.bU)(e);n=t.getParameter(t.MAX_TEXTURE_SIZE)}return n}function M(e){if(null==a){let t=(0,i.bU)(e);a=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,a)}function P(e){if(0===e)return 0;let t=(0,i.bU)(e);return z(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:z(t,"EXT_disjoint_timer_query")?1:0}function z(e,t){return null!=e.getExtension(t)}function B(e){try{let t=(0,i.bU)(e);if(null!=t)return!0}catch(e){console.log("Error when getting WebGL context: ",e)}return!1}function W(e){if(0===e)return!1;let t=(0,i.bU)(e);if(1===e){if(!z(t,"OES_texture_float"))return!1}else if(!z(t,"EXT_color_buffer_float"))return!1;return U(t)}function V(e){if(0===e)return!1;let t=(0,i.bU)(e);if(1===e){if(!z(t,"OES_texture_float")||!z(t,"WEBGL_color_buffer_float"))return!1}else{if(z(t,"EXT_color_buffer_float"))return U(t);let e="EXT_color_buffer_half_float";if(z(t,e)){let r=t.getExtension(e);return function(e,t){let r=(0,o.EZ)(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,r.internalFormatHalfFloat,1,1,0,r.textureFormatFloat,r.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),s}(t,r)}return!1}return U(t)}function U(e){let t=(0,o.EZ)(e),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(n),a}function G(e){return 2===e&&null!=(0,i.bU)(e).fenceSync}function Z(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&s.ZSL.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}},72687:(e,t,r)=>{"use strict";r.d(t,{GJ:()=>n,uI:()=>a});class n{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,r){return s("write")}move(e,t,r,n,a){return s("move")}createTensorFromGPUData(e,t,r){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},70315:(e,t,r)=>{"use strict";function n(e,t){return e>t?1:e<t?-1:0}function a(e,t,r,n,a){return o(e,t,r,n,a,0)}function s(e,t,r,n,a,s){return o(e,t,r,n,a,0,!1,s,!0)}function i(e,t,r,n,a,s){return o(e,t,r,n,a,s,!0)}function o(e,t,r,a,s,i,u=!1,h=!1,p=!1){let d=[];for(let e=0;e<t.length;e++)t[e]>s&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(l);let c=i>0?-.5/i:0,f=[],m=[];for(;f.length<r&&d.length>0;){let t=d.pop(),{score:r,boxIndex:i,suppressBeginIndex:o}=t;if(r<s)break;let u=!1;for(let r=f.length-1;r>=o;--r){let n=function(e,t,r){let n=e.subarray(4*t,4*t+4),a=e.subarray(4*r,4*r+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(Math.min(o,p)-Math.max(s,u),0)*Math.max(Math.min(l,d)-Math.max(i,h),0);return m/(c+f-m)}(e,i,f[r]);if(n>=a){u=!0;break}if(t.score=t.score*function(e,t,r){let n=Math.exp(t*r*r);return r<=e?n:0}(a,c,n),t.score<=s)break}t.suppressBeginIndex=f.length,!u&&(t.score===r?(f.push(i),m.push(t.score)):t.score>s&&function(e,t,r){let a=function(e,t,r){let n=0,a=e.length,s=0,i=!1;for(;n<a;){let o=r(t,e[s=n+(a-n>>>1)]);o>0?n=s+1:(a=s,i=!o)}return i?n:-n-1}(e,t,r||n);e.splice(a<0?-(a+1):a,0,t)}(d,t,l))}let g=f.length,y=r-g;h&&y>0&&(f.push(...Array(y).fill(0)),m.push(...Array(y).fill(0)));let b={selectedIndices:f};return u&&(b.selectedScores=m),p&&(b.validOutputs=g),b}function l(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}r.d(t,{c7:()=>a,ZS:()=>s,ut:()=>i})},99375:(e,t,r)=>{"use strict";r.d(t,{Y:()=>a});var n=r(97698);function a(e,t){let r=[];for(let e=0;e<t.length;e++)t[e]&&r.push(e);let a=(0,n.r)(e,"int32"),s=(0,n.r)([r.length,e.length],"int32");for(let t=0;t<r.length;t++){let n=a.indexToLoc(r[t]),i=t*e.length;s.values.set(n,i)}return s.toTensor()}},54685:(e,t,r)=>{"use strict";r.d(t,{T2:()=>x,Ye:()=>b});var n=r(72687),a=r(57414),s=r(33871),i=r(71699),o=r(54338),l=r(82717),u=r(27708),h=r(23299);class p{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,r){let n,s;let i=()=>{n=r()},o=u.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{for(let e of(i(),n))e.dataSync();s=Promise.resolve({kernelMs:u.now()-o})}if((0,a._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<n.length;t++){let r=n[t];r.data().then(t=>{!function(e,t,r){if("float32"===t)for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${r}'`),!0}}(t,r.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:r,timeMs:n,inputs:a,extraInfo:s}=e;r.forEach(e=>{Promise.all([e.data(),n,s]).then(r=>{this.logger.logKernelProfile(t,e,r[0],r[1],a,r[2])})})}}class d{logKernelProfile(e,t,r,n,a,s){let i="number"==typeof n?h.av(`${n}ms`,9):n.error,o=h.av(e,25),l=t.rank,u=t.size,p=h.av(t.shape.toString(),14),d="";for(let e in a){let r=a[e];if(null!=r){let n=r.shape||t.shape,a=n.length;d+=`${e}: ${a}D ${a>0?n:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${p}	%c${u}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var c=r(3449),f=r(4525);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(l.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new p(this.backendInstance),!0}setupRegisteredKernels(){(0,o.Op)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){(0,o.Op)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let r=t.factory();if(!r||r instanceof n.uI||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,n=r.then(r=>!(t<this.pendingBackendInitId)&&(this.registry[e]=r,this.pendingBackendInit=null,!0)).catch(r=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,l.i(`Initialization of backend ${e} failed`),l.i(r.stack||r.message),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return l.i(`Initialization of backend ${e} failed`),l.i(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],{success:n,asyncInit:a}=this.initializeBackend(r);if(a||n)return{name:r,asyncInit:a}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let r=this.state.tensorInfo.get(t),n=r.backend,a=this.readSync(t),s=n.refCount(t);n.disposeData(t,!0),r.backend=e,e.move(t,a,r.shape,r.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r,n=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>((r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,r){e();try{let e=r();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){let t=x.runKernel(i.lzr,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>x.runKernel(i.KXH,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,r){if(null==this.backendName&&this.backend,!(null!=(0,o._5)(e,this.backendName)))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){let n=this.backend.numDataIds(),a=0;r.forEach(e=>{a+="complex64"===e.dtype?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-t-a-s;if(i>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r,n,a;let s=[],i=this.isTapeOn(),l=this.state.numBytes,u=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let p=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){let{kernelName:t,inputs:a,attrs:l}=e;null==this.backendName&&this.backend;let u=(0,o._5)(t,this.backendName);h.vA(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),r=()=>{let e=this.backend.numDataIds(),r=Array.isArray(n=u.kernelFunc({inputs:a,attrs:l,backend:this.backend}))?n:[n];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,r);let o=r.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(i){let e=this.getTensorsForGradient(t,a,o);s=this.saveTensorsForBackwardMode(e)}return o}}else{let{forwardFunc:t}=e,a=e=>{i&&(s=e.map(e=>this.keep(this.clone(e))))};r=()=>{let e=this.backend.numDataIds(),r=Array.isArray(n=this.tidy(()=>t(this.backend,a)))?n:[n];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,e,r),r}}let{inputs:d,attrs:c}=e,f=m(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(a=this.profiler.profileKernel(p,d,()=>r()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(a),t=a.outputs):t=r()}),i&&this.addTapeNode(p,d,t,f,s,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:p,bytesAdded:this.state.numBytes-l,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-u,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:a.timeMs,extraInfo:a.extraInfo}),Array.isArray(n)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,r){let n=(0,o.vQ)(e);if(null!=n){let e;let a=n.inputsToSave||[],s=n.outputsToSave||[];n.saveAllInputs?(h.vA(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=a.map(e=>t[e]);let i=r.filter((e,t)=>s[t]);return e.concat(i)}return[]}makeTensor(e,t,r,n){if(null==e)throw Error("Values passed to engine.makeTensor() are null");r=r||"float32",n=n||this.backend;let a=e;"string"===r&&h.Kg(e[0])&&(a=e.map(e=>u.encodeString(e)));let s=n.write(a,t,r),i=new c.qY(t,r,s,this.nextTensorId());if(this.trackTensor(i,n),"string"===r){let e=this.state.tensorInfo.get(s),t=(0,h.SL)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,r,n){let a={dataId:e,shape:t,dtype:r=r||"float32"};return this.makeTensorFromTensorInfo(a,n)}makeTensorFromTensorInfo(e,t){let{dataId:r,shape:n,dtype:a}=e,s=new c.qY(n,a,r,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,r,n){r=r||this.nextVariableId().toString(),null!=n&&n!==e.dtype&&(e=e.cast(n));let a=new c.rT(e,t,r,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*h.jv(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof c.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*h.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,r=this.state.numTensors;for(let n of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r,this.state.activeProfile.kernels))n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,r,n,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:a},l=(0,o.vQ)(e);null!=l&&(n=l.gradFunc),null!=n&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=r[t],n=h.Ty(e.size,e.dtype);return this.makeTensor(n,e.shape,e.dtype)}return e}),n(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=(0,f.getTensorsInContainer)(e),r=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||r.has(t.id)||t.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==n.id||this.track(e)})}gradients(e,t,r,n=!1){if(h.vA(t.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));h.vA(a instanceof c.qY,()=>"The result y returned by f() must be a tensor.");let s=function(e,t,r){let n={},a={};for(let e=0;e<t.length;e++)n[t[e].id]=!0;for(let r=0;r<e.length;r++){let s=e[r],i=s.inputs;for(let e in i){let r=i[e],o=!1;for(let e=0;e<t.length;e++)if(n[r.id]){s.outputs.forEach(e=>n[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[r.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let r=e[t],n=r.inputs;for(let e=0;e<r.outputs.length;e++)if(s[r.outputs[e].id]){for(let e in n)s[n[e].id]=!0,i[r.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let r=e[t];if(a[r.id]&&i[r.id]){let e={};for(let t in r.inputs){let a=r.inputs[t];n[a.id]&&(e[t]=a)}let t=Object.assign({},r);t.inputs=e,t.outputs=r.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!n&&0===s.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[a.id]=null==r?function(e){let t=(0,h.FZ)((0,h.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):r,function(e,t,r,n){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(t=>{let r=e[t.id];null!=r?i.push(r):i.push(null)}),null==s.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=r(()=>o[t]());if("float32"!==a.dtype)throw Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!h.r1(a.shape,i.shape))throw Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=n(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),v);let n=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:n}})}customGrad(e){return h.vA(h.Tn(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let r;h.vA(t.every(e=>e instanceof c.qY),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n={};return t.forEach((e,t)=>{n[t]=e}),this.runKernelFunc({forwardFunc:(n,a)=>(r=e(...t,a),h.vA(r.value instanceof c.qY,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),h.vA(h.Tn(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(e,n)=>{let a=r.gradFunc(e,n),s=Array.isArray(a)?a:[a];h.vA(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),h.vA(s.every(e=>e instanceof c.qY),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=(0,u.now)(),r=await this.backend.time(e);return r.wallMs=(0,u.now)()-t,r}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){let e=(0,s.L)();if(null==e._tfengine){let t=new a.OH(e);e._tfengine=new y(t)}return(0,a.tj)(e._tfengine.ENV),(0,c.qP)(()=>e._tfengine),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;let x=b();function v(e,t){return x.runKernel(i.OMN,{a:e,b:t})}},57414:(e,t,r)=>{"use strict";r.d(t,{OH:()=>s,_K:()=>o,tj:()=>u});var n=r(23299);let a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null==this.platform||l.getBool("IS_TEST")||l.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},null!=this.urlFlags[e]){let t=this.urlFlags[e];l.getBool("IS_TEST")||l.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if((0,n.yL)(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);a in e&&e[a].split(",").forEach(e=>{let[t,r]=e.split(":");this.urlFlags[t]=function(e,t){let r=t.toLowerCase();return"true"===r||"false"===r?"true"===r:`${+r}`===r?+r:t}(0,r)})}}function i(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>{var n,a;return n=r[0],a=r[1],t[decodeURIComponent(n)]=decodeURIComponent(a||""),r.join("=")}),t}function o(){return l}let l=null;function u(e){l=e}},33871:(e,t,r)=>{"use strict";let n;r.d(t,{L:()=>s,m:()=>i});var a=r(2818);function s(){if(null==n){let e;if("undefined"!=typeof window)e=window;else if(void 0!==r.g)e=r.g;else if(void 0!==a)e=a;else if("undefined"!=typeof self)e=self;else throw Error("Could not find a global object");n=e}return n}function i(e,t){let r=function(){let e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(r.has(e))return r.get(e);{let n=t();return r.set(e,n),r.get(e)}}},711:(e,t,r)=>{"use strict";r.d(t,{AS:()=>h,DZ:()=>u,Hi:()=>o,Hs:()=>f,aC:()=>p,gJ:()=>c,jz:()=>d,m1:()=>l});var n=r(54685),a=r(57414),s=r(3449),i=r(4525);function o(){return n.T2}function l(){return n.T2.memory()}function u(e,t){return n.T2.tidy(e,t)}function h(e){(0,i.getTensorsInContainer)(e).forEach(e=>e.dispose())}function p(e){return n.T2.keep(e)}function d(){return n.T2.backendName}function c(e,t,r=1){return n.T2.registerBackend(e,t,r)}function f(){return n.T2.backend}(0,s.B4)(function(e){(0,a._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")})},51758:(e,t,r)=>{"use strict";r.d(t,{_X:()=>o,y7:()=>i});var n=r(54685),a=r(3449),s=r(23299);function i(e,t){s.vA(s.Tn(e),()=>"The f passed in variableGrads(f) must be a function"),s.vA(null==t||Array.isArray(t)&&t.every(e=>e instanceof a.rT),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let r=null!=t;if(!r)for(let e in t=[],n.T2.registeredVariables)t.push(n.T2.registeredVariables[e]);let i=r?t.filter(e=>!e.trainable):null,o=t.length;t=t.filter(e=>e.trainable),s.vA(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let{value:l,grads:u}=n.T2.gradients(e,t,null,!0);s.vA(u.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s.vA(0===l.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`);let h={};return t.forEach((e,t)=>{null!=u[t]&&(h[e.name]=u[t])}),null!=i&&i.forEach(e=>h[e.name]=null),{value:l,grads:h}}function o(e){return n.T2.customGrad(e)}},92289:(e,t,r)=>{"use strict";let n,a,s;r.d(t,{ljI:()=>e9.ljI,Vvy:()=>e9.Vvy,PH8:()=>e9.PH8,OMN:()=>e9.OMN,EkD:()=>e9.EkD,u8Z:()=>e9.u8Z,FSt:()=>e9.FSt,Jp_:()=>e9.Jp_,p_m:()=>e9.p_m,QKF:()=>e9.QKF,epO:()=>e9.epO,TyE:()=>e9.TyE,lxb:()=>e9.lxb,zP9:()=>e9.zP9,ho8:()=>e9.ho8,cS:()=>e9.cS,wwC:()=>e9.wwC,VCH:()=>e9.VCH,jAQ:()=>e9.jAQ,Ik2:()=>e9.Ik2,N4F:()=>e9.N4F,HNs:()=>e9.HNs,vj7:()=>e9.vj7,KXH:()=>e9.KXH,QDP:()=>e9.QDP,vaV:()=>e9.vaV,pr3:()=>e9.pr3,$zE:()=>e9.$zE,$dB:()=>e9.$dB,p2J:()=>e9.p2J,rFm:()=>e9.rFm,jfg:()=>e9.jfg,A1h:()=>e9.A1h,iGz:()=>e9.iGz,gC7:()=>e9.gC7,Mn0:()=>e9.Mn0,MnK:()=>e9.MnK,MRQ:()=>e9.MRQ,jj_:()=>e9.jj_,nY8:()=>e9.nY8,GJx:()=>rf.GJ,wNW:()=>e9.wNW,TMz:()=>e9.TMz,tGH:()=>e9.tGH,X$8:()=>e9.X$8,nVu:()=>e9.nVu,ORI:()=>e9.ORI,jxD:()=>e9.jxD,pk0:()=>e9.pk0,bP9:()=>e9.bP9,XmO:()=>e9.XmO,Qgm:()=>e9.Qgm,Pah:()=>e9.Pah,rsH:()=>e9.rsH,BRl:()=>e9.BRl,_s9:()=>e9._s9,ox3:()=>e9.ox3,ybN:()=>e9.ybN,ybj:()=>e9.ybj,rGP:()=>e9.rGP,SQl:()=>e9.SQl,BxF:()=>e9.BxF,ZgB:()=>e9.ZgB,ElG:()=>e9.ElG,awo:()=>e9.awo,i5R:()=>e9.i5R,aAr:()=>e9.aAr,T7M:()=>e9.T7M,O4G:()=>e9.O4G,mxL:()=>e9.mxL,XhZ:()=>e9.XhZ,lLS:()=>e9.lLS,OAQ:()=>e9.OAQ,lzr:()=>e9.lzr,dv8:()=>e9.dv8,gIW:()=>e9.gIW,E3$:()=>e9.E3$,iPs:()=>e9.iPs,uI_:()=>rf.uI,jM4:()=>e9.jM4,ToN:()=>e9.ToN,X0$:()=>e9.X0$,mIA:()=>e9.mIA,CwD:()=>e9.CwD,mnI:()=>e9.mnI,tG8:()=>e9.tG8,Cg$:()=>e9.Cg$,RUm:()=>e9.RUm,nZd:()=>e9.nZd,LXA:()=>e9.LXA,VAI:()=>e9.VAI,t3d:()=>e9.t3d,ySp:()=>e9.ySp,cHb:()=>e9.cHb,RXX:()=>e9.RXX,TL8:()=>e9.TL8,LDN:()=>e9.LDN,g5A:()=>e9.g5A,lNG:()=>e9.lNG,LG0:()=>e9.LG0,x7F:()=>e9.x7F,BLA:()=>e9.BLA,WT3:()=>e9.WT3,xu7:()=>e9.xu7,l0G:()=>e9.l0G,SDM:()=>e9.SDM,Zl4:()=>e9.Zl4,e0f:()=>e9.e0f,ylV:()=>e9.ylV,urI:()=>e9.urI,LWX:()=>e9.LWX,ELo:()=>eS,mM$:()=>e9.mM$,ODT:()=>e9.ODT,pyJ:()=>e9.pyJ,Ncv:()=>e9.Ncv,kdj:()=>e9.kdj,oJ2:()=>e9.oJ2,CQC:()=>e9.CQC,mH5:()=>e9.mH5,Q6t:()=>e9.Q6t,LRy:()=>e9.LRy,sDr:()=>e9.sDr,huO:()=>e9.huO,fUj:()=>e9.fUj,P_L:()=>e9.P_L,R23:()=>e9.R23,hgw:()=>e9.hgw,FCQ:()=>e9.FCQ,jOE:()=>e9.jOE,XQy:()=>e9.XQy,D7i:()=>e9.D7i,BK4:()=>e9.BK4,hVg:()=>e9.hVg,TOR:()=>e9.TOR,pJc:()=>e9.pJc,uWl:()=>e9.uWl,l6P:()=>e9.l6P,u$b:()=>e9.u$b,vI1:()=>e9.vI1,YVe:()=>e9.YVe,hql:()=>e9.hql,J3C:()=>e9.J3C,JiE:()=>e9.JiE,rFG:()=>e9.rFG,Fin:()=>e9.Fin,A8B:()=>e9.A8B,C8s:()=>e9.C8s,BoJ:()=>e9.BoJ,L6G:()=>e9.L6G,DvZ:()=>e9.DvZ,jgd:()=>e9.jgd,Blb:()=>e9.Blb,dFH:()=>e9.dFH,M6A:()=>e9.M6A,Ddj:()=>e9.Ddj,GZp:()=>e9.GZp,pnw:()=>e9.pnw,UcO:()=>e9.UcO,YAb:()=>e9.YAb,iW0:()=>e9.iW0,$jE:()=>e9.$jE,PbM:()=>e9.PbM,WuN:()=>e9.WuN,oFs:()=>e9.oFs,iuW:()=>e9.iuW,qYS:()=>ei.qY,ylz:()=>ei.yl,X4r:()=>e9.X4r,FAs:()=>e9.FAs,TBb:()=>e9.TBb,dLy:()=>e9.dLy,wx0:()=>e9.wx0,EwU:()=>e9.EwU,dXR:()=>e9.dXR,pPe:()=>e9.pPe,xJ3:()=>e9.xJ3,Dr:()=>e9.Dr,tnl:()=>td.tnl,WQq:()=>td.WQq,Q7R:()=>td.Q7R,bzn:()=>td.bzn,FLi:()=>td.FLi,$jT:()=>td.$jT,sub:()=>td.sub,Hs:()=>el.Hs,C0T:()=>d,BFc:()=>td.BFc,kSi:()=>td.kSi,T5N:()=>td.T5N,hOW:()=>td.hOW,ZEY:()=>e4,TaL:()=>h,ra8:()=>td.ra8,wgE:()=>td.wgE,zQh:()=>td.zQh,o8B:()=>td.o8B,xWs:()=>td.xWs,I1m:()=>td.I1m,RPU:()=>td.RPU,O5O:()=>td.O5O,P1l:()=>td.P1l,kA9:()=>td.kA9,Xtf:()=>td.Xtf,wX9:()=>td.wX9,IPL:()=>td.IPL,jIJ:()=>td.jIJ,aOp:()=>td.aOp,Gl3:()=>td.Gl3,eMq:()=>o,ASo:()=>el.AS,y4m:()=>td.y4m,EZY:()=>td.EZY,Pqc:()=>td.Pqc,Hi9:()=>el.Hi,_K2:()=>b._K,LCg:()=>td.LCg,Y12:()=>td.Y12,oNF:()=>td.oNF,UG6:()=>td.UG6,y5U:()=>td.y5U,GSj:()=>td.GSj,RIf:()=>td.RIf,cZk:()=>td.cZk,kgh:()=>td.kgh,rhj:()=>td.rhj,DQN:()=>td.DQN,Slp:()=>td.Slp,io:()=>u,aCs:()=>el.aC,kpo:()=>c,H8d:()=>td.H8d,mPL:()=>td.mPL,Rm2:()=>td.Rm2,Kko:()=>td.Kko,HPB:()=>td.HPB,VZ:()=>td.VZ,n76:()=>td.n76,NoW:()=>td.NoW,T9B:()=>td.T9B,jgi:()=>td.jgi,NYV:()=>td.NYV,PhQ:()=>td.PhQ,i2o:()=>td.i2o,m1Z:()=>el.m1,jkA:()=>td.jkA,BpO:()=>td.BpO,Clk:()=>td.Clk,lKK:()=>td.lKK,HZy:()=>td.HZy,dA1:()=>tg,Ec:()=>td.Ec,Mw0:()=>td.Mw0,SaS:()=>td.SaS,P61:()=>td.P61,eVF:()=>td.eVF,n7C:()=>td.n7C,NsG:()=>td.NsG,FE$:()=>td.FE$,YeY:()=>td.YeY,y17:()=>td.y17,gJX:()=>el.gJ,tAK:()=>e5.tA,VVh:()=>td.VVh,tQQ:()=>td.tQQ,BEg:()=>td.BEg,d_2:()=>td.d_2,WfX:()=>td.WfX,wdz:()=>td.wdz,JFn:()=>l,ry7:()=>td.ry7,dik:()=>td.dik,Q$M:()=>td.Q$M,zAd:()=>td.zAd,wck:()=>td.wck,R0O:()=>td.R0O,Kro:()=>to,Vs9:()=>td.Vs9,lw0:()=>td.lw0,lDo:()=>td.lDo,RZD:()=>td.RZD,r2V:()=>td.r2V,t$z:()=>td.t$z,jbE:()=>td.jbE,czq:()=>td.czq,chL:()=>tp.ch,ymU:()=>td.ymU,OEK:()=>td.OEK,tGX:()=>td.tGX,KtR:()=>td.KtR,d_S:()=>tl,DZQ:()=>el.DZ,Vsq:()=>td.Vsq,BaG:()=>tf,mgz:()=>td.mgz,efE:()=>td.efE,K$i:()=>td.K$i,TuY:()=>tp.Tu,ZSL:()=>tu,bvq:()=>td.bvq,bgA:()=>th,_M9:()=>td._M9,Ul9:()=>td.Ul9,POl:()=>td.POl});var i,o={};r.r(o),r.d(o,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var l={};r.r(l),r.d(l,{Serializable:()=>ex,SerializationMap:()=>ev,getRegisteredName:()=>eT,registerClass:()=>ew});var u={};r.r(u),r.d(u,{CompositeArrayBuffer:()=>C.D,browserFiles:()=>eB,browserHTTPRequest:()=>eQ,concatenateArrayBuffers:()=>w.AQ,copyModel:()=>Y,decodeWeights:()=>w.CY,decodeWeightsStream:()=>w.s5,encodeWeights:()=>w.aG,fromMemory:()=>e0,fromMemorySync:()=>e1,getLoadHandlers:()=>I,getModelArtifactsForJSON:()=>w.Ej,getModelArtifactsForJSONSync:()=>w.Rl,getModelArtifactsInfoForJSON:()=>w.oR,getSaveHandlers:()=>k,getWeightSpecs:()=>w.Xf,http:()=>eY,isHTTPScheme:()=>eK,listModels:()=>K,loadWeights:()=>eG,moveModel:()=>Q,registerLoadRouter:()=>N,registerSaveRouter:()=>S,removeModel:()=>H,weightsLoaderFactory:()=>eZ,withSaveHandler:()=>e2,withSaveHandlerSync:()=>e3});var h={};r.r(h),r.d(h,{draw:()=>ts,fromPixels:()=>ti,fromPixelsAsync:()=>tr,toPixels:()=>ta});var p={};r.r(p),r.d(p,{collectGatherOpShapeInfo:()=>ru,computeOutShape:()=>rl,segOpComputeOptimalWindowSize:()=>ro});var d={};r.r(d),r.d(d,{ERF_A1:()=>tP,ERF_A2:()=>tz,ERF_A3:()=>tB,ERF_A4:()=>tW,ERF_A5:()=>tV,ERF_P:()=>tM,PARALLELIZE_THRESHOLD:()=>tI,RowPartitionType:()=>i,SELU_SCALE:()=>tL.X,SELU_SCALEALPHA:()=>tL.j,applyActivation:()=>tw.f2,assertAndGetBroadcastShape:()=>e4.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>ty.WC,assertParamsConsistent:()=>tb,assignToTypedArray:()=>tY,axesAreInnerMostDims:()=>ty.WH,calculateShapes:()=>tO.l8,checkEinsumDimSizes:()=>t1,checkPadOnDimRoundingMode:()=>tv.s_,combineLocations:()=>ty.aF,combineRaggedTensorToTensorShapes:()=>tT,complexWithEvenIndex:()=>tj,complexWithOddIndex:()=>tK,computeConv2DInfo:()=>tv.uf,computeConv3DInfo:()=>tv.p$,computeDefaultPad:()=>tv.G8,computeDilation2DInfo:()=>tv.YQ,computeOptimalWindowSize:()=>tC,computeOutAndReduceShapes:()=>ty.lb,computeOutShape:()=>tx,computePool2DInfo:()=>tv.E6,computePool3DInfo:()=>tv.l5,convertConv2DDataFormat:()=>tv.$Q,decodeEinsumEquation:()=>tJ,eitherStridesOrDilationsAreOne:()=>tv.G0,expandShapeToKeepDim:()=>ty.SM,exponent:()=>tq,exponents:()=>tQ,fromStringArrayToUint8:()=>rp,fromUint8ToStringArray:()=>rh,getAxesPermutation:()=>ty.Em,getBroadcastDims:()=>e4.getBroadcastDims,getComplexWithIndex:()=>tH,getEinsumComputePath:()=>t2,getEinsumPermutation:()=>t0,getFusedBiasGradient:()=>tw.Do,getFusedDyActivation:()=>tw.XB,getImageCenter:()=>tE,getInnerMostAxes:()=>ty.fK,getPermuted:()=>t$,getRaggedRank:()=>tN,getReductionAxes:()=>e4.getReductionAxes,getReshaped:()=>tA,getReshapedPermuted:()=>tR,getRowPartitionTypesHelper:()=>tS,getSliceBeginCoords:()=>tF,getSliceSize:()=>t_,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>t9,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>t5,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>t6,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>re,getSparseReshapeInputOutputMismatchErrorMessage:()=>rr,getSparseReshapeInputOutputMultipleErrorMessage:()=>rt,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>t8,getSparseReshapeNegativeOutputDimErrorMessage:()=>t7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ri,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>rn,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ra,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>rs,getUndoAxesPermutation:()=>ty.gx,isIdentityPermutation:()=>t3,log:()=>tU.R,mergeRealAndImagArrays:()=>tG,prepareAndValidate:()=>tD,prepareSplitSize:()=>t4,segment_util:()=>p,shouldFuse:()=>tw.zE,slice_util:()=>to,splitRealAndImagArrays:()=>tZ,stridesOrDilationsArePositive:()=>tv.qk,tupleValuesAreOne:()=>tv.Dh,upcastType:()=>tp.Tu,validateDefaultValueShape:()=>tk,validateInput:()=>tO.TT,validateUpdateShape:()=>tO.Ly,warn:()=>tU.i});var c={};r.r(c),r.d(c,{c7:()=>rd.c7,ZS:()=>rd.ZS,ut:()=>rd.ut,YO:()=>rc.Y});var f=r(54685);function m(e){n=e}function g(e){if(void 0!==n)return n;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var b=r(57414),x=r(2818);let v=(0,b._K)();v.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),v.registerFlag("IS_BROWSER",()=>y()),v.registerFlag("IS_NODE",()=>void 0!==x&&void 0!==x.versions&&void 0!==x.versions.node),v.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),v.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),v.registerFlag("PROD",()=>!1),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>v.getBool("DEBUG")),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),v.registerFlag("IS_TEST",()=>!1),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>v.getBool("DEBUG")),v.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),v.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var w=r(77388);class T{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==T.instance&&(T.instance=new T),T.instance}static registerSaveRouter(e){T.getInstance().saveRouters.push(e)}static registerLoadRouter(e){T.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return T.getHandlers(e,"save")}static getLoadHandlers(e,t){return T.getHandlers(e,"load",t)}static getHandlers(e,t,r){let n=[];return("load"===t?T.getInstance().loadRouters:T.getInstance().saveRouters).forEach(t=>{let a=t(e,r);null!==a&&n.push(a)}),n}}let S=e=>T.registerSaveRouter(e),N=e=>T.registerLoadRouter(e),k=e=>T.getSaveHandlers(e),I=(e,t)=>T.getLoadHandlers(e,t);var C=r(90906);let E="tensorflowjs",A="models_store",$="model_info_store";function R(){if(!(0,b._K)().getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function F(e){let t=e.result;t.createObjectStore(A,{keyPath:"modelPath"}),t.createObjectStore($,{keyPath:"modelPath"})}class _{constructor(e){if(this.indexedDB=R(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,r)=>{let n=this.indexedDB.open(E,1);n.onupgradeneeded=()=>F(n),n.onsuccess=()=>{let a=n.result;if(null==t){let t=a.transaction(A,"readonly"),n=t.objectStore(A).get(this.modelPath);n.onsuccess=()=>{if(null==n.result)return a.close(),r(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(n.result.modelArtifacts)},n.onerror=e=>(a.close(),r(n.error)),t.oncomplete=()=>a.close()}else{let n,s;t.weightData=C.D.join(t.weightData);let i=(0,w.oR)(t),o=a.transaction($,"readwrite"),l=o.objectStore($);try{n=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(e){return r(e)}n.onsuccess=()=>{let n;let u=(s=a.transaction(A,"readwrite")).objectStore(A);try{n=u.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(e){return r(e)}n.onsuccess=()=>e({modelArtifactsInfo:i}),n.onerror=e=>{let t=(l=o.objectStore($)).delete(this.modelPath);t.onsuccess=()=>(a.close(),r(n.error)),t.onerror=e=>(a.close(),r(n.error))}},n.onerror=e=>(a.close(),r(n.error)),o.oncomplete=()=>{null==s?a.close():s.oncomplete=()=>a.close()}}},n.onerror=e=>r(n.error)})}}_.URL_SCHEME="indexeddb://";let D=e=>{var t;return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_.URL_SCHEME)?(t=e.slice(_.URL_SCHEME.length),new _(t)):null};T.registerSaveRouter(D),T.registerLoadRouter(D);class O{constructor(){this.indexedDB=R()}async listModels(){return new Promise((e,t)=>{let r=this.indexedDB.open(E,1);r.onupgradeneeded=()=>F(r),r.onsuccess=()=>{let n=r.result,a=n.transaction($,"readonly"),s=a.objectStore($).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(n.close(),t(s.error)),a.oncomplete=()=>n.close()},r.onerror=e=>t(r.error)})}async removeModel(e){var t;return e=(t=e).startsWith(_.URL_SCHEME)?t.slice(_.URL_SCHEME.length):t,new Promise((t,r)=>{let n=this.indexedDB.open(E,1);n.onupgradeneeded=()=>F(n),n.onsuccess=()=>{let a;let s=n.result,i=s.transaction($,"readwrite"),o=i.objectStore($),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),r(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let n=o.delete(e),i=()=>{let n=(a=s.transaction(A,"readwrite")).objectStore(A).delete(e);n.onsuccess=()=>t(l.result.modelArtifactsInfo),n.onerror=e=>r(l.error)};n.onsuccess=i,n.onerror=e=>(i(),s.close(),r(l.error))}},l.onerror=e=>(s.close(),r(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},n.onerror=e=>r(n.error)})}}var L=r(23299);let M="tensorflowjs_models",P="info";function z(e){return{info:[M,e,P].join("/"),topology:[M,e,"model_topology"].join("/"),weightSpecs:[M,e,"weight_specs"].join("/"),weightData:[M,e,"weight_data"].join("/"),modelMetadata:[M,e,"model_metadata"].join("/")}}function B(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}class W{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=z(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),n=(0,w.oR)(e),a=C.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,w.l3)(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:n}}catch(e){throw B(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(null==r)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==n)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,w.jf)(s),t}}W.URL_SCHEME="localstorage://";let V=e=>{var t;return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(W.URL_SCHEME)?(t=e.slice(W.URL_SCHEME.length),new W(t)):null};T.registerSaveRouter(V),T.registerLoadRouter(V);class U{constructor(){(0,L.vA)((0,b._K)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,L.vA)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=M+"/",r="/"+P;for(let n=0;n<this.LS.length;++n){let a=this.LS.key(n);a.startsWith(t)&&a.endsWith(r)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;let r=z(e=(t=e).startsWith(W.URL_SCHEME)?t.slice(W.URL_SCHEME.length):t);if(null==this.LS.getItem(r.info))throw Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(r.info));return B(r),n}}class G{constructor(){this.managers={}}static getInstance(){return null==G.instance&&(G.instance=new G),G.instance}static registerManager(e,t){(0,L.vA)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),(0,L.vA)(e.length>0,()=>"scheme must not be an empty string.");let r=G.getInstance();(0,L.vA)(null==r.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){let t=G.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(G.getInstance().managers)}}function Z(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${G.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function j(e,t,r=!1){(0,L.vA)(e!==t,()=>`Old path and new path are the same: '${e}'`);let n=T.getLoadHandlers(e);(0,L.vA)(n.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),(0,L.vA)(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${e}.`);let a=n[0],s=T.getSaveHandlers(t);(0,L.vA)(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),(0,L.vA)(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Z(e).scheme,l=Z(e).path,u=o===Z(e).scheme,h=await a.load();r&&u&&await G.getManager(o).removeModel(l);let p=await i.save(h);return r&&!u&&await G.getManager(o).removeModel(l),p.modelArtifactsInfo}async function K(){let e=G.getSchemes(),t={};for(let r of e){let e=await G.getManager(r).listModels();for(let n in e)t[r+"://"+n]=e[n]}return t}async function H(e){let t=Z(e);return G.getManager(t.scheme).removeModel(t.path)}async function Y(e,t){return j(e,t,!1)}async function Q(e,t){return j(e,t,!0)}var q=r(8494);class X{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!(0,b._K)().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return(0,q.Y)(e)}}if((0,b._K)().get("IS_BROWSER")){(0,b._K)().setPlatform("browser",new X);try{G.registerManager(W.URL_SCHEME,new U)}catch(e){}try{G.registerManager(_.URL_SCHEME,new O)}catch(e){}}var J=r(2818);let ee={importFetch:()=>r(85817)};class et{constructor(){this.util=r(18590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b._K)().global.fetch?(0,b._K)().global.fetch(e,t):(null==a&&(a=ee.importFetch()),a(e,t))}now(){let e=J.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b._K)().get("IS_NODE")&&!(0,b._K)().get("IS_BROWSER")&&(0,b._K)().setPlatform("node",new et);var er=r(97698),en=r(16747),ea=r(51717),es=r(75895),ei=r(3449);(0,f.Ye)();let eo={buffer:er.r,cast:en.w,clone:ea.o,print:es.y};(0,ei.Q5)(eo);var el=r(711),eu=r(23219),eh=r(15575),ep=r(87698),ed=r(83574),ec=r(17771),ef=r(12435),em=r(51758),eg=r(89860);let ey=new Map,eb=new Map;class ex{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ev{constructor(){this.classNameMap={}}static getMap(){return null==ev.instance&&(ev.instance=new ev),ev.instance}static register(e){ev.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ew(e,t,r){(0,L.vA)(null!=e.className,()=>"Class being registered does not have the static className property defined."),(0,L.vA)("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),(0,L.vA)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===r&&(r=e.className);let n=t+">"+r;return ev.register(e),ey.set(n,e),eb.set(e,n),e}function eT(e){return eb.has(e)?eb.get(e):e.className}class eS extends ex{minimize(e,t=!1,r){let{value:n,grads:a}=this.computeGradients(e,r);if(null!=r){let e=r.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return((0,el.AS)(a),t)?n:(n.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,em.y7)(e,t)}dispose(){null!=this.iterations_&&(0,el.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,eg.d)(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(eS,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class eN extends eS{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==r&&(this.epsilon=f.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=f.T2.registeredVariables[t];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:(0,el.DZ)(()=>(0,ef.P)(n).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:(0,el.DZ)(()=>(0,ef.P)(n).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[r].variable,i=this.accumulatedUpdates[r].variable;(0,el.DZ)(()=>{let e=(0,eu.W)((0,ep.l)(s,this.rho),(0,ep.l)((0,ec.E)(a),1-this.rho)),t=(0,ep.l)((0,eh.y)((0,ed.R)((0,eu.W)(i,this.epsilon)),(0,ed.R)((0,eu.W)(s,this.epsilon))),a),r=(0,eu.W)((0,ep.l)(i,this.rho),(0,ep.l)((0,ec.E)(t),1-this.rho));s.assign(e),i.assign(r);let o=(0,eu.W)((0,ep.l)(t,-this.learningRate),n);n.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,el.AS)(this.accumulatedGrads.map(e=>e.variable)),(0,el.AS)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var ek=r(85565);class eI extends eS{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=f.T2.registeredVariables[t];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:(0,el.DZ)(()=>(0,ek.G)(n.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[r].variable;(0,el.DZ)(()=>{let e=(0,eu.W)(s,(0,ec.E)(a));s.assign(e);let t=(0,eu.W)((0,ep.l)((0,eh.y)(a,(0,ed.R)((0,eu.W)(e,f.T2.backend.epsilon()))),-this.learningRate),n);n.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,el.AS)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var eC=r(80154),eE=r(10958);class eA extends eS{static get className(){return"Adam"}constructor(e,t,r,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,el.DZ)(()=>{this.accBeta1=(0,eg.d)(t).variable(),this.accBeta2=(0,eg.d)(r).variable()}),null==n&&(this.epsilon=f.T2.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,el.DZ)(()=>{let r=(0,eE.j)(1,this.accBeta1),n=(0,eE.j)(1,this.accBeta2);t.forEach((t,a)=>{let s=f.T2.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,el.DZ)(()=>(0,ef.P)(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,el.DZ)(()=>(0,ef.P)(s).variable(!1))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=(0,eu.W)((0,ep.l)(o,this.beta1),(0,ep.l)(i,1-this.beta1)),h=(0,eu.W)((0,ep.l)(l,this.beta2),(0,ep.l)((0,ec.E)(i),1-this.beta2)),p=(0,eh.y)(u,r),d=(0,eh.y)(h,n);o.assign(u),l.assign(h);let c=(0,eu.W)((0,ep.l)((0,eh.y)(p,(0,eu.W)((0,ed.R)(d),this.epsilon)),-this.learningRate),s);s.assign(c)}),this.accBeta1.assign((0,ep.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ep.l)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,el.AS)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&(0,el.AS)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),(0,el.DZ)(()=>{this.accBeta1.assign((0,eC.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,eC.n)(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var e$=r(86080),eR=r(89402);class eF extends eS{static get className(){return"Adamax"}constructor(e,t,r,n=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,el.DZ)(()=>{this.iteration=(0,eg.d)(0).variable(),this.accBeta1=(0,eg.d)(t).variable()}),null==n&&(this.epsilon=f.T2.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,el.DZ)(()=>{let r=(0,eE.j)(1,this.accBeta1),n=(0,eh.y)(-this.learningRate,(0,eu.W)((0,ep.l)(this.iteration,this.decay),1));t.forEach((t,a)=>{let s=f.T2.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,ef.P)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,ef.P)(s).variable(!1)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=(0,eu.W)((0,ep.l)(o,this.beta1),(0,ep.l)(i,1-this.beta1)),h=(0,ep.l)(l,this.beta2),p=(0,e$.t)(i),d=(0,eR.P)(h,p);o.assign(u),l.assign(d);let c=(0,eu.W)((0,ep.l)((0,eh.y)(n,r),(0,eh.y)(u,(0,eu.W)(d,this.epsilon))),s);s.assign(c)}),this.iteration.assign((0,eu.W)(this.iteration,1)),this.accBeta1.assign((0,ep.l)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,el.AS)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&(0,el.AS)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class e_ extends eS{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=Array.isArray(e)?e[r].tensor:e[t];if(null==n)return;let a=f.T2.registeredVariables[t];(0,el.DZ)(()=>{let e=(0,eu.W)((0,ep.l)(this.c,n),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,el.aC)((0,eg.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class eD extends e_{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=(0,eg.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=f.T2.registeredVariables[t];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:(0,el.DZ)(()=>(0,ef.P)(n).variable(!1))});let a=this.accumulations[r].variable,s=Array.isArray(e)?e[r].tensor:e[t];null!=s&&(0,el.DZ)(()=>{let e;let t=(0,eu.W)((0,ep.l)(this.m,a),s);e=this.useNesterov?(0,eu.W)((0,ep.l)(this.c,(0,eu.W)(s,(0,ep.l)(t,this.m))),n):(0,eu.W)((0,ep.l)(this.c,t),n),a.assign(t),n.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,el.AS)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class eO extends eS{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,n=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==n&&(this.epsilon=f.T2.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=f.T2.registeredVariables[t];null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:(0,el.DZ)(()=>(0,ef.P)(n).variable(!1))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:(0,el.DZ)(()=>(0,ef.P)(n).variable(!1))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:(0,el.DZ)(()=>(0,ef.P)(n).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(null==a)return;let s=this.accumulatedMeanSquares[r].variable,i=this.accumulatedMoments[r].variable;(0,el.DZ)(()=>{let e=(0,eu.W)((0,ep.l)(s,this.decay),(0,ep.l)((0,ec.E)(a),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[r].variable,o=(0,eu.W)((0,ep.l)(t,this.decay),(0,ep.l)(a,1-this.decay)),l=(0,eh.y)((0,ep.l)(a,this.learningRate),(0,ed.R)((0,eE.j)(e,(0,eu.W)((0,ec.E)(o),this.epsilon)))),u=(0,eu.W)((0,ep.l)(i,this.momentum),l);s.assign(e),t.assign(o),i.assign(u);let h=(0,eE.j)(n,u);n.assign(h)}else{let e=(0,eu.W)((0,ep.l)(s,this.decay),(0,ep.l)((0,ec.E)(a),1-this.decay)),t=(0,eu.W)((0,ep.l)(i,this.momentum),(0,eh.y)((0,ep.l)(a,this.learningRate),(0,ed.R)((0,eu.W)(e,this.epsilon))));s.assign(e),i.assign(t);let r=(0,eE.j)(n,t);n.assign(r)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,el.AS)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,el.AS)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&(0,el.AS)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}let eL=[eN,eI,eA,eF,eD,eO,e_];function eM(e){return new Promise(e=>setTimeout(e)).then(e)}class eP{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(eP.URL_SCHEME)&&(e=e.slice(eP.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=C.D.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n=(0,w.zV)(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await eM(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=r,await eM(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,w.oR)(e)}}}}eP.URL_SCHEME="downloads://";class ez{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let r=new FileReader;r.onload=r=>{let n=JSON.parse(r.target.result),a=n.modelTopology;if(null==a){t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(null==n.weightsManifest){t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(0===this.weightsFiles.length){e({modelTopology:a});return}e((0,w.Ej)(n,e=>this.loadWeights(e)))},r.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){let t=[],r=[];for(let n of e)t.push(...n.weights),r.push(...n.paths);let n=this.checkManifestAndWeightFiles(e);return Promise.all(r.map(e=>this.loadWeightsFile(e,n[e]))).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((r,n)=>{let a=new FileReader;a.onload=e=>{r(e.target.result)},a.onerror=t=>n(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],r=this.weightsFiles.map(e=>(0,w.P8)(e.name)),n={};for(let a of e)a.paths.forEach(e=>{let a=(0,w.P8)(e);if(-1!==t.indexOf(a))throw Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===r.indexOf(a))throw Error(`Weight file with basename '${a}' is not provided.`);n[e]=this.weightsFiles[r.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}}function eB(e){return new ez(e)}function eW(e,t,r,n){var a,s;(0,L.vA)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array"),a=r=null==r?0:r,s=n=null==n?1:n,(0,L.vA)(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),(0,L.vA)(s>=0&&s<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${s}`),(0,L.vA)(s>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${s}`);let i=0;return Promise.all(e.map(a=>(a.then(a=>(t(r+ ++i/e.length*(n-r)),a)),a)))}T.registerSaveRouter(e=>(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(eP.URL_SCHEME)?function(e="model"){return new eP(e)}(e.slice(eP.URL_SCHEME.length)):null);var eV=r(31091);async function eU(e,t){null==t&&(t={});let r=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,n=e.map(e=>r(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(n):await eW(n,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await eW(a,t.onProgress,.5,1)}async function eG(e,t="",r,n){return eZ(e=>eU(e,{requestInit:n}))(e,t,r)}function eZ(e){return async(t,r="",n)=>{let a=t.map(()=>!1),s={},i=null!=n?n.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let r=0;e.weights.forEach(e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=eV.i[l]*L.Ze(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:r,sizeBytes:u})};null!=n?n.forEach((t,r)=>{t===e.name&&(h(),i[r]=!0)}):h(),o.push(e.name),r+=u})}),!i.every(e=>e)){let e=n.filter((e,t)=>!i[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((e,t,r)=>(t&&e.push(r),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{let t=r+(r.endsWith("/")?"":"/")+e;u.push(t)})});let h=await e(u),p={},d=0;return l.forEach(e=>{let r=t[e].paths.length,n=new C.D(h.slice(d,d+r));s[e].forEach(e=>{let t=n.slice(e.groupOffset,e.groupOffset+e.sizeBytes),r=(0,w.CY)(t,[e.manifestEntry]);for(let e in r)p[e]=r[e]}),d+=r}),p}}class ej{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,L.vA)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=(0,b._K)().platform.fetch,(0,L.vA)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&(0,L.vA)(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=(0,w.zV)(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let r=C.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([r],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:(0,w.oR)(e),responses:[a]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e;let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let r=e.modelTopology,n=e.weightsManifest;if(null==r&&null==n)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return(0,w.Ej)(e,e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=(0,w.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:()=>(function(e,t){var r;let n;let a=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,s=0;return null===(r=t.onProgress)||void 0===r||r.call(t,0),new ReadableStream({pull:async r=>{for(var i;s<e.length;){n||(n=(await a(e[s],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await n.read();if(o){s++,n=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length);continue}r.enqueue(l);return}r.close()}})})(t,this.loadOptions)})}async getWeightUrls(e){let[t,r]=function(e){let t=e.lastIndexOf("/"),r=e.lastIndexOf("?");return[e.substring(0,t)+"/",r>t?e.substring(r):""]}(Array.isArray(this.path)?this.path[1]:this.path),n=this.weightPathPrefix||t,a=[],s=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):a.push(n+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(s)),a}async loadWeights(e){let t=await this.getWeightUrls(e);return[(0,w.Xf)(e),await eU(t,this.loadOptions)]}}function eK(e){return null!=e.match(ej.URL_SCHEME_REGEX)}ej.URL_SCHEME_REGEX=/^https?:\/\//;let eH=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc));else if(Array.isArray(e)?e.every(e=>eK(e)):eK(e))return eY(e,t);return null};function eY(e,t){return new ej(e,t)}function eQ(e,t){return eY(e,t)}T.registerSaveRouter(eH),T.registerLoadRouter(eH);class eq{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class eX{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class eJ{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function e0(e,t,r,n){let a=arguments;return new eJ(e1(...a))}function e1(e,t,r,n){return 1!=arguments.length?(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new eq({modelTopology:e,weightSpecs:t,weightData:r,trainingConfig:n})):null!=e.modelTopology||null!=e.weightSpecs?new eq(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new eq({modelTopology:e}))}function e2(e){return new eX(e)}function e3(e){return new eX(e)}var e4=r(46012),e9=r(71699),e5=r(54338),e6=r(16381),e8=r(59429),e7=r(80618);let te=!1;function tt(e,t=3){let r,n;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let a=!1,i=!1,o=!1,l=!1,u=!1,h=!1;if(e.data instanceof Uint8Array)a=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)i=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)l=!0;else if(null!=e.getContext)u=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)h=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=(0,e5._5)(e9.awo,f.T2.backendName))return f.T2.runKernel(e9.awo,{pixels:e},{numChannels:t});let[p,d]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(u)r=e.getContext("2d").getImageData(0,0,p,d).data;else if(i||a)r=e.data;else if(l||o||h){if(null==s){if("undefined"==typeof document){if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)s=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.")}else s=document.createElement("canvas").getContext("2d",{willReadFrequently:!0})}s.canvas.width=p,s.canvas.height=d,s.drawImage(e,0,0,p,d),r=s.getImageData(0,0,p,d).data}if(4===t)n=new Int32Array(r);else{let e=p*d;n=new Int32Array(e*t);for(let a=0;a<e;a++)for(let e=0;e<t;++e)n[a*t+e]=r[4*a+e]}let c=[d,p,t];return(0,e7.$)(n,c,"int32")}async function tr(e,t=3){var r;let n=null;if((0,b._K)().getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(r=e)&&0!==r.width&&0!==r.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return tt(n,t)}function tn(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function ta(e,t){let r=(0,e6.YT)(e,"img","toPixels");if(!(e instanceof ei.qY)){let e=r;r=(0,en.w)(e,"int32"),e.dispose()}tn(r);let[n,a]=r.shape.slice(0,2),s=2===r.rank?1:r.shape[2],i=await r.data(),o="float32"===r.dtype?255:1,l=new Uint8ClampedArray(a*n*4);for(let e=0;e<n*a;++e){let t=[0,0,0,255];for(let n=0;n<s;n++){let a=i[e*s+n];if("float32"===r.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[n]=a*o}let n=4*e;l[n+0]=Math.round(t[0]),l[n+1]=Math.round(t[1]),l[n+2]=Math.round(t[2]),l[n+3]=Math.round(t[3])}if(null!=t){te||null==(0,e5._5)(e9.XmO,f.T2.backendName)||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),te=!0),t.width=a,t.height=n;let e=t.getContext("2d"),r=new ImageData(l,a,n);e.putImageData(r,0,0)}return r!==e&&r.dispose(),l}function ts(e,t,r){let n=(0,e6.YT)(e,"img","draw");if(!(e instanceof ei.qY)){let e=n;n=(0,en.w)(e,"int32"),e.dispose()}tn(n),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==r?void 0:r.imageOptions);let a={image:n};f.T2.runKernel(e9.XmO,a,{canvas:t,options:r})}let ti=(0,e8.op)({fromPixels_:tt});var to=r(41763),tl=r(4525),tu=r(27708);let th="4.22.0";var tp=r(88802),td=r(64098);class tc{static sgd(e){return new e_(e)}static momentum(e,t,r=!1){return new eD(e,t,r)}static rmsprop(e,t=.9,r=0,n=null,a=!1){return new eO(e,t,r,n,a)}static adam(e=.001,t=.9,r=.999,n=null){return new eA(e,t,r,n)}static adadelta(e=.001,t=.95,r=null){return new eN(e,t,r)}static adamax(e=.002,t=.9,r=.999,n=null,a=0){return new eF(e,t,r,n,a)}static adagrad(e,t=.1){return new eI(e,t)}}let tf=tc,tm="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function tg(){return new Promise(e=>tm(()=>e()))}var ty=r(93370);function tb(e,t){let r=e[0].length;e.forEach((e,t)=>{L.vA(e.length===r,()=>`Error in concat${r}D: rank of tensors[${t}] must be the same as the rank of the rest (${r})`)}),L.vA(t>=0&&t<r,()=>`Error in concat${r}D: axis must be between 0 and ${r-1}.`);let n=e[0];e.forEach((e,a)=>{for(let s=0;s<r;s++)L.vA(s===t||e[s]===n[s],()=>`Error in concat${r}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${n}) along the non-concatenated axis ${a}.`)})}function tx(e,t){let r=e[0].slice();for(let n=1;n<e.length;n++)r[t]+=e[n][t];return r}var tv=r(14227),tw=r(87808);function tT(e,t,r){let n=[];if(null==r&&null==t)return n;if(null==t)for(;n.length<e+r.length;)n.push(-1);else n=t.slice();if(null==r)return n;if(e+r.length!==n.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+r.length}, but shape.rank = ${n.length}`);for(let a=1;a<r.length;++a){let s=r[a],i=n[n.length-r.length+a],o=n[i];if(s>=0){if(o>=0){if(o!==s)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else n[i]=s}}return n}function tS(e){let t={FIRST_DIM_SIZE:i.FIRST_DIM_SIZE,VALUE_ROWIDS:i.VALUE_ROWIDS,ROW_LENGTHS:i.ROW_LENGTHS,ROW_SPLITS:i.ROW_SPLITS,ROW_LIMITS:i.ROW_LIMITS,ROW_STARTS:i.ROW_STARTS},r=[];for(let n of e)if(n in t)r.push(t[n]);else break;return r}function tN(e){return 0===e.length?0:e[0]===i.FIRST_DIM_SIZE?e.length-1:e.length}function tk(e,t){if(null==e||null==t)return;let r=e.length,n=t.length;if(r>=n)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${r} must be less than ragged tensor input flatValues.rank = ${n})`);for(let a=0;a<Math.min(r,n-1);++a){let r=e[a],n=t[a+1];if(r>=0&&n>=0&&1!==r&&r!==n)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${r} but ragged tensor input.flatValues.shape[${a-e.length}] = ${n}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(i||(i={}));let tI=30;function tC(e){return e<=tI?e:(0,L.lK)(e,Math.floor(Math.sqrt(e)))}function tE(e,t,r){return[r*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function tA(e,t,r,n=!0){let a=[];if(n)(a=a.concat(t.slice(0))).push(e[0]/r),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let r=t.length;for(let n=0;n<r;++n)a=a.concat([e[n+1]/t[n],t[n]]);a=a.concat(e.slice(r+1))}return a}function t$(e,t,r=!0){let n=[];if(r){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{let r=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2==1?a.push(n):r.push(n);n.push(...r),n.push(0),n.push(...a)}return n}function tR(e,t,r,n=!0){let a=[];n?a.push(e[0]/r):a.push(e[0]*r);for(let r=1;r<e.length;++r)r<=t.length?n?a.push(t[r-1]*e[r]):a.push(e[r]/t[r-1]):a.push(e[r]);return a}function tF(e,t){let r=[0];for(let n=0;n<t;++n)r.push(e[n][0]);return r}function t_(e,t,r){let n=e.slice(0,1);for(let a=0;a<r;++a)n.push(e[a+1]-t[a][0]-t[a][1]);return n}function tD(e,t){let r=e.shape.length,n=t.shape.length;if(r<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${r}.`);if(n<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>r)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${r}`);if(0===(0,L.Ze)(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<r;++e)u*=o[e],l.push(o[e]);let h=[...(0,L.Ur)(e.shape).map(e=>e/u),1].slice(0,s);return[l,i,u,h]}var tO=r(42042),tL=r(7412);let tM=.3275911,tP=.254829592,tz=-.284496736,tB=1.421413741,tW=-1.453152027,tV=1.061405429;var tU=r(82717);function tG(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let r=new Float32Array(2*e.length);for(let n=0;n<r.length;n+=2)r[n]=e[n/2],r[n+1]=t[n/2];return r}function tZ(e){let t=new Float32Array(e.length/2),r=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],r[n/2]=e[n+1];return{real:t,imag:r}}function tj(e){let t=Math.ceil(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let t=0;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:r,imag:n}}function tK(e){let t=Math.floor(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let t=2;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:r,imag:n}}function tH(e,t){return{real:e[2*t],imag:e[2*t+1]}}function tY(e,t,r,n){e[2*n]=t,e[2*n+1]=r}function tQ(e,t){let r=new Float32Array(e/2),n=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);r[a]=Math.cos(s),n[a]=Math.sin(s)}return{real:r,imag:n}}function tq(e,t,r){let n=(r?2:-2)*Math.PI*(e/t);return{real:Math.cos(n),imag:Math.sin(n)}}let tX=/->/g;function tJ(e,t){let r=((e=e.replace(/\s/g,"")).length-e.replace(tX,"").length)/2;if(r<1)throw Error("Equations without an arrow are not supported.");if(r>1)throw Error('Equation must contain exactly one arrow ("->").');let[n,a]=e.split("->");(0,L.vA)(-1===n.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let s=n.split(","),i=s.length;if(t!==i)throw Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<n.length;++e){let t=n[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,h=a.length,p=[];for(let e=h;e<u;++e)p.push(e);return{allDims:o,summedDims:p,idDims:l}}function t0(e,t){let r=Array(e);r.fill(-1);for(let e=0;e<t.length;++e)r[t[e]]=e;let n=[];for(let t=0;t<e;++t)-1===r[t]&&n.push(t);return{permutationIndices:r=r.filter(e=>-1!==e),expandDims:n}}function t1(e,t,r){let n=Array(e);for(let e=0;e<r.length;++e){let a=r[e].shape;for(let r=0;r<t[e].length;++r)void 0===n[t[e][r]]?n[t[e][r]]=a[r]:(0,L.vA)(n[t[e][r]]===a[r],()=>`Expected dimension ${n[t[e][r]]} at axis ${r} of input shaped ${JSON.stringify(a)}, but got dimension ${a[r]}`)}}function t2(e,t){let r=[],n=0;0===e.length&&e.push(-1),n=e.length+1;for(let e=0;e<n;++e)r.push([]);let a=[];for(let n=0;n<e.length;++n)for(let s of function(e,t){let r=[];for(let n=0;n<e.length;++n)(0===e[n].length||-1!==e[n].indexOf(t)||-1===t)&&r.push(n);return r}(t,e[n]))-1===a.indexOf(s)&&(r[n].push(s),a.push(s));return{path:e,steps:r}}function t3(e){return e.every((e,t)=>e===t)}function t4(e,t,r=0){let n=[];if("number"==typeof t)(0,L.vA)(e.shape[r]%t==0,()=>"Number of splits must evenly divide the axis."),n=Array(t).fill(e.shape[r]/t);else{let a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);(0,L.vA)(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(-1!==s){let n=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[r]-n}(0,L.vA)(e.shape[r]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function t9(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function t5(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function t6(e,t,r){return`indices(${e}, 0) is invalid: ${t} >= ${r}`}function t8(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function t7(e,t){return`size ${e} must be non-negative, not ${t}`}function re(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rt(e,t){let r=(0,L.Ze)(e),n=(0,L.Ze)(t);return`Input to reshape is a SparseTensor with ${r}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function rr(e,t){let r=(0,L.Ze)(e),n=(0,L.Ze)(t);return`Input to reshape is a tensor with ${r} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}function rn(){return"segment ids must be >= 0"}function ra(){return"segment ids are not increasing"}function rs(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ri(e,t,r){return`Bad: indices[${e}] == ${t} out of range [0, ${r})`}function ro(e,t){let r,n=!1;for(e<=tI?(r=e,n=!0):r=(0,L.lK)(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=(0,L.lK)(e,r+1);return r}function rl(e,t,r){let n=[],a=e.length;for(let s=0;s<a;s++)s!==t?n.push(e[s]):n.push(r);return n}function ru(e,t,r,n){let a=t.shape.length,s=e.shape.length;if(0!==n&&(n<-a||n>a))throw Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${n}`);if(n<0&&(n+=a),n>s)throw Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(r<n)throw Error(`batchDims (${n}) must be less than or equal to axis (${r}).`);for(let r=0;r<n;++r)if(e.shape[r]!==t.shape[r])throw Error(`x.shape[${r}]: ${e.shape[r]} should be equal to indices.shape[${r}]: ${t.shape[r]}.`);let i=e.shape[r],o=[],l=1,u=1,h=1;for(let t=0;t<n;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=n;t<r;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=n;e<a;e++)o.push(t.shape[e]);for(let t=r+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function rh(e){try{return e.map(e=>(0,tu.decodeString)(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function rp(e){return e.map(e=>(0,tu.encodeString)(e))}var rd=r(70315),rc=r(99375),rf=r(72687);!function(){for(let e of eL)ew(e)}()},90906:(e,t,r)=>{"use strict";r.d(t,{D:()=>a});var n=r(27708);class a{static join(e){return new a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>n.isTypedArray(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){let n=e[r];r!==e.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+n.byteLength;this.shards.push({buffer:n,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let r=this.findShardForByte(e);if(-1===r)throw Error(`Could not find start shard for byte ${e}`);let n=new ArrayBuffer(t-e),a=new Uint8Array(n),s=0;for(let n=r;n<this.shards.length;n++){let r=this.shards[n],i=e+s-r.start,o=s,l=Math.min(t,r.end)-r.start,u=new Uint8Array(r.buffer,i,l-i);if(a.set(u,o),s+=u.length,t<r.end)break}return n}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let r=function(e,t){let r=0,n=e.length;for(;r<=n;){let a=Math.floor((n-r)/2)+r,s=t(e[a]);if(0===s)return a;s<0?n=a:r=a+1}return -1}(this.shards,t);return -1===r?-1:(this.previousShardIndex=r,this.previousShardIndex)}}},77388:(e,t,r)=>{"use strict";r.d(t,{AQ:()=>w,CY:()=>d,Ej:()=>k,P8:()=>T,Rl:()=>N,Xf:()=>C,aG:()=>p,jf:()=>v,l3:()=>x,oR:()=>I,s5:()=>g,zV:()=>S});var n=r(83420),a=r(88689),s=r(23299),i=r(31091),o=r(90906),l=r(711),u=r(57414),h=r(95714).Buffer;async function p(e,t){let r=[],n=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),r=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),n=0;for(let e=0;e<t.length;e++){let a=t[e],s=new Uint8Array(new Uint32Array([a.length]).buffer);r.set(s,n),n+=4,r.set(a,n),n+=a.length}e(r)});n.push(e)}else n.push(o.data());null!=t&&(l.group=t),r.push(l)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,r=[];e.forEach(e=>{if(t+=e.byteLength,r.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let n=new Uint8Array(t),a=0;return r.forEach(e=>{n.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),n.buffer}(await Promise.all(n)),specs:r}}function d(e,t){let r=new o.D(e),n={},a=0;for(let e of t){let t=function(e,t){let r;let n=(0,s.Ze)(e.shape);if("quantization"in e){let t=e.quantization;r=i.i[t.dtype]}else if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else r=i.i[e.dtype];return n*r}(e,(e,t)=>r.slice(a+e,a+t));n[e.name]=f(e,r.slice(a,a+t)),a+=t}return n}async function c(e,t){let r;let n=(0,s.Ze)(e.shape);if("quantization"in e){let t=e.quantization;r=i.i[t.dtype]}else if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}else r=i.i[e.dtype];return n*r}function f(e,t){let r;let o=e.name,l=e.dtype,u=e.shape,h=(0,s.Ze)(u),p=0;if("quantization"in e){let n=e.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n&&"scale"in n))throw Error(`Weight ${e.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===n.dtype){if("float32"!==l)throw Error(`Weight ${e.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let a=i.i[n.dtype],s="uint8"===n.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===l){if("uint8"===n.dtype||"uint16"===n.dtype){r=new Float32Array(s.length);for(let e=0;e<s.length;e++){let t=s[e];r[e]=t*n.scale+n.min}}else if("float16"===n.dtype)r=(function(){let e=function(){let e=e=>{let t=e<<13,r=0;for(;(8388608&t)==0;)r-=8388608,t<<=1;return(t&=-8388609)|(r+=0x38800000)},t=new Uint32Array(2048);t[0]=0;for(let r=1;r<1024;r++)t[r]=e(r);for(let e=1024;e<2048;e++)t[e]=0x38000000+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=0x47800000,e[32]=0x80000000,e[63]=0xc7800000;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=0x80000000+(t-32<<23);return e}(),r=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return n=>{let a=new ArrayBuffer(4*n.length),s=new Uint32Array(a);for(let a=0;a<n.length;a++){let i=n[a],o=e[r[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}})()(s);else throw Error(`Unsupported quantization type ${n.dtype} for weight type float32.`)}else if("int32"===l){if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);r=new Int32Array(s.length);for(let e=0;e<s.length;e++){let t=s[e];r[e]=Math.round(t*n.scale+n.min)}}else throw Error(`Unsupported dtype in weight '${o}': ${l}`);p+=h*a}else if("string"===l){let n=(0,s.Ze)(e.shape);r=[];for(let e=0;e<n;e++){let e=new Uint32Array(t.slice(p,p+4))[0];p+=4;let n=new Uint8Array(t.slice(p,p+e));r.push(n),p+=e}}else{let e=i.i[l];if("float32"===l)r=new Float32Array(t);else if("int32"===l)r=new Int32Array(t);else if("bool"===l)r=new Uint8Array(t);else if("complex64"===l){r=new Float32Array(t);let e=new Float32Array(r.length/2),s=new Float32Array(r.length/2);for(let t=0;t<e.length;t++)e[t]=r[2*t],s[t]=r[2*t+1];let i=(0,a.O)(e,u,"float32"),o=(0,a.O)(s,u,"float32"),l=(0,n.f)(i,o);return i.dispose(),o.dispose(),l}else throw Error(`Unsupported dtype in weight '${o}': ${l}`);p+=h*e}return(0,a.O)(r,u,l)}async function m(e,t,r){let n=new Uint8Array(t);for(;n.byteLength<r;){let{done:t,value:a}=await e.read();if(t&&null==a){let e=r-n.byteLength;throw Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(n.length+a.byteLength);s.set(n,0),s.set(new Uint8Array(a),n.length),n=s}return n.buffer}async function g(e,t){let r={},n=e.getReader(),a=new ArrayBuffer(0);for(let e of t){let t=await c(e,async(e,t)=>(a=await m(n,a,t)).slice(e,t)),i=(a=await m(n,a,t)).slice(0,t);a=a.slice(t);let o=f(e,i);if(r[e.name]=o,"webgpu"===(0,l.jz)()){let e=(0,l.Hs)();"uploadToGPU"in e&&(0,s.Ze)(o.shape)>=(0,u._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return r}let y=void 0!==h&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function b(e){return y?h.byteLength(e,"utf8"):new Blob([e]).size}function x(e){if(y)return h.from(e).toString("base64");let t=new Uint8Array(e),r="";for(let e=0,n=t.length;e<n;e++)r+=String.fromCharCode(t[e]);return btoa(r)}function v(e){if(y){let t=h.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r.set([t.charCodeAt(e)],e);return r.buffer}function w(e){return o.D.join(e)}function T(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function S(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),r}function N(e,t,r){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!r)throw Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),n}async function k(e,t){let r,n;return null!=e.weightsManifest&&([r,n]=await t(e.weightsManifest)),N(e,r,n)}function I(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:b(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:b(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new o.D(e.weightData).byteLength}}function C(e){let t=[];for(let r of e)t.push(...r.weights);return t}},31091:(e,t,r)=>{"use strict";r.d(t,{i:()=>n});let n={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},71699:(e,t,r)=>{"use strict";r.d(t,{$dB:()=>F,$jE:()=>tV,$zE:()=>R,A1h:()=>L,A8B:()=>tE,BK4:()=>t2,BLA:()=>eH,BRl:()=>es,Blb:()=>tA,BoJ:()=>tF,BxF:()=>ep,C8s:()=>tR,CQC:()=>te,Cg$:()=>e$,CwD:()=>eC,D7i:()=>td,Ddj:()=>tL,Dr:()=>t3,DvZ:()=>tD,E3$:()=>eS,EkD:()=>o,ElG:()=>ec,EwU:()=>tQ,FAs:()=>tj,FCQ:()=>th,FSt:()=>u,Fin:()=>tk,GZp:()=>tP,HNs:()=>N,Ik2:()=>T,J3C:()=>tT,JiE:()=>tv,Jp_:()=>h,KXH:()=>C,L6G:()=>t_,LB5:()=>k,LDN:()=>eP,LG0:()=>ej,LRy:()=>tn,LWX:()=>e2,LXA:()=>e_,M6A:()=>tM,MRQ:()=>U,Mn0:()=>z,MnK:()=>B,N4F:()=>S,Ncv:()=>e6,O4G:()=>eg,OAQ:()=>ev,ODT:()=>e9,OMN:()=>i,ORI:()=>Y,PH8:()=>s,P_L:()=>tp,Pah:()=>er,PbM:()=>tU,Q6t:()=>tr,QDP:()=>E,QKF:()=>d,Qgm:()=>et,R23:()=>ti,RUm:()=>eR,RXX:()=>eB,SDM:()=>eJ,SQl:()=>eh,T7M:()=>t9,TBb:()=>tK,TL8:()=>eU,TMz:()=>Z,TOR:()=>tf,ToN:()=>eL,TyE:()=>f,UcO:()=>tz,VAI:()=>eM,VCH:()=>b,Vvy:()=>a,WT3:()=>eY,WuN:()=>tC,X$8:()=>K,X0$:()=>ek,X4r:()=>tg,XQy:()=>tl,XhZ:()=>ey,XmO:()=>J,YAb:()=>tB,YVe:()=>tS,ZgB:()=>ed,Zl4:()=>e0,_s9:()=>ea,aAr:()=>t4,awo:()=>t1,bP9:()=>q,cHb:()=>eV,cS:()=>x,dFH:()=>tI,dLy:()=>tH,dXR:()=>tq,dv8:()=>ew,e0f:()=>e1,epO:()=>c,fUj:()=>ts,g5A:()=>eG,gC7:()=>P,gIW:()=>eT,hVg:()=>tc,hgw:()=>tu,ho8:()=>y,hql:()=>tw,huO:()=>ta,i5R:()=>ef,iGz:()=>M,iPs:()=>eN,iW0:()=>tW,iuW:()=>tZ,jAQ:()=>w,jM4:()=>eO,jOE:()=>to,jfg:()=>O,jgd:()=>tO,jj_:()=>W,jxD:()=>Q,kdj:()=>e8,l0G:()=>eq,l6P:()=>tb,lLS:()=>eb,lNG:()=>eZ,ljI:()=>n,lxb:()=>g,lzr:()=>ex,mH5:()=>tt,mIA:()=>eI,mM$:()=>e4,mnI:()=>eE,mxL:()=>em,nVu:()=>H,nY8:()=>V,nZd:()=>eF,oFs:()=>tG,oJ2:()=>e7,ox3:()=>ei,p2J:()=>_,pJc:()=>tm,pPe:()=>tX,p_m:()=>p,pk0:()=>X,pnw:()=>t0,pr3:()=>$,pyJ:()=>e5,rFG:()=>t$,rFm:()=>D,rGP:()=>eu,rsH:()=>en,sDr:()=>ee,t3d:()=>ez,tG8:()=>eA,tGH:()=>j,u$b:()=>tx,u8Z:()=>l,uWl:()=>ty,urI:()=>e3,vI1:()=>tN,vaV:()=>A,vj7:()=>I,wNW:()=>G,wwC:()=>v,wx0:()=>tY,x7F:()=>eK,xJ3:()=>tJ,xu7:()=>eQ,ySp:()=>eW,ybN:()=>eo,ybj:()=>el,ylV:()=>eX,zP9:()=>m,zfU:()=>eD});let n="Abs",a="Acos",s="Acosh",i="Add",o="AddN",l="All",u="Any",h="ArgMax",p="ArgMin",d="Asin",c="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",T="BatchToSpaceND",S="Bincount",N="BitwiseAnd",k="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",$="Complex",R="ComplexAbs",F="Concat",_="Conv2D",D="Conv2DBackpropFilter",O="Conv2DBackpropInput",L="Conv3D",M="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",z="Cos",B="Cosh",W="Cumprod",V="Cumsum",U="CropAndResize",G="DenseBincount",Z="DepthToSpace",j="DepthwiseConv2dNative",K="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",q="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",et="Einsum",er="Elu",en="EluGrad",ea="Erf",es="Equal",ei="Exp",eo="ExpandDims",el="Expm1",eu="FFT",eh="Fill",ep="FlipLeftRight",ed="Floor",ec="FloorDiv",ef="FusedBatchNorm",em="GatherV2",eg="GatherNd",ey="Greater",eb="GreaterEqual",ex="Identity",ev="IFFT",ew="Imag",eT="IsFinite",eS="IsInf",eN="IsNan",ek="LeakyRelu",eI="Less",eC="LessEqual",eE="LinSpace",eA="Log",e$="Log1p",eR="LogicalAnd",eF="LogicalNot",e_="LogicalOr",eD="LogSoftmax",eO="LRN",eL="LRNGrad",eM="Max",eP="Maximum",ez="MaxPool",eB="MaxPoolGrad",eW="MaxPool3D",eV="MaxPool3DGrad",eU="MaxPoolWithArgmax",eG="Mean",eZ="Min",ej="Minimum",eK="MirrorPad",eH="Mod",eY="Multinomial",eQ="Multiply",eq="Neg",eX="NotEqual",eJ="NonMaxSuppressionV3",e0="NonMaxSuppressionV4",e1="NonMaxSuppressionV5",e2="OnesLike",e3="OneHot",e4="Pack",e9="PadV2",e5="Pow",e6="Prelu",e8="Prod",e7="RaggedGather",te="RaggedRange",tt="RaggedTensorToTensor",tr="Range",tn="Real",ta="Reciprocal",ts="Relu",ti="Reshape",to="ResizeNearestNeighbor",tl="ResizeNearestNeighborGrad",tu="ResizeBilinear",th="ResizeBilinearGrad",tp="Relu6",td="Reverse",tc="Round",tf="Rsqrt",tm="ScatterNd",tg="TensorScatterUpdate",ty="SearchSorted",tb="Select",tx="Selu",tv="Slice",tw="Sin",tT="Sinh",tS="Sign",tN="Sigmoid",tk="Softplus",tI="Sqrt",tC="Sum",tE="SpaceToBatchND",tA="SplitV",t$="Softmax",tR="SparseFillEmptyRows",tF="SparseReshape",t_="SparseSegmentMean",tD="SparseSegmentSum",tO="SparseToDense",tL="SquaredDifference",tM="Square",tP="StaticRegexReplace",tz="StridedSlice",tB="StringNGrams",tW="StringSplit",tV="StringToHashBucketFast",tU="Sub",tG="Tan",tZ="Tanh",tj="Tile",tK="TopK",tH="Transform",tY="Transpose",tQ="Unique",tq="Unpack",tX="UnsortedSegmentSum",tJ="ZerosLike",t0="Step",t1="FromPixels",t2="RotateWithOffset",t3="_FusedMatMul",t4="FusedConv2D",t9="FusedDepthwiseConv2D"},54338:(e,t,r)=>{"use strict";r.d(t,{Op:()=>h,_5:()=>l,kr:()=>d,tA:()=>p,vQ:()=>u});var n=r(57414),a=r(33871),s=r(82717);let i=(0,a.m)("kernelRegistry",()=>new Map),o=(0,a.m)("gradRegistry",()=>new Map);function l(e,t){var r,n;let a=(r=e,n=t,`${n}_${r}`);return i.get(a)}function u(e){return o.get(e)}function h(e){let t=i.entries(),r=[];for(;;){let{done:n,value:a}=t.next();if(n)break;let[s,i]=a,[o]=s.split("_");o===e&&r.push(i)}return r}function p(e){var t,r;let{kernelName:n,backendName:a}=e,o=(t=n,r=a,`${r}_${t}`);i.has(o)&&s.i(`The kernel '${n}' for backend '${a}' is already registered`),i.set(o,e)}function d(e){let{kernelName:t}=e;o.has(t)&&(0,n._K)().getBool("DEBUG")&&s.i(`Overriding the gradient for '${t}'`),o.set(t,e)}},82717:(e,t,r)=>{"use strict";r.d(t,{R:()=>s,i:()=>a});var n=r(57414);function a(...e){(0,n._K)().getBool("IS_TEST")||(0,n._K)().getBool("PROD")||console.warn(...e)}function s(...e){(0,n._K)().getBool("IS_TEST")||(0,n._K)().getBool("PROD")||console.log(...e)}},86080:(e,t,r)=>{"use strict";r.d(t,{t:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({abs_:function(e){let t=(0,s.YT)(e,"x","abs");return"complex64"===t.dtype?n.T2.runKernel(a.$zE,{x:t}):n.T2.runKernel(a.ljI,{x:t})}})},44718:(e,t,r)=>{"use strict";r.d(t,{H:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({acos_:function(e){let t=(0,s.YT)(e,"x","acos");return n.T2.runKernel(a.Vvy,{x:t})}})},75814:(e,t,r)=>{"use strict";r.d(t,{F:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({acosh_:function(e){let t=(0,s.YT)(e,"x","acosh");return n.T2.runKernel(a.PH8,{x:t})}})},23219:(e,t,r)=>{"use strict";r.d(t,{W:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({add_:function(e,t){let r=(0,i.YT)(e,"a","add"),o=(0,i.YT)(t,"b","add");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.OMN,l)}})},97715:(e,t,r)=>{"use strict";r.d(t,{Q:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({all_:function(e,t=null,r=!1){let i=(0,s.YT)(e,"x","all","bool");return n.T2.runKernel(a.u8Z,{x:i},{axis:t,keepDims:r})}})},82746:(e,t,r)=>{"use strict";r.d(t,{b:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({any_:function(e,t=null,r=!1){let i=(0,s.YT)(e,"x","any","bool");return n.T2.runKernel(a.FSt,{x:i},{axis:t,keepDims:r})}})},8397:(e,t,r)=>{"use strict";r.d(t,{F:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({argMax_:function(e,t=0){let r=(0,s.YT)(e,"x","argMax");return n.T2.runKernel(a.Jp_,{x:r},{axis:t})}})},38363:(e,t,r)=>{"use strict";r.d(t,{X:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({argMin_:function(e,t=0){let r=(0,s.YT)(e,"x","argMin");return n.T2.runKernel(a.p_m,{x:r},{axis:t})}})},64187:(e,t,r)=>{"use strict";r.d(t,{q:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({asin_:function(e){let t=(0,s.YT)(e,"x","asin");return n.T2.runKernel(a.QKF,{x:t})}})},89313:(e,t,r)=>{"use strict";r.d(t,{y:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({asinh_:function(e){let t=(0,s.YT)(e,"x","asinh");return n.T2.runKernel(a.epO,{x:t})}})},31258:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({atan_:function(e){let t=(0,s.YT)(e,"x","atan");return n.T2.runKernel(a.TyE,{x:t})}})},14308:(e,t,r)=>{"use strict";r.d(t,{F:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({atan2_:function(e,t){let r=(0,i.YT)(e,"a","atan2"),o=(0,i.YT)(t,"b","atan2");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.lxb,l)}})},4282:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({atanh_:function(e){let t=(0,s.YT)(e,"x","atanh");return n.T2.runKernel(a.zP9,{x:t})}})},98283:(e,t,r)=>{"use strict";r.d(t,{$:()=>p});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(16747),l=r(14227),u=r(59429),h=r(97094);let p=(0,u.op)({avgPool_:function(e,t,r,u,p){let d=(0,s.YT)(e,"x","avgPool","float32");i.vA(l.G0(r,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);let c=d,f=!1;3===d.rank&&(f=!0,c=(0,h.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.vA(4===c.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${c.rank}.`),l.s_("avgPool",u,p);let m={x:c},g=n.T2.runKernel(a.ho8,m,{filterSize:t,strides:r,pad:u,dimRoundingMode:p});return(g=(0,o.w)(g,d.dtype),f)?(0,h.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},93370:(e,t,r)=>{"use strict";r.d(t,{Em:()=>u,SM:()=>o,WC:()=>l,WH:()=>a,aF:()=>s,fK:()=>p,gx:()=>h,lb:()=>i});var n=r(23299);function a(e,t){for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0}function s(e,t,r){let n=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<n;o++)-1===r.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){let r=[],n=e.length;for(let a=0;a<n;a++)-1===t.indexOf(a)&&r.push(e[a]);return[r,t.map(t=>e[t])]}function o(e,t){return s(e,t.map(e=>1),t)}function l(e,t,r){n.vA(a(t,r),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${r} input.`)}function u(e,t){if(a(e,t))return null;let r=[];for(let n=0;n<t;++n)-1===e.indexOf(n)&&r.push(n);return e.forEach(e=>r.push(e)),r}function h(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function p(e,t){let r=[];for(let n=t-e;n<t;++n)r.push(n);return r}},9756:(e,t,r)=>{"use strict";r.d(t,{G:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({batchToSpaceND_:function(e,t,r){let o=(0,s.YT)(e,"x","batchToSpaceND"),l=t.reduce((e,t)=>e*t);return i.vA(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),i.vA(r.length===t.length,()=>`crops.length is ${r.length} but should be equal to blockShape.length  ${t.length}`),i.vA(o.shape[0]%l==0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`),n.T2.runKernel(a.Ik2,{x:o},{blockShape:t,crops:r})}})},54720:(e,t,r)=>{"use strict";r.d(t,{$:()=>l});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(97094);let l=(0,r(59429).op)({batchNorm_:function(e,t,r,l,u,h){let p,d;null==h&&(h=.001);let c=(0,s.YT)(e,"x","batchNorm"),f=(0,s.YT)(t,"mean","batchNorm"),m=(0,s.YT)(r,"variance","batchNorm");null!=u&&(p=(0,s.YT)(u,"scale","batchNorm")),null!=l&&(d=(0,s.YT)(l,"offset","batchNorm")),i.vA(f.rank===m.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.vA(null==d||f.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.vA(null==p||f.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let g={x:0===c.rank||1===c.rank?(0,o.t)(c,[1,1,1,c.size]):2===c.rank?(0,o.t)(c,[1,1,c.shape[0],c.shape[1]]):3===c.rank?(0,o.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]):c,scale:p,offset:d,mean:f,variance:m},y={varianceEpsilon:h},b=n.T2.runKernel(a.i5R,g,y);return(0,o.t)(b,c.shape)}})},98313:(e,t,r)=>{"use strict";r.d(t,{h:()=>h});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(51717),l=r(59429),u=r(97094);let h=(0,l.op)({broadcastTo_:function(e,t){let r=(0,s.YT)(e,"broadcastTo","x"),l=r.shape;if((0,i.SA)(t),t.length<r.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${r.rank}.`);if(t.length>r.rank){let e=r.shape.slice();for(;e.length<t.length;)e.unshift(1);r=(0,u.t)(r,e)}let h=r.shape,p=Array.from(t);for(let e=t.length-1;e>=0;e--)if(h[e]===t[e])p[e]=1;else if(1!==r.shape[e])throw Error(`broadcastTo(): [${l}] cannot be broadcast to [${t}].`);if(0===p.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return(0,o.o)(r);let d={x:r};return n.T2.runKernel(a.FAs,d,{reps:p})}})},46012:(e,t,r)=>{"use strict";function n(e,t){let r=e.length,n=[];for(let a=0;a<r;a++){let s=r-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&n.unshift(s)}return n}function a(e,t){let r=[];for(let n=0;n<t.length;n++){let a=e[e.length-n-1],s=t.length-n-1,i=t[s];(null==a||1===a&&i>1)&&r.unshift(s)}return r}function s(e,t){let r=Math.max(e.length,t.length),n=Array(r);for(let a=0;a<r;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)n[r-a-1]=i;else if(1===i)n[r-a-1]=s;else if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else n[r-a-1]=s}return n}r.r(t),r.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>n,getReductionAxes:()=>a})},97698:(e,t,r)=>{"use strict";r.d(t,{r:()=>s});var n=r(3449),a=r(23299);function s(e,t="float32",r){return t=t||"float32",a.SA(e),new n.yl(e,t,r)}},16747:(e,t,r)=>{"use strict";r.d(t,{w:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({cast_:function(e,t){let r=(0,s.YT)(e,"x","cast");if(!i.xn(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==r.dtype||"string"!==t&&"string"===r.dtype)throw Error("Only strings can be casted to strings");return n.T2.runKernel(a.KXH,{x:r},{dtype:t})}})},50885:(e,t,r)=>{"use strict";r.d(t,{m:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({ceil_:function(e){let t=(0,s.YT)(e,"x","ceil","float32");return n.T2.runKernel(a.QDP,{x:t})}})},98084:(e,t,r)=>{"use strict";r.d(t,{z:()=>l});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(85565);let l=(0,r(59429).op)({clipByValue_:function(e,t,r){let l=(0,s.YT)(e,"x","clipByValue");return(i.vA(t<=r,()=>`Error in clip: min (${t}) must be less than or equal to max (${r}).`),t===r)?(0,o.G)(l.shape,t,l.dtype):n.T2.runKernel(a.vaV,{x:l},{clipValueMin:t,clipValueMax:r})}})},51717:(e,t,r)=>{"use strict";r.d(t,{o:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({clone_:function(e){let t=(0,s.YT)(e,"x","clone","string_or_numeric");return n.T2.runKernel(a.lzr,{x:t})}})},83420:(e,t,r)=>{"use strict";r.d(t,{f:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({complex_:function(e,t){let r=(0,s.YT)(e,"real","complex"),o=(0,s.YT)(t,"imag","complex");return i.O3(r.shape,o.shape,`real and imag shapes, ${r.shape} and ${o.shape}, must match in call to tf.complex().`),n.T2.runKernel(a.pr3,{real:r,imag:o})}})},77668:(e,t,r)=>{"use strict";r.d(t,{x:()=>l});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(51717);let l=(0,r(59429).op)({concat_:function(e,t=0){(0,i.vA)(e.length>=1,()=>"Pass at least one tensor to concat");let r=(0,s.j1)(e,"tensors","concat","string_or_numeric");return("complex64"===r[0].dtype&&r.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===r.length)?(0,o.o)(r[0]):n.T2.runKernel(a.$dB,r,{axis:t})}})},12975:(e,t,r)=>{"use strict";r.d(t,{k:()=>u});var n=r(16381),a=r(23299),s=r(18120),i=r(14227),o=r(59429),l=r(97094);let u=(0,o.op)({conv1d_:function(e,t,r,o,u="NWC",h=1,p){let d=(0,n.YT)(e,"x","conv1d"),c=(0,n.YT)(t,"filter","conv1d"),f=d,m=!1;2===d.rank&&(m=!0,f=(0,l.t)(d,[1,d.shape[0],d.shape[1]])),a.vA(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.vA(3===c.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),i.s_("conv1d",o,p),a.vA(f.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${c.shape[1]}.`),a.vA(i.G0(r,h),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${r} and dilation '${h}'`),a.vA(i.qk(h),()=>"Error in conv1D: Dilated rates should be larger than 0."),a.vA(i.qk(r),()=>"Error in conv1D: Stride should be larger than 0."),a.vA("NWC"===u,()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`);let g=(0,l.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]),y=(0,l.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=(0,s.X)(y,g,[1,r],o,"NHWC",[1,h],p);return m?(0,l.t)(b,[b.shape[2],b.shape[3]]):(0,l.t)(b,[b.shape[0],b.shape[2],b.shape[3]])}})},18120:(e,t,r)=>{"use strict";r.d(t,{X:()=>h});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(14227),l=r(59429),u=r(97094);let h=(0,l.op)({conv2d_:function(e,t,r,l,h="NHWC",p=[1,1],d){let c=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32"),m=c,g=!1;3===c.rank&&(g=!0,m=(0,u.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),i.vA(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.vA(4===f.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`),o.s_("conv2d",l,d);let y="NHWC"===h?m.shape[3]:m.shape[1];i.vA(y===f.shape[2],()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`),i.vA(o.G0(r,p),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${p}'`),i.vA(o.qk(p),()=>"Error in conv2D: Dilated rates should be larger than 0."),i.vA(o.qk(r),()=>"Error in conv2D: Strides should be larger than 0.");let b={x:m,filter:f},x=n.T2.runKernel(a.p2J,b,{strides:r,pad:l,dataFormat:h,dilations:p,dimRoundingMode:d});return g?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},71990:(e,t,r)=>{"use strict";r.d(t,{H:()=>u});var n=r(54685),a=r(71699),s=r(23299),i=r(14227),o=r(59429),l=r(97094);let u=(0,o.op)({conv2DBackpropFilter_:function(e,t,r,o,u,h="NHWC",p){let d=e;3===e.rank&&(d=(0,l.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===d.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`),s.vA(4===c.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),s.vA(4===r.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${r}.`);let f="NHWC"===h?d.shape[3]:d.shape[1],m="NHWC"===h?c.shape[3]:c.shape[1];s.vA(f===r[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${r[2]}.`),s.vA(m===r[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${r[3]}).`),i.s_("conv2dDerFilter",u,p);let g={x:d,dy:c};return n.T2.runKernel(a.rFm,g,{strides:o,pad:u,dataFormat:h,dimRoundingMode:p,filterShape:r})}})},34932:(e,t,r)=>{"use strict";r.d(t,{v:()=>u});var n=r(54685),a=r(71699),s=r(23299),i=r(14227),o=r(59429),l=r(97094);let u=(0,o.op)({conv2DBackpropInput_:function(e,t,r,o,u,h="NHWC",p){s.vA(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let d=e,c=t,f=!1;3===t.rank&&(f=!0,c=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.vA(4===d.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`),s.vA(4===c.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),s.vA(4===r.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${r.rank}`);let m="NHWC"===h?d[3]:d[1],g="NHWC"===h?c.shape[3]:c.shape[1];s.vA(m===r.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${r.shape[2]}.`),s.vA(g===r.shape[3],()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${r.shape[3]}.`),i.s_("conv2dDerInput",u,p);let y={dy:c,filter:r},b={strides:o,pad:u,dataFormat:h,dimRoundingMode:p,inputShape:d},x=n.T2.runKernel(a.jfg,y,b);return f?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},16664:(e,t,r)=>{"use strict";r.d(t,{w:()=>s});var n=r(16381),a=r(34932);let s=(0,r(59429).op)({conv2dTranspose_:function(e,t,r,s,i,o){let l=(0,n.YT)(e,"x","conv2dTranspose"),u=(0,n.YT)(t,"filter","conv2dTranspose");return(0,a.v)(r,l,u,s,i,"NHWC",o)}})},5459:(e,t,r)=>{"use strict";r.d(t,{c:()=>l});var n=r(54685),a=r(71699),s=r(23299),i=r(59429),o=r(97094);let l=(0,i.op)({conv3DBackpropInput_:function(e,t,r,i,l){s.vA(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let u=e,h=t,p=!1;4===t.rank&&(p=!0,h=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);let d=u[4],c=h.shape[4];s.vA(5===u.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`),s.vA(5===h.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${h.rank}`),s.vA(5===r.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${r.rank}`),s.vA(d===r.shape[3],()=>`Error in conv3dDerInput: depth of input (${d}) must match input depth for filter ${r.shape[3]}.`),s.vA(c===r.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${r.shape[4]}.`);let f={dy:h,filter:r},m={pad:l,strides:i,inputShape:u},g=n.T2.runKernel(a.gC7,f,m);return p?(0,o.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},14227:(e,t,r)=>{"use strict";r.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>u,YQ:()=>a,l5:()=>i,p$:()=>l,qk:()=>g,s_:()=>b,uf:()=>o});var n=r(23299);function a(e,t,r,n,s="NHWC",i){let l=[...t,e[3]];return o(e,l,r,i,n,null,null,y(s))}function s(e,t,r,n,a,i,l="channelsLast"){let u;let[p,d]=h(t);if("channelsLast"===l)u=[p,d,e[3],e[3]];else if("channelsFirst"===l)u=[p,d,e[1],e[1]];else throw Error(`Unknown dataFormat ${l}`);return o(e,u,r,n,a,i,!1,l)}function i(e,t,r,n,a,s,o="NDHWC"){let u,h;let[d,c,f]=p(t);if("NDHWC"===o)h="channelsLast",u=[d,c,f,e[4],e[4]];else if("NCDHW"===o)h="channelsFirst",u=[d,c,f,e[1],e[1]];else throw Error(`Unknown dataFormat ${o}`);return l(e,u,r,n,a,!1,h,s)}function o(e,t,r,n,a,s,i=!1,l="channelsLast"){let p,[f,m,g,y]=[-1,-1,-1,-1];if("channelsLast"===l)[f,m,g,y]=e;else if("channelsFirst"===l)[f,y,m,g]=e;else throw Error(`Unknown dataFormat ${l}`);let[b,x,,v]=t,[w,T]=h(r),[S,N]=h(n),k=d(b,S),I=d(x,N),{padInfo:C,outHeight:E,outWidth:A}=function(e,t,r,n,a,s,i,o,l){let h,p,d;if("number"==typeof e){let a=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,type:a};let i=function(e,t,r,n,a){null==n&&(n=u(e,t,r));let s=e[0],i=e[1];return[c((s-t+2*n)/r+1,a),c((i-t+2*n)/r+1,a)]}([t,r],s,n,e,o);p=i[0],d=i[1]}else if("same"===e){let e=Math.max(0,((p=Math.ceil(t/n))-1)*n+s-t),o=Math.max(0,((d=Math.ceil(r/a))-1)*a+i-r),l=Math.floor(e/2),u=Math.floor(o/2);h={top:l,bottom:e-l,left:u,right:o-u,type:"SAME"}}else if("valid"===e)h={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/n),d=Math.ceil((r-i+1)/a);else if("object"==typeof e){let u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];h={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},p=c((t-s+u+f)/n+1,o),d=c((r-i+m+g)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outHeight:p,outWidth:d}}(a,m,g,w,T,k,I,s,l),$=i?v*y:v;return"channelsFirst"===l?p=[f,$,E,A]:"channelsLast"===l&&(p=[f,E,A,$]),{batchSize:f,dataFormat:l,inHeight:m,inWidth:g,inChannels:y,outHeight:E,outWidth:A,outChannels:$,padInfo:C,strideHeight:w,strideWidth:T,filterHeight:b,filterWidth:x,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationHeight:S,dilationWidth:N,inShape:e,outShape:p,filterShape:t}}function l(e,t,r,n,a,s=!1,i="channelsLast",o){let h,[f,m,g,y,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[f,m,g,y,b]=e;else if("channelsFirst"===i)[f,b,m,g,y]=e;else throw Error(`Unknown dataFormat ${i}`);let[x,v,w,,T]=t,[S,N,k]=p(r),[I,C,E]=p(n),A=d(x,I),$=d(v,C),R=d(w,E),{padInfo:F,outDepth:_,outHeight:D,outWidth:O}=function(e,t,r,n,a,s,i,o,l,h,p){let d,f,m,g;if("valid"===e&&(e=0),"number"==typeof e){let y=0===e?"VALID":"NUMBER";d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:y};let b=function(e,t,r,n,a,s){null==a&&(a=u(e,t[0],n[0]));let i=[0,0,0,1];for(let r=0;r<3;r++)e[r]+2*a>=t[r]&&(i[r]=c((e[r]-t[r]+2*a)/n[r]+1,s));return i}([t,r,n,1],[o,l,h],0,[a,s,i],e,p);f=b[0],m=b[1],g=b[2]}else if("same"===e){let e=((f=Math.ceil(t/a))-1)*a+o-t,u=((m=Math.ceil(r/s))-1)*s+l-r,p=((g=Math.ceil(n/i))-1)*i+h-n,c=Math.floor(e/2),y=Math.floor(u/2),b=Math.floor(p/2);d={top:y,bottom:u-y,left:b,right:p-b,front:c,back:e-c,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(a,m,g,y,S,N,k,A,$,R,o),L=s?T*b:T;return"channelsFirst"===i?h=[f,L,_,D,O]:"channelsLast"===i&&(h=[f,_,D,O,L]),{batchSize:f,dataFormat:i,inDepth:m,inHeight:g,inWidth:y,inChannels:b,outDepth:_,outHeight:D,outWidth:O,outChannels:L,padInfo:F,strideDepth:S,strideHeight:N,strideWidth:k,filterDepth:x,filterHeight:v,filterWidth:w,effectiveFilterDepth:A,effectiveFilterHeight:$,effectiveFilterWidth:R,dilationDepth:I,dilationHeight:C,dilationWidth:E,inShape:e,outShape:h,filterShape:t}}function u(e,t,r,n=1){let a=d(t,n);return Math.floor((e[0]*(r-1)-r+a)/2)}function h(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function c(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function f(e){let[t,r,n]=h(e);return 1===t&&1===r&&1===n}function m(e,t){return f(e)||f(t)}function g(e){return h(e).every(e=>e>0)}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function b(e,t,r){if(null!=r){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);if("number"==typeof t)n.vA(n.E6(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{n.vA(n.E6(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}},71623:(e,t,r)=>{"use strict";r.d(t,{g:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({cos_:function(e){let t=(0,s.YT)(e,"x","cos","float32");return n.T2.runKernel(a.Mn0,{x:t})}})},15349:(e,t,r)=>{"use strict";r.d(t,{y:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({cosh_:function(e){let t=(0,s.YT)(e,"x","cosh","float32");return n.T2.runKernel(a.MnK,{x:t})}})},73442:(e,t,r)=>{"use strict";r.d(t,{L:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({cumprod_:function(e,t=0,r=!1,i=!1){let o=(0,s.YT)(e,"x","cumprod");return n.T2.runKernel(a.jj_,{x:o},{axis:t,exclusive:r,reverse:i})}})},36478:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({cumsum_:function(e,t=0,r=!1,i=!1){let o=(0,s.YT)(e,"x","cumsum");return n.T2.runKernel(a.nY8,{x:o},{axis:t,exclusive:r,reverse:i})}})},87302:(e,t,r)=>{"use strict";r.d(t,{R:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({depthToSpace_:function(e,t,r="NHWC"){let o=(0,s.YT)(e,"x","depthToSpace","float32"),l="NHWC"===r?o.shape[1]:o.shape[2],u="NHWC"===r?o.shape[2]:o.shape[3],h="NHWC"===r?o.shape[3]:o.shape[1];return i.vA(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),i.vA(l*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${l} and ${t}  for depthToSpace with input shape
    ${o.shape}`),i.vA(u*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${u} and ${t} for depthToSpace with input shape
        ${o.shape}`),i.vA(h%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${h} for depthToSpace with input shape ${o.shape}`),n.T2.runKernel(a.TMz,{x:o},{blockSize:t,dataFormat:r})}})},45594:(e,t,r)=>{"use strict";r.d(t,{G:()=>h});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(14227),l=r(59429),u=r(97094);let h=(0,l.op)({depthwiseConv2d_:function(e,t,r,l,h="NHWC",p=[1,1],d){let c=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32"),m=c,g=!1;3===c.rank&&(g=!0,m=(0,u.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),i.vA(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),i.vA(4===f.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`);let y="NHWC"===h?m.shape[3]:m.shape[1];i.vA(y===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`),o.s_("depthwiseConv2d",l,d);let b={x:m,filter:f},x=n.T2.runKernel(a.tGH,b,{strides:r,pad:l,dataFormat:h,dilations:p,dimRoundingMode:d});return g?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},89022:(e,t,r)=>{"use strict";r.d(t,{x:()=>o});var n=r(54685),a=r(71699),s=r(59429),i=r(97094);let o=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,r,s,o,l=[1,1],u){let h=e;3===e.rank&&(h=(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d={x:h,dy:p};return n.T2.runKernel(a.X$8,d,{strides:s,pad:o,dimRoundingMode:u,dilations:l,filterShape:r})}})},24556:(e,t,r)=>{"use strict";r.d(t,{l:()=>o});var n=r(54685),a=r(71699),s=r(59429),i=r(97094);let o=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,r,s,o,l=[1,1],u){let h=t,p=!1;3===t.rank&&(p=!0,h=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d={dy:h,filter:r},c=n.T2.runKernel(a.nVu,d,{strides:s,pad:o,dimRoundingMode:u,dilations:l,inputShape:e});return p?(0,i.t)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}})},73164:(e,t,r)=>{"use strict";r.d(t,{X:()=>u});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(59429),l=r(97094);let u=(0,o.op)({dilation2d_:function(e,t,r,o,u=[1,1],h="NHWC"){let p=(0,s.YT)(e,"x","dilation2d"),d=(0,s.YT)(t,"filter","dilation2d");i.vA(3===p.rank||4===p.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${p.rank}.`),i.vA(3===d.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${d.rank}.`),i.vA("NHWC"===h,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${h}`);let c=p,f=!1;3===p.rank&&(c=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),f=!0),i.vA(c.shape[3]===d.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${d.shape[2]}`);let m={x:c,filter:d},g=n.T2.runKernel(a.jxD,m,{strides:r,pad:o,dilations:u});return f?(0,l.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},15575:(e,t,r)=>{"use strict";r.d(t,{y:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(75533);let l=(0,r(59429).op)({div_:function(e,t){let r=(0,i.YT)(e,"a","div"),l=(0,i.YT)(t,"b","div");if([r,l]=(0,s.makeTypesMatch)(r,l),"int32"===r.dtype&&"int32"===l.dtype)return(0,o.w)(r,l);let u={a:r,b:l};return n.T2.runKernel(a.sDr,u,{})}})},77949:(e,t,r)=>{"use strict";r.d(t,{e:()=>h});var n=r(4525),a=r(16381),s=r(15575),i=r(31648),o=r(59429),l=r(20131),u=r(12435);let h=(0,o.op)({divNoNan_:function(e,t){let r=(0,a.YT)(e,"a","div"),o=(0,a.YT)(t,"b","div");[r,o]=(0,n.makeTypesMatch)(r,o);let h=(0,s.y)(r,o),p=(0,u.P)(h),d=(0,i.L)(o,p);return(0,l._)(d,p,h)}})},20355:(e,t,r)=>{"use strict";r.d(t,{O:()=>l});var n=r(16381),a=r(23299),s=r(1075),i=r(59429),o=r(97094);let l=(0,i.op)({dot_:function(e,t){let r=(0,n.YT)(e,"t1","dot"),i=(0,n.YT)(t,"t2","dot");a.vA((1===r.rank||2===r.rank)&&(1===i.rank||2===i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${r.rank} and ${i.rank}.`);let l=1===r.rank?r.size:r.shape[1],u=1===i.rank?i.size:i.shape[0];if(a.vA(l===u,()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`),1===r.rank&&1===i.rank){let e=(0,o.t)(r,[1,-1]),t=(0,o.t)(i,[-1,1]),n=(0,s.N)(e,t);return(0,o.t)(n,[])}if(1===r.rank&&2===i.rank){let e=(0,o.t)(r,[1,-1]),t=(0,o.t)(i,[i.shape[0],i.shape[1]]),n=(0,s.N)(e,t);return(0,o.t)(n,[n.size])}if(2===r.rank&&1===i.rank){let e=(0,o.t)(i,[-1,1]),t=(0,s.N)(r,e);return(0,o.t)(t,[t.size])}{let e=(0,o.t)(i,[i.shape[0],i.shape[1]]);return(0,s.N)(r,e)}}})},25724:(e,t,r)=>{"use strict";r.d(t,{P:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({elu_:function(e){let t=(0,s.YT)(e,"x","elu","float32");return n.T2.runKernel(a.Pah,{x:t})}})},31648:(e,t,r)=>{"use strict";r.d(t,{L:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({equal_:function(e,t){let r=(0,i.YT)(e,"a","equal","string_or_numeric"),l=(0,i.YT)(t,"b","equal","string_or_numeric");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.BRl,u)}})},48867:(e,t,r)=>{"use strict";r.d(t,{Y:()=>l});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(16747);let l=(0,r(59429).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");i.vA("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=(0,o.w)(t,"float32"));let r={x:t};return n.T2.runKernel(a._s9,r)}})},17931:(e,t,r)=>{"use strict";r.d(t,{p:()=>a});var n=r(89874);let a=(0,r(59429).op)({euclideanNorm_:function(e,t=null,r=!1){return(0,n.x)(e,"euclidean",t,r)}})},47831:(e,t,r)=>{"use strict";r.d(t,{o:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({exp_:function(e){let t=(0,s.YT)(e,"x","exp");return n.T2.runKernel(a.ox3,{x:t})}})},34238:(e,t,r)=>{"use strict";r.d(t,{U:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({expandDims_:function(e,t=0){let r=(0,s.YT)(e,"x","expandDims","string_or_numeric");return i.vA(t<=r.rank,()=>"Axis must be <= rank of the tensor"),n.T2.runKernel(a.ybN,{input:r},{dim:t})}})},27121:(e,t,r)=>{"use strict";r.d(t,{I:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({expm1_:function(e){let t=(0,s.YT)(e,"x","expm1");return n.T2.runKernel(a.ybj,{x:t})}})},85565:(e,t,r)=>{"use strict";r.d(t,{G:()=>i});var n=r(54685),a=r(71699),s=r(23299);function i(e,t,r){(0,s.SA)(e),r=r||(0,s.X$)(t);let i={shape:e,value:t,dtype:r};return n.T2.runKernel(a.SQl,{},i)}},88322:(e,t,r)=>{"use strict";r.d(t,{R:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({floor_:function(e){let t=(0,s.YT)(e,"x","floor","float32");return n.T2.runKernel(a.ZgB,{x:t})}})},75533:(e,t,r)=>{"use strict";r.d(t,{w:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({floorDiv_:function(e,t){let r=(0,i.YT)(e,"a","floorDiv"),o=(0,i.YT)(t,"b","floorDiv");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.ElG,l)}})},87808:(e,t,r)=>{"use strict";r.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var n=r(46012),a=r(25724),s=r(36957),i=r(87698),o=r(66174),l=r(19834),u=r(16032),h=r(97094),p=r(51068),d=r(41518),c=r(84575);function f(e,t,r){if(null==r||"linear"===r)return e;if("relu"===r)return(0,i.l)(e,(0,d.P)(t));throw Error(`Cannot compute gradient for fused activation ${r}.`)}function m(e,t){let r=t,a=n.getReductionAxes(e.shape,t.shape);return a.length>0&&(r=(0,c.c)(r,a)),(0,h.t)(r,e.shape)}function g(e,t,r,n){if("linear"===t)return e;if("relu"===t)return(0,l.V)(e);if("elu"===t)return(0,a.P)(e);if("relu6"===t)return(0,u.j)(e);if("prelu"===t)return(0,o.N)(e,r);if("leakyrelu"===t)return(0,s.H)(e,n);if("sigmoid"===t)return(0,p.r)(e);throw Error(`Unknown fused activation ${t}.`)}let y=(e,t)=>!(e>0)||"linear"===t},61675:(e,t,r)=>{"use strict";r.d(t,{k:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({gather_:function(e,t,r=0,i=0){let o=(0,s.YT)(e,"x","gather"),l=(0,s.YT)(t,"indices","gather","int32");return n.T2.runKernel(a.mxL,{x:o,indices:l},{axis:r,batchDims:i})}})},77214:(e,t,r)=>{"use strict";r.d(t,{r:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({greater_:function(e,t){let r=(0,i.YT)(e,"a","greater","string_or_numeric"),l=(0,i.YT)(t,"b","greater","string_or_numeric");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.XhZ,u)}})},83909:(e,t,r)=>{"use strict";r.d(t,{D:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({greaterEqual_:function(e,t){let r=(0,i.YT)(e,"a","greaterEqual","string_or_numeric"),l=(0,i.YT)(t,"b","greaterEqual","string_or_numeric");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.lLS,u)}})},2822:(e,t,r)=>{"use strict";r.d(t,{n:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({imag_:function(e){let t=(0,s.YT)(e,"input","imag");return n.T2.runKernel(a.dv8,{input:t})}})},40063:(e,t,r)=>{"use strict";r.d(t,{v:()=>u});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(59429),l=r(97094);let u=(0,o.op)({resizeBilinear_:function(e,t,r=!1,o=!1){let u=(0,s.YT)(e,"images","resizeBilinear");i.vA(3===u.rank||4===u.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`),i.vA(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),i.vA(!1===o||!1===r,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let h=u,p=!1;3===u.rank&&(p=!0,h=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));let[]=t,d={images:h},c=n.T2.runKernel(a.hgw,d,{alignCorners:r,halfPixelCenters:o,size:t});return p?(0,l.t)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}})},38974:(e,t,r)=>{"use strict";r.d(t,{b:()=>u});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(59429),l=r(97094);let u=(0,o.op)({resizeNearestNeighbor_:function(e,t,r=!1,o=!1){let u=(0,s.YT)(e,"images","resizeNearestNeighbor");i.vA(3===u.rank||4===u.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`),i.vA(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),i.vA("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),i.vA(!1===o||!1===r,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let h=u,p=!1;3===u.rank&&(p=!0,h=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));let[]=t,d={images:h},c=n.T2.runKernel(a.jOE,d,{alignCorners:r,halfPixelCenters:o,size:t});return p?(0,l.t)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}})},74962:(e,t,r)=>{"use strict";r.d(t,{M:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({isFinite_:function(e){let t=(0,s.YT)(e,"x","isFinite");return n.T2.runKernel(a.gIW,{x:t})}})},88204:(e,t,r)=>{"use strict";r.d(t,{E:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({isInf_:function(e){let t=(0,s.YT)(e,"x","isInf");return n.T2.runKernel(a.E3$,{x:t})}})},13346:(e,t,r)=>{"use strict";r.d(t,{y:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({isNaN_:function(e){let t=(0,s.YT)(e,"x","isNaN");return n.T2.runKernel(a.iPs,{x:t})}})},36957:(e,t,r)=>{"use strict";r.d(t,{H:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({leakyRelu_:function(e,t=.2){let r=(0,s.YT)(e,"x","leakyRelu");return n.T2.runKernel(a.X0$,{x:r},{alpha:t})}})},54513:(e,t,r)=>{"use strict";r.d(t,{M:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({less_:function(e,t){let r=(0,i.YT)(e,"a","less","string_or_numeric"),l=(0,i.YT)(t,"b","less","string_or_numeric");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.mIA,u)}})},47706:(e,t,r)=>{"use strict";r.d(t,{I:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({lessEqual_:function(e,t){let r=(0,i.YT)(e,"a","lessEqual","string_or_numeric"),l=(0,i.YT)(t,"b","lessEqual","string_or_numeric");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.CwD,u)}})},19801:(e,t,r)=>{"use strict";r.d(t,{K:()=>u});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(59429),l=r(97094);let u=(0,o.op)({localResponseNormalization_:function(e,t=5,r=1,o=1,u=.5){let h=(0,s.YT)(e,"x","localResponseNormalization");i.vA(4===h.rank||3===h.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${h.rank}.`),i.vA(i.E6(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));let c={x:p},f=n.T2.runKernel(a.jM4,c,{depthRadius:t,bias:r,alpha:o,beta:u});return d?(0,l.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},55958:(e,t,r)=>{"use strict";r.d(t,{R:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({log_:function(e){let t=(0,s.YT)(e,"x","log","float32");return n.T2.runKernel(a.tG8,{x:t})}})},17515:(e,t,r)=>{"use strict";r.d(t,{K:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({log1p_:function(e){let t=(0,s.YT)(e,"x","log1p");return n.T2.runKernel(a.Cg$,{x:t})}})},71985:(e,t,r)=>{"use strict";r.d(t,{n:()=>h});var n=r(51758),a=r(16381),s=r(87698),i=r(69970),o=r(59429),l=r(51068),u=r(95916);let h=(0,o.op)({logSigmoid_:function(e){let t=(0,a.YT)(e,"x","logSigmoid");return(0,n._X)(e=>({value:(0,i.H)((0,u.l)((0,i.H)(e))),gradFunc:t=>(0,s.l)(t,(0,l.r)((0,i.H)(e)))}))(t)}})},96211:(e,t,r)=>{"use strict";r.d(t,{H:()=>c});var n=r(51758),a=r(16381),s=r(16747),i=r(47831),o=r(55958),l=r(18394),u=r(87698),h=r(59429),p=r(10958),d=r(84575);let c=(0,h.op)({logSoftmax_:function(e,t=-1){let r=(0,a.YT)(e,"logits","logSoftmax");if(-1===t&&(t=r.rank-1),t!==r.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and axis was ${t}`);return(0,n._X)((e,r)=>{let n=(0,l.T)(e,t,!0),a=(0,p.j)(e,n),h=(0,p.j)((0,s.w)(a,"float32"),(0,o.R)((0,d.c)((0,i.o)(a),t,!0)));return r([h]),{value:h,gradFunc:(e,r)=>{let[n]=r,a=(0,i.o)(n);return(0,p.j)(e,(0,u.l)((0,d.c)(e,t,!0),a))}}})(r)}})},98326:(e,t,r)=>{"use strict";r.d(t,{V:()=>f});var n=r(16381),a=r(23299),s=r(23219),i=r(93370),o=r(47831),l=r(55958),u=r(18394),h=r(59429),p=r(97094),d=r(10958),c=r(84575);let f=(0,h.op)({logSumExp_:function(e,t=null,r=!1){let h=(0,n.YT)(e,"x","logSumExp"),f=(0,a.Y6)(t,h.shape),m=(0,u.T)(h,f,!0),g=(0,d.j)(h,m),y=(0,o.o)(g),b=(0,c.c)(y,f),x=(0,l.R)(b),v=(0,s.W)((0,p.t)(m,x.shape),x);if(r){let e=(0,i.SM)(v.shape,f);return(0,p.t)(v,e)}return v}})},94157:(e,t,r)=>{"use strict";r.d(t,{n:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(46012);let o=(0,r(59429).op)({logicalAnd_:function(e,t){let r=(0,s.YT)(e,"a","logicalAnd","bool"),o=(0,s.YT)(t,"b","logicalAnd","bool");return(0,i.assertAndGetBroadcastShape)(r.shape,o.shape),n.T2.runKernel(a.RUm,{a:r,b:o})}})},937:(e,t,r)=>{"use strict";r.d(t,{N:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({logicalNot_:function(e){let t=(0,s.YT)(e,"x","logicalNot","bool");return n.T2.runKernel(a.nZd,{x:t})}})},56017:(e,t,r)=>{"use strict";r.d(t,{z:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(46012);let o=(0,r(59429).op)({logicalOr_:function(e,t){let r=(0,s.YT)(e,"a","logicalOr","bool"),o=(0,s.YT)(t,"b","logicalOr","bool");return(0,i.assertAndGetBroadcastShape)(r.shape,o.shape),n.T2.runKernel(a.LXA,{a:r,b:o})}})},86725:(e,t,r)=>{"use strict";r.d(t,{r:()=>l});var n=r(16381),a=r(46012),s=r(94157),i=r(937),o=r(56017);let l=(0,r(59429).op)({logicalXor_:function(e,t){let r=(0,n.YT)(e,"a","logicalXor","bool"),l=(0,n.YT)(t,"b","logicalXor","bool");return(0,a.assertAndGetBroadcastShape)(r.shape,l.shape),(0,s.n)((0,o.z)(e,t),(0,i.N)((0,s.n)(e,t)))}})},1075:(e,t,r)=>{"use strict";r.d(t,{N:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({matMul_:function(e,t,r=!1,o=!1){let l=(0,i.YT)(e,"a","matMul"),u=(0,i.YT)(t,"b","matMul");[l,u]=(0,s.makeTypesMatch)(l,u);let h={a:l,b:u};return n.T2.runKernel(a.jAQ,h,{transposeA:r,transposeB:o})}})},18394:(e,t,r)=>{"use strict";r.d(t,{T:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({max_:function(e,t=null,r=!1){let i=(0,s.YT)(e,"x","max");return n.T2.runKernel(a.VAI,{x:i},{reductionIndices:t,keepDims:r})}})},87749:(e,t,r)=>{"use strict";r.d(t,{j:()=>h});var n=r(54685),a=r(71699),s=r(16381),i=r(23299),o=r(14227),l=r(59429),u=r(97094);let h=(0,l.op)({maxPool_:function(e,t,r,l,h){let p=(0,s.YT)(e,"x","maxPool"),d=p,c=!1;3===p.rank&&(c=!0,d=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===d.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${d.rank}.`),i.vA(o.G0(r,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`),o.s_("maxPool",l,h);let f={x:d},m=n.T2.runKernel(a.t3d,f,{filterSize:t,strides:r,pad:l,dimRoundingMode:h});return c?(0,u.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},89402:(e,t,r)=>{"use strict";r.d(t,{P:()=>u});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012),l=r(16747);let u=(0,r(59429).op)({maximum_:function(e,t){let r=(0,i.YT)(e,"a","maximum"),u=(0,i.YT)(t,"b","maximum");[r,u]=(0,s.makeTypesMatch)(r,u),"bool"===r.dtype&&(r=(0,l.w)(r,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(r.shape,u.shape);let h={a:r,b:u};return n.T2.runKernel(a.LDN,h)}})},40061:(e,t,r)=>{"use strict";r.d(t,{i:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({mean_:function(e,t=null,r=!1){let i=(0,s.YT)(e,"x","mean");return n.T2.runKernel(a.g5A,{x:i},{axis:t,keepDims:r})}})},5600:(e,t,r)=>{"use strict";r.d(t,{j:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({min_:function(e,t=null,r=!1){let i=(0,s.YT)(e,"x","min");return n.T2.runKernel(a.lNG,{x:i},{axis:t,keepDims:r})}})},22704:(e,t,r)=>{"use strict";r.d(t,{B:()=>u});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012),l=r(16747);let u=(0,r(59429).op)({minimum_:function(e,t){let r=(0,i.YT)(e,"a","minimum"),u=(0,i.YT)(t,"b","minimum");[r,u]=(0,s.makeTypesMatch)(r,u),"bool"===r.dtype&&(r=(0,l.w)(r,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(r.shape,u.shape);let h={a:r,b:u};return n.T2.runKernel(a.LG0,h)}})},3181:(e,t,r)=>{"use strict";r.d(t,{F:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({mirrorPad_:function(e,t,r){i.vA("reflect"===r||"symmetric"===r,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${r}.`);let o=(0,s.YT)(e,"x","mirrorPad");if(0===o.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.vA(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let l="reflect"===r?1:0;for(let e=0;e<o.rank;e++)i.vA(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.vA(t[e][0]>=0&&t[e][0]<=o.shape[e]-l&&t[e][1]>=0&&t[e][1]<=o.shape[e]-l,()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-l} or less than 0 for input of shape ${o.shape}`);return n.T2.runKernel(a.x7F,{x:o},{paddings:t,mode:r})}})},41760:(e,t,r)=>{"use strict";r.d(t,{z:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({mod_:function(e,t){let r=(0,i.YT)(e,"a","mod"),o=(0,i.YT)(t,"b","mod");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.BLA,l)}})},87698:(e,t,r)=>{"use strict";r.d(t,{l:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({mul_:function(e,t){let r=(0,i.YT)(e,"a","mul"),o=(0,i.YT)(t,"b","mul");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.xu7,l)}})},69970:(e,t,r)=>{"use strict";r.d(t,{H:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({neg_:function(e){let t=(0,s.YT)(e,"x","neg");return n.T2.runKernel(a.l0G,{x:t})}})},89874:(e,t,r)=>{"use strict";r.d(t,{x:()=>g});var n=r(16381),a=r(23299),s=r(86080),i=r(93370),o=r(18394),l=r(5600),u=r(59429),h=r(80154),p=r(97094),d=r(89860),c=r(83574),f=r(17771),m=r(84575);let g=(0,u.op)({norm_:function(e,t="euclidean",r=null,u=!1){let g=function e(t,r,n=null){if(0===t.rank)return(0,s.t)(t);if(1!==t.rank&&null===n)return e((0,p.t)(t,[-1]),r,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===r)return(0,m.c)((0,s.t)(t),n);if(r===1/0)return(0,o.T)((0,s.t)(t),n);if(r===-1/0)return(0,l.j)((0,s.t)(t),n);if("euclidean"===r||2===r)return(0,c.R)((0,m.c)((0,h.n)((0,s.t)(t),(0,d.d)(2,"int32")),n));throw Error(`Error in norm: invalid ord value: ${r}`)}if(Array.isArray(n)&&2===n.length){if(1===r)return(0,o.T)((0,m.c)((0,s.t)(t),n[0]),n[1]-1);if(r===1/0)return(0,o.T)((0,m.c)((0,s.t)(t),n[1]),n[0]);if(r===-1/0)return(0,l.j)((0,m.c)((0,s.t)(t),n[1]),n[0]);if("fro"===r||"euclidean"===r)return(0,c.R)((0,m.c)((0,f.E)(t),n));throw Error(`Error in norm: invalid ord value: ${r}`)}throw Error(`Error in norm: invalid axis: ${n}`)}(e=(0,n.YT)(e,"x","norm"),t,r),y=g.shape;if(u){let t=(0,a.Y6)(r,e.shape);y=i.SM(g.shape,t)}return(0,p.t)(g,y)}})},16614:(e,t,r)=>{"use strict";r.d(t,{E:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({notEqual_:function(e,t){let r=(0,i.YT)(e,"a","notEqual","string_or_numeric"),l=(0,i.YT)(t,"b","notEqual","string_or_numeric");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.ylV,u)}})},27576:(e,t,r)=>{"use strict";r.d(t,{M:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({oneHot_:function(e,t,r=1,i=0,o="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let l=(0,s.YT)(e,"indices","oneHot","int32");return n.T2.runKernel(a.urI,{indices:l},{dtype:o,depth:t,onValue:r,offValue:i})}})},84513:(e,t,r)=>{"use strict";r.d(t,{S:()=>function e(t,r="float32"){if((0,a.SA)(t),"complex64"===r){let r=e(t,"float32"),n=(0,i.U)(t,"float32");return(0,s.f)(r,n)}let o=(0,a.FZ)((0,a.Ze)(t),r);return n.T2.makeTensor(o,t,r)}});var n=r(54685),a=r(23299),s=r(83420),i=r(69011)},41389:(e,t,r)=>{"use strict";r.d(t,{P:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({onesLike_:function(e){let t=(0,s.YT)(e,"x","onesLike");return n.T2.runKernel(a.LWX,{x:t})}})},59429:(e,t,r)=>{"use strict";r.d(t,{B:()=>s,op:()=>i});var n=r(54685),a=r(23299);let s="__op";function i(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let r=t[0],i=e[r];r.endsWith("_")&&(r=r.substring(0,r.length-1));let o=(...e)=>{n.T2.startScope(r);try{let t=i(...e);return(0,a.yL)(t)&&console.error("Cannot return a Promise inside of tidy."),n.T2.endScope(t),t}catch(e){throw n.T2.endScope(null),e}};return Object.defineProperty(o,"name",{value:r+=s,configurable:!0}),o}},64098:(e,t,r)=>{"use strict";r.d(t,{BTT:()=>c.B,tnl:()=>s.t,HQu:()=>i.H,FqL:()=>o.F,WQq:()=>l.W,QiD:()=>f,Q7R:()=>m.Q,bzn:()=>g.b,FLi:()=>y.F,XRg:()=>b.X,qRo:()=>x.q,yHs:()=>v.y,rYl:()=>w.r,FPz:()=>T.F,rfv:()=>S.r,$jT:()=>N.$,sub:()=>E,lZX:()=>O,$v7:()=>M.$,BFc:()=>P,kSi:()=>z,T5N:()=>B,GTe:()=>L.G,HbZ:()=>W,vjT:()=>V,ftb:()=>rO,ROE:()=>U,hOW:()=>G.h,ra8:()=>Z.r,wgE:()=>k.w,mkO:()=>j.m,zQh:()=>K.z,o8B:()=>H.o,faB:()=>Y.f,xWs:()=>A.x,I1m:()=>Q,RPU:()=>q,O5O:()=>X,P1l:()=>J,kA9:()=>ee.k,Xtf:()=>et.X,wX9:()=>er.w,IPL:()=>en,jIJ:()=>es,gnS:()=>ei.g,yIG:()=>eo.y,_jP:()=>rZ,Lp0:()=>el.L,rCv:()=>eu.r,aOp:()=>eh,Rj8:()=>ep.R,Gl3:()=>ed.G,smy:()=>ec,X7t:()=>ef.X,y4m:()=>em.y,ek5:()=>eg.e,Omf:()=>ey.O,EZY:()=>rU,_3C:()=>eb,Pqc:()=>ex.P,FJY:()=>rG,QP2:()=>ev,LCg:()=>ew.L,Y12:()=>eT.Y,p4S:()=>eS.p,oNF:()=>eN.o,UG6:()=>ek.U,IYd:()=>eI.I,y5U:()=>eE,hVP:()=>re.h,GSj:()=>eA.G,RIf:()=>e$.R,wh_:()=>eR.w,cZk:()=>a,kgh:()=>eF.k,SY9:()=>rV,rhj:()=>e_.r,DQN:()=>eD.D,KGM:()=>rt.K,ngS:()=>eO.n,Slp:()=>nP,U4u:()=>rj,ggX:()=>rr.g,MIs:()=>eL.M,EN4:()=>eM.E,yrW:()=>eP.y,H8d:()=>ez.H,M7h:()=>eB.M,InN:()=>eW.I,mPL:()=>nz,mT8:()=>eV,Kgs:()=>eU.K,Rm2:()=>eG.R,Kko:()=>eZ.K,nqI:()=>ej.n,HPB:()=>eK.H,VZ:()=>eH.V,n76:()=>eY.n,NSZ:()=>eQ.N,ztW:()=>eq.z,rxB:()=>eX.r,YYh:()=>nB,yzS:()=>e0,NoW:()=>$.N,T9B:()=>e1.T,jgi:()=>e2.j,NYV:()=>e3,RO:()=>e4,PhQ:()=>e9.P,i2o:()=>e5.i,OYQ:()=>e7,jkA:()=>te.j,BpO:()=>tt.B,FFZ:()=>tr.F,ziu:()=>tn.z,Clk:()=>to,CRk:()=>rz,lKK:()=>R.l,YDF:()=>tl,OjQ:()=>tu,HZy:()=>th.H,xbf:()=>rM.x,Ec:()=>tp.E,Mw0:()=>td.M,SaS:()=>e6.S,P61:()=>tc.P,op:()=>c.op,X4o:()=>tf,eVF:()=>tm.e,BZs:()=>tg,grY:()=>ty,XHu:()=>tb,WLX:()=>tx,dzn:()=>tv.d,n7C:()=>tw.n,NsG:()=>tT.N,yyV:()=>tS.y,_eU:()=>tN._,whe:()=>tk,iyU:()=>tI,Q0_:()=>tC,_9M:()=>tE,pR9:()=>t_,FE$:()=>tD,m0H:()=>tO,YeY:()=>tL,HYA:()=>tM,y17:()=>tP,xav:()=>tz.x,VOZ:()=>tB.V,VVh:()=>tW.V,j__:()=>tV.j,tQQ:()=>C.t,BEg:()=>tU.B,QD2:()=>tG,LMr:()=>tZ,I2l:()=>tj,JYU:()=>tK,z8$:()=>rn.z,LIG:()=>tH.L,Z$r:()=>tY.Z,d_2:()=>tQ.d,NFr:()=>rB,sZg:()=>eJ,WfX:()=>tq.W,wdz:()=>tX.w,F12:()=>tJ,ry7:()=>F.r,_SZ:()=>t0._,vPA:()=>nM,F8e:()=>t1.F,L0l:()=>t2.L,dik:()=>_.d,Q$M:()=>t3,zAd:()=>t4,wck:()=>t9,R0O:()=>t5,Vs9:()=>t6.V,lw0:()=>t8.l,eDJ:()=>t7.e,lMo:()=>nW,Zhr:()=>rW,lOn:()=>nL,lDo:()=>ra.l,RZD:()=>rs.R,EwI:()=>ts.E,Pbu:()=>ri.P,r2V:()=>ro.r,t$z:()=>rl.t,PMw:()=>ru.P,Ym9:()=>rh.Y,YjP:()=>nV,jbE:()=>ti.j,czq:()=>rp.c,Mlm:()=>rd.M,ymU:()=>D.y,OEK:()=>rc.O,tGX:()=>rm,KtR:()=>rg,$_$:()=>ry.$,g9W:()=>rb,Lpo:()=>rx,yxw:()=>rv,NNh:()=>rT,Vsq:()=>eC.V,rfw:()=>rS.r,mgz:()=>rL.m,efE:()=>rN,AmM:()=>rk.A,zAU:()=>rI.z,K$i:()=>rC.K,rni:()=>rE,bvq:()=>rA,_M9:()=>r$._,YJN:()=>rF,Ul9:()=>r_.U,POl:()=>rD.P});var n,a={};r.r(a),r.d(a,{conv2d:()=>rX,depthwiseConv2d:()=>r1,matMul:()=>r2});var s=r(86080),i=r(44718),o=r(75814),l=r(23219),u=r(54685),h=r(71699),p=r(16381),d=r(23299),c=r(59429);let f=(0,c.op)({addN_:function(e){d.vA(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),d.vA(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>(0,p.YT)(e,`tensors${t}`,"addN")),r=t[0];return t.forEach(e=>{if(e.dtype!==r.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!d.r1(e.shape,r.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),u.T2.runKernel(h.EkD,t)}});var m=r(97715),g=r(82746),y=r(8397),b=r(38363),x=r(64187),v=r(89313),w=r(31258),T=r(14308),S=r(4282),N=r(98283),k=r(16747),I=r(14227),C=r(97094);let E=(0,c.op)({avgPool3d_:function(e,t,r,n,a,s="NDHWC"){let i=(0,p.YT)(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=(0,C.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),d.vA("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),d.vA("number"==typeof r&&r>0||Array.isArray(r)&&r[0]>0&&r[1]>0&&r[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${r}'`),(0,I.s_)("avgPool3d",n,a);let c={x:o},f=u.T2.runKernel(h.cS,c,{filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:s});return(f=(0,k.w)(f,o.dtype),l)?(0,C.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});var A=r(77668),$=r(1075),R=r(87698),F=r(51068),_=r(27366),D=r(49445);let O=(0,c.op)({basicLSTMCell_:function(e,t,r,n,a,s){let i=(0,p.YT)(e,"forgetBias","basicLSTMCell"),o=(0,p.YT)(t,"lstmKernel","basicLSTMCell"),u=(0,p.YT)(r,"lstmBias","basicLSTMCell"),h=(0,p.YT)(n,"data","basicLSTMCell"),d=(0,p.YT)(a,"c","basicLSTMCell"),c=(0,p.YT)(s,"h","basicLSTMCell"),f=(0,A.x)([h,c],1),m=(0,$.N)(f,o),g=(0,l.W)(m,u),y=g.shape[0],b=g.shape[1]/4,x=[y,b],v=(0,_.d)(g,[0,0],x),w=(0,_.d)(g,[0,b],x),T=(0,_.d)(g,[0,2*b],x),S=(0,_.d)(g,[0,3*b],x),N=(0,l.W)((0,R.l)((0,F.r)(v),(0,D.y)(w)),(0,R.l)(d,(0,F.r)((0,l.W)(i,T)))),k=(0,R.l)((0,D.y)(N),(0,F.r)(S));return[N,k]}});var L=r(9756),M=r(54720);let P=(0,c.op)({batchNorm2d_:function(e,t,r,n,a,s){let i,o;let l=(0,p.YT)(e,"x","batchNorm"),u=(0,p.YT)(t,"mean","batchNorm"),h=(0,p.YT)(r,"variance","batchNorm");return null!=a&&(i=(0,p.YT)(a,"scale","batchNorm")),null!=n&&(o=(0,p.YT)(n,"offset","batchNorm")),d.vA(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),d.vA(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),d.vA(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`),null!=i&&d.vA(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`),null!=o&&d.vA(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),(0,M.$)(l,u,h,o,i,s)}}),z=(0,c.op)({batchNorm3d_:function(e,t,r,n,a,s){let i,o;let l=(0,p.YT)(e,"x","batchNorm"),u=(0,p.YT)(t,"mean","batchNorm"),h=(0,p.YT)(r,"variance","batchNorm");return null!=a&&(i=(0,p.YT)(a,"scale","batchNorm")),null!=n&&(o=(0,p.YT)(n,"offset","batchNorm")),d.vA(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),d.vA(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),d.vA(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`),null!=i&&d.vA(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`),null!=o&&d.vA(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),(0,M.$)(l,u,h,o,i,s)}}),B=(0,c.op)({batchNorm4d_:function(e,t,r,n,a,s){let i,o;let l=(0,p.YT)(e,"x","batchNorm"),u=(0,p.YT)(t,"mean","batchNorm"),h=(0,p.YT)(r,"variance","batchNorm");return null!=a&&(i=(0,p.YT)(a,"scale","batchNorm")),null!=n&&(o=(0,p.YT)(n,"offset","batchNorm")),d.vA(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),d.vA(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),d.vA(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`),null!=i&&d.vA(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`),null!=o&&d.vA(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),(0,M.$)(l,u,h,o,i,s)}}),W=(0,c.op)({bincount_:function(e,t,r){let n=(0,p.YT)(e,"x","bincount"),a=(0,p.YT)(t,"weights","bincount");return d.vA("int32"===n.dtype,()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),d.vA(r>=0,()=>`size must be non-negative, but got ${r}.`),d.vA(a.size===n.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${a.shape}.`),u.T2.runKernel(h.N4F,{x:n,weights:a},{size:r})}}),V=(0,c.op)({bitwiseAnd_:function(e,t){let r=(0,p.YT)(e,"x","bitwiseAnd"),n=(0,p.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(r.shape,n.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${r.shape}, y: ${n.shape}`);if("int32"!==r.dtype||"int32"!==n.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${r.dtype} and type of y: ${n.dtype}`);return u.T2.runKernel(h.HNs,{a:r,b:n})}}),U=(0,c.op)({broadcastArgs_:function(e,t){let r=(0,p.YT)(e,"s0","broadcastArgs","int32"),n=(0,p.YT)(t,"s1","broadcastArgs","int32");if(1!==r.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${r.rank}`);if(1!==n.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);return u.T2.runKernel(h.vj7,{s0:r,s1:n})}});var G=r(98313),Z=r(97698),j=r(50885),K=r(98084),H=r(51717),Y=r(83420);let Q=(0,c.op)({concat1d_:function(e){return(0,A.x)(e,0)}}),q=(0,c.op)({concat2d_:function(e,t){return(0,A.x)(e,t)}}),X=(0,c.op)({concat3d_:function(e,t){return(0,A.x)(e,t)}}),J=(0,c.op)({concat4d_:function(e,t){return(0,A.x)(e,t)}});var ee=r(12975),et=r(18120),er=r(16664);let en=(0,c.op)({conv3d_:function(e,t,r,n,a="NDHWC",s=[1,1,1]){let i=(0,p.YT)(e,"x","conv3d"),o=(0,p.YT)(t,"filter","conv3d"),l=i,c=!1;4===i.rank&&(c=!0,l=(0,C.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),d.vA(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),d.vA(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),d.vA((0,I.G0)(r,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),d.vA("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),d.vA((0,I.qk)(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),d.vA((0,I.qk)(r),()=>"Error in conv3D: Strides should be larger than 0.");let f={x:l,filter:o},m=u.T2.runKernel(h.A1h,f,{strides:r,pad:n,dataFormat:a,dilations:s});return c?(0,C.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var ea=r(5459);let es=(0,c.op)({conv3dTranspose_:function(e,t,r,n,a){let s=(0,p.YT)(e,"x","conv3dTranspose"),i=(0,p.YT)(t,"filter","conv3dTranspose");return(0,ea.c)(r,s,i,n,a)}});var ei=r(71623),eo=r(15349),el=r(73442),eu=r(36478);let eh=(0,c.op)({denseBincount_:function(e,t,r,n=!1){let a=(0,p.YT)(e,"x","denseBincount"),s=(0,p.YT)(t,"weights","denseBincount");return d.vA("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),d.vA(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),d.vA(r>=0,()=>`size must be non-negative, but got ${r}.`),d.vA(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`),u.T2.runKernel(h.wNW,{x:a,weights:s},{size:r,binaryOutput:n})}});var ep=r(87302),ed=r(45594);let ec=(0,c.op)({diag_:function(e){let t=(0,p.YT)(e,"x","diag");return u.T2.runKernel(h.ORI,{x:t})}});var ef=r(73164),em=r(15575),eg=r(77949),ey=r(20355);let eb=(0,c.op)({einsum_:function(e,...t){let r=t.map((e,t)=>(0,p.YT)(e,`tensors${t}`,"einsum"));return u.T2.runKernel(h.Qgm,r,{equation:e})}});var ex=r(25724);let ev=(0,c.op)({ensureShape_:function(e,t){let r=(0,p.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(r.shape,t))throw Error(`EnsureShape: Shape of tensor ${r.shape} is not compatible with expected shape ${t}`);return e}});var ew=r(31648),eT=r(48867),eS=r(17931),eN=r(47831),ek=r(34238),eI=r(27121),eC=r(18704);let eE=(0,c.op)({eye_:function(e,t,r,n="float32"){null==t&&(t=e);let a=(0,Z.r)([e,t],n),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=(0,C.t)(a.toTensor(),[e,t]);if(null==r)return i;if(1===r.length)return(0,eC.V)((0,ek.U)(i,0),[r[0],1,1]);if(2===r.length)return(0,eC.V)((0,ek.U)((0,ek.U)(i,0),0),[r[0],r[1],1,1]);if(3===r.length)return(0,eC.V)((0,ek.U)((0,ek.U)((0,ek.U)(i,0),0),0),[r[0],r[1],r[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${r.length}D.`)}});var eA=r(85565),e$=r(88322),eR=r(75533),eF=r(61675),e_=r(77214),eD=r(83909),eO=r(2822),eL=r(74962),eM=r(88204),eP=r(13346),ez=r(36957),eB=r(54513),eW=r(47706);function eV(e,t,r){if(r<=0)throw Error("The number of values should be positive.");return u.T2.runKernel(h.mnI,{},{start:e,stop:t,num:r})}var eU=r(19801),eG=r(55958),eZ=r(17515),ej=r(71985),eK=r(96211),eH=r(98326),eY=r(94157),eQ=r(937),eq=r(56017),eX=r(86725);let eJ=(0,c.op)({searchSorted_:function(e,t,r="left"){let n=(0,p.YT)(e,"sortedSequence","searchSorted"),a=(0,p.YT)(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=a.shape[a.shape.length-1],o=(0,C.t)(n,[-1,s]),l=(0,C.t)(a,[-1,i]);if(o.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(l.shape)>=0x80000000)throw Error("values tensor size must less than 2147483648");if(o.shape[1]>=0x80000000)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);return u.T2.runKernel(h.uWl,{sortedSequence:o,values:l},{side:r})}});function e0(e,t){return eJ(e,t,"left")}var e1=r(18394),e2=r(87749);let e3=(0,c.op)({maxPool3d_:function(e,t=[1,1,1],r,n,a,s="NDHWC"){let i=(0,p.YT)(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=(0,C.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),d.vA("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),(0,I.s_)("maxPool3d",n,a);let c={x:o},f=u.T2.runKernel(h.ySp,c,{filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:s});return l?(0,C.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),e4=(0,c.op)({maxPoolWithArgmax_:function(e,t,r,n,a=!1){let s=(0,p.YT)(e,"x","maxPoolWithArgmax"),i=u.T2.runKernel(h.TL8,{x:s},{filterSize:t,strides:r,pad:n,includeBatchInIndex:a});return{result:i[0],indexes:i[1]}}});var e9=r(89402),e5=r(40061),e6=r(84513),e8=r(3449);function e7(e,t,{indexing:r="xy"}={}){if("xy"!==r&&"ij"!==r)throw TypeError(`${r} is not a valid third argument to meshgrid`);if(void 0===e)return[];let n=(0,p.YT)(e,"x","meshgrid",e instanceof e8.qY?e.dtype:"float32");if(void 0===t)return[n];let a=(0,p.YT)(t,"y","meshgrid",t instanceof e8.qY?t.dtype:"float32"),s=(0,d.Ze)(n.shape),i=(0,d.Ze)(a.shape);return"xy"===r?(n=(0,C.t)(n,[1,-1]),a=(0,C.t)(a,[-1,1]),[(0,$.N)((0,e6.S)([i,1],n.dtype),n),(0,$.N)(a,(0,e6.S)([1,s],a.dtype))]):(n=(0,C.t)(n,[-1,1]),a=(0,C.t)(a,[1,-1]),[(0,$.N)(n,(0,e6.S)([1,i],n.dtype)),(0,$.N)((0,e6.S)([s,1],a.dtype),a)])}var te=r(5600),tt=r(22704),tr=r(3181),tn=r(41760),ta=r(93370),ts=r(17771),ti=r(10958);let to=(0,c.op)({moments_:function(e,t=null,r=!1){e=(0,p.YT)(e,"x","moments");let n=(0,d.Y6)(t,e.shape),a=(0,e5.i)(e,n,r),s=a.shape;r||(s=(0,ta.SM)(a.shape,n));let i=(0,ts.E)((0,ti.j)((0,k.w)(e,"float32"),(0,C.t)(a,s)));return{mean:a,variance:(0,e5.i)(i,n,r)}}}),tl=(0,c.op)({multiRNNCell_:function(e,t,r,n){let a=(0,p.YT)(t,"data","multiRNNCell"),s=(0,p.j1)(r,"c","multiRNNCell"),i=(0,p.j1)(n,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let r=e[t](o,s[t],i[t]);l.push(r[0]),l.push(r[1]),o=r[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}}),tu=(0,c.op)({multinomial_:function(e,t,r,n=!1){let a=(0,p.YT)(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${i}`);r=r||Math.random();let o=1===i?(0,C.t)(a,[1,-1]):a,l={numSamples:t,seed:r,normalized:n},d=u.T2.runKernel(h.WT3,{logits:o},l);return 1===i?(0,C.t)(d,[d.size]):d}});var th=r(69970),tp=r(16614),td=r(27576),tc=r(41389);let tf=(0,c.op)({outerProduct_:function(e,t){let r=(0,p.YT)(e,"v1","outerProduct"),n=(0,p.YT)(t,"v2","outerProduct");d.vA(1===r.rank&&1===n.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${r.rank} and ${n.rank}.`);let a=(0,C.t)(r,[-1,1]),s=(0,C.t)(n,[1,-1]);return(0,$.N)(a,s)}});var tm=r(85145);let tg=(0,c.op)({pad1d_:function(e,t,r=0){return(0,d.vA)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),(0,tm.e)(e,[t],r)}}),ty=(0,c.op)({pad2d_:function(e,t,r=0){return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,tm.e)(e,t,r)}}),tb=(0,c.op)({pad3d_:function(e,t,r=0){return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,tm.e)(e,t,r)}}),tx=(0,c.op)({pad4d_:function(e,t,r=0){return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,tm.e)(e,t,r)}});var tv=r(6174),tw=r(80154),tT=r(66174),tS=r(75895),tN=r(3781);let tk=(0,c.op)({raggedGather_:function(e,t,r,n){let a=e.map((e,t)=>(0,p.YT)(e,`tensors${t}`,"raggedGather","int32")),s=(0,p.YT)(t,"paramsDenseValues","raggedGather"),i=(0,p.YT)(r,"indices","raggedGather","int32"),o=u.T2.runKernel(h.oJ2,{paramsNestedSplits:a,paramsDenseValues:s,indices:i},{outputRaggedRank:n});return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),tI=(0,c.op)({raggedRange_:function(e,t,r){let n=(0,p.YT)(e,"starts","raggedRange"),a=(0,p.YT)(t,"limits","raggedRange",n.dtype),s=(0,p.YT)(r,"deltas","raggedRange",n.dtype),i=u.T2.runKernel(h.CQC,{starts:n,limits:a,deltas:s});return{rtNestedSplits:i[0],rtDenseValues:i[1]}}}),tC=(0,c.op)({raggedTensorToTensor_:function(e,t,r,n,a){let s=(0,p.YT)(e,"shape","raggedTensorToTensor","int32"),i=(0,p.YT)(t,"values","raggedTensorToTensor"),o=(0,p.YT)(r,"defaultValue","raggedTensorToTensor",i.dtype),l=n.map((e,t)=>(0,p.YT)(e,`tensors${t}`,"raggedTensorToTensor","int32"));return u.T2.runKernel(h.mH5,{shape:s,values:i,defaultValue:o,rowPartitionTensors:l},{rowPartitionTypes:a})}}),tE=(0,c.op)({rand_:function(e,t,r){(0,d.SA)(e);let n=(0,d.Ze)(e),a=null;if(null==r||"float32"===r)a=new Float32Array(n);else if("int32"===r)a=new Int32Array(n);else if("bool"===r)a=new Uint8Array(n);else throw Error(`Unknown data type ${r}`);for(let e=0;e<n;e++)a[e]=t();return u.T2.makeTensor(a,e,r)}});var tA=r(39567);class t${constructor(e,t,r,n,a){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=tA.alea(s.toString())}nextValue(){let e,t;if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let r=!1;for(;!r;){let n,a,s;do s=(n=2*this.random()-1)*n+(a=2*this.random()-1)*a;while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class tR{constructor(e,t,r,n){this.alpha=e,this.beta=1/t,this.dtype=r;let a=n||Math.random();this.randu=tA.alea(a.toString()),this.randn=new t$(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,n,a,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,t=1-.331*(e=n*n)*e,r=.5*e+this.d*(1-s+Math.log(s)),(a=this.randu())<t||Math.log(a)<r)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class tF{constructor(e=0,t=1,r,n){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=r,null==n&&(n=Math.random()),"number"==typeof n&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=tA.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}let t_=(0,c.op)({randomGamma_:function(e,t,r=1,n="float32",a){if((0,d.SA)(e),null==r&&(r=1),null==n&&(n="float32"),"float32"!==n&&"int32"!==n)throw Error(`Unsupported data type ${n}`);let s=new tR(t,r,n,a),i=(0,Z.r)(e,n);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),tD=(0,c.op)({randomNormal_:function(e,t=0,r=1,n,a){if((0,d.SA)(e),null!=n&&"bool"===n)throw Error(`Unsupported data type ${n}`);let s=new t$(t,r,n,!1,a),i=(0,Z.r)(e,n);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),tO=(0,c.op)({randomStandardNormal_:function(e,t,r){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return tD(e,0,1,t,r)}}),tL=(0,c.op)({randomUniform_:function(e,t=0,r=1,n="float32",a){(0,d.SA)(e);let s=(0,Z.r)(e,n),i=new tF(t,r,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),tM=(0,c.op)({randomUniformInt_:function(e,t,r,n){return tL(e,t,r,"int32",n)}});function tP(e,t,r=1,n="float32"){if(0===r)throw Error("Cannot have a step of zero");return u.T2.runKernel(h.Q6t,{},{start:e,stop:t,step:r,dtype:n})}var tz=r(12596),tB=r(44268),tW=r(19834),tV=r(16032),tU=r(99186);let tG=(0,c.op)({reverse1d_:function(e){let t=(0,p.YT)(e,"x","reverse");return d.vA(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),(0,tU.B)(t,0)}}),tZ=(0,c.op)({reverse2d_:function(e,t){let r=(0,p.YT)(e,"x","reverse");return d.vA(2===r.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${r.rank}.`),(0,tU.B)(r,t)}}),tj=(0,c.op)({reverse3d_:function(e,t){let r=(0,p.YT)(e,"x","reverse");return d.vA(3===r.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${r.rank}.`),(0,tU.B)(r,t)}}),tK=(0,c.op)({reverse4d_:function(e,t){let r=(0,p.YT)(e,"x","reverse");return d.vA(4===r.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${r.rank}.`),(0,tU.B)(r,t)}});var tH=r(34820),tY=r(75592),tQ=r(89860),tq=r(24639),tX=r(27964);let tJ=async function(e,t){let r=(0,p.YT)(e,"x","setdiff1d"),n=(0,p.YT)(t,"y","setdiff1d");d.vA(r.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${r.dtype}) and y (${n.dtype}).`),d.vA(1===r.rank,()=>`x should be 1D tensor, but got x (${r.shape}).`),d.vA(1===n.rank,()=>`y should be 1D tensor, but got y (${n.shape}).`);let a=await r.data(),s=new Set(await n.data()),i=0;for(let e=0;e<a.length;e++)!s.has(a[e])&&i++;let o=new e8.yl([i],r.dtype),l=new e8.yl([i],"int32");for(let e=0,t=0;e<a.length;e++)!s.has(a[e])&&(o.values[t]=a[e],l.values[t]=e,t++);return[o.toTensor(),l.toTensor()]};var t0=r(61069),t1=r(29630),t2=r(45782);let t3=(0,c.op)({slice1d_:function(e,t,r){let n=(0,p.YT)(e,"x","slice1d");return d.vA(1===n.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),(0,_.d)(n,[t],[r])}}),t4=(0,c.op)({slice2d_:function(e,t,r){let n=(0,p.YT)(e,"x","slice2d");return d.vA(2===n.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),(0,_.d)(n,t,r)}}),t9=(0,c.op)({slice3d_:function(e,t,r){let n=(0,p.YT)(e,"x","slice3d");return d.vA(3===n.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),(0,_.d)(n,t,r)}}),t5=(0,c.op)({slice4d_:function(e,t,r){let n=(0,p.YT)(e,"x","slice4d");return d.vA(4===n.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),(0,_.d)(n,t,r)}});var t6=r(76214),t8=r(95916),t7=r(1840),re=r(36255),rt=r(62556),rr=r(68082),rn=r(34495),ra=r(5156),rs=r(83574),ri=r(18425),ro=r(64412),rl=r(7636),ru=r(41518),rh=r(73454),rp=r(84575),rd=r(11735),rc=r(88689),rf=r(2291);function rm(e,t){(0,d.HO)(e);let r=(0,p.MZ)(e,t);if(1!==r.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return(0,rf.Q)(e,null,r,t)}function rg(e,t,r){if((0,d.HO)(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let n=(0,p.MZ)(e,r);if(2!==n.length&&1!==n.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,rf.Q)(e,t,n,r)}var ry=r(80618);function rb(e,t,r){if((0,d.HO)(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let n=(0,p.MZ)(e,r);if(4!==n.length&&1!==n.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,rf.Q)(e,t,n,r)}function rx(e,t,r){if((0,d.HO)(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let n=(0,p.MZ)(e,r);if(5!==n.length&&1!==n.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,rf.Q)(e,t,n,r)}function rv(e,t,r){if((0,d.HO)(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let n=(0,p.MZ)(e,r);if(6!==n.length&&1!==n.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,(0,rf.Q)(e,t,n,r)}var rw=r(42042);let rT=(0,c.op)({tensorScatterUpdate_:function(e,t,r){let n=(0,p.YT)(e,"tensor","tensorScatterupdate"),a=(0,p.YT)(t,"indices","tensorScatterupdate","int32"),s=(0,p.YT)(r,"updates","tensorScatterupdate");if(rw.TT(s,a,n.shape),n.dtype!==s.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);return u.T2.runKernel(h.X4r,{tensor:n,indices:a,updates:s},{})}});var rS=r(35916);let rN=(0,c.op)({truncatedNormal_:function(e,t=0,r=1,n,a){if((0,d.SA)(e),null!=n&&"bool"===n)throw Error("Unsupported data type $ { dtype }");let s=new t$(t,r,n,!0,a),i=(0,Z.r)(e,n);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var rk=r(48207),rI=r(40700),rC=r(12721);function rE(e,t){return eJ(e,t,"right")}function rA(e,t=!0,r,n){return u.T2.makeVariable(e,t,r,n)}var r$=r(20131),rR=r(99375);let rF=async function(e){let t=(0,p.YT)(e,"condition","whereAsync","bool"),r=await t.data(),n=(0,rR.Y)(t.shape,r);return e!==t&&t.dispose(),n};var r_=r(69011),rD=r(12435);let rO=async function(e,t,r){let n=(0,p.YT)(e,"tensor","boolMask"),a=(0,p.YT)(t,"mask","boolMask","bool"),s=null==r?0:r,i=a.rank,o=n.shape;d.vA(i>0,()=>"mask cannot be scalar"),d.O3(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=(0,C.t)(n,u),c=(0,C.t)(a,[-1]),f=await rF(c),m=(0,ro.r)(f,[1]),g=(0,eF.k)(h,m,s);return e!==n&&n.dispose(),t!==a&&a.dispose(),m.dispose(),h.dispose(),c.dispose(),f.dispose(),g};var rL=r(60419),rM=r(89874),rP=r(4525);let rz=(0,c.op)({movingAverage_:function(e,t,r,n,a=!0){let s=(0,p.YT)(e,"v","movingAverage"),i=(0,p.YT)(t,"x","movingAverage"),o=(0,p.YT)(r,"decay","movingAverage");(0,rP.assertTypesMatch)(s,i),d.vA(d.r1(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=(0,tQ.d)(1),h=(0,ti.j)(u,o),c=(0,R.l)((0,ti.j)(i,s),h);if(a){d.vA(null!=n,()=>"When using zeroDebias: true, step is required.");let e=(0,p.YT)(n,"step","movingAverage");c=(0,em.y)(c,(0,ti.j)(u,(0,tw.n)(o,e)))}return(0,l.W)(s,c)}}),rB=(0,c.op)({scatterND_:function(e,t,r){(0,d.SA)(r);let n=(0,p.YT)(e,"indices","scatterND","int32"),a=(0,p.YT)(t,"updates","scatterND");return rw.TT(a,n,r),u.T2.runKernel(h.pJc,{indices:n,updates:a},{shape:r})}}),rW=(0,c.op)({sparseToDense_:function(e,t,r,n=0){(0,d.SA)(r);let a=(0,p.YT)(e,"sparseIndices","sparseToDense","int32"),s=(0,p.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),i=(0,p.YT)(n,"defaultValue","sparseToDense",s.dtype);return!function(e,t,r,n){if("int32"!==e.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(r.length!==s)throw Error(`outputShape has incorrect number of elements:, ${r.length}, should be: ${s}.`);let i=t.size;if(!(0===t.rank||1===t.rank&&i===a))throw Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==n.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,r,i),u.T2.runKernel(h.jgd,{sparseIndices:a,sparseValues:s,defaultValue:i},{outputShape:r})}}),rV=(0,c.op)({gatherND_:function(e,t){let r=(0,p.YT)(t,"indices","gatherND","int32"),n=(0,p.YT)(e,"x","gatherND","string_or_numeric");return u.T2.runKernel(h.O4G,{params:n,indices:r})}}),rU=(0,c.op)({dropout_:function(e,t,r,n){let a=(0,p.YT)(e,"x","dropout");if(d.vA("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),d.vA(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof e8.qY?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){let r=[];for(let n=0;n<e.shape.length;n++)null==t[n]&&null!=e.shape[n]?r.push(e.shape[n]):r.push(t[n]);return r}return t}(a,r),i=1-t,o=(0,em.y)((0,e$.R)((0,l.W)(tL(s,0,1,"float32",n),i)),i);return(0,R.l)(a,o)}});function rG(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function rZ(e,t,r){let n=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+n-1);a[s]=t-r*Math.cos(i)}return rm(a,"float32")}let rj=async function(e,t,r=1){let n=(0,p.YT)(e,"predictions","inTopK"),a=(0,p.YT)(t,"targets","inTopK");(0,d.vA)(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),(0,d.vA)(n.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${a.rank}`),(0,d.O3)(n.shape.slice(0,n.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];(0,d.vA)(r>0&&r<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${r}`);let i=await n.data(),o=await a.data(),[l,u]=[i.length/s,s],h=(0,d.ce)("bool",l);for(let e=0;e<l;e++){let t=e*u,n=i.subarray(t,t+u),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort((e,t)=>t.value-e.value),h[e]=0;for(let t=0;t<r;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==n&&n.dispose(),t!==a&&a.dispose(),(0,rc.O)(h,a.shape,"bool")};var rK=r(51758),rH=r(46012),rY=r(71990),rQ=r(34932),rq=r(87808);let rX=(0,c.op)({fusedConv2d_:function({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:c="linear",preluActivationWeights:f,leakyreluAlpha:m}){let g,y;if(c=c||"linear",!1===(0,rq.zE)(u.T2.state.gradientDepth,c)){d.vA("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let u=(0,et.X)(e,t,r,n,a,s,i);return null!=o&&(u=(0,l.W)(u,o)),(0,rq.f2)(u,c,f,m)}let b=(0,p.YT)(e,"x","conv2d","float32"),x=(0,p.YT)(t,"filter","conv2d","float32"),v=b,w=!1;3===b.rank&&(w=!0,v=(0,C.t)(b,[1,b.shape[0],b.shape[1],b.shape[2]])),d.vA(4===v.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${v.rank}.`),d.vA(4===x.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${x.rank}.`),I.s_("fused conv2d",n,i);let T="NHWC"===a?v.shape[3]:v.shape[1];d.vA(x.shape[2]===T,()=>`Error in conv2d: depth of input (${T}) must match input depth for filter ${x.shape[2]}.`),d.vA(I.G0(r,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`);let S=I.uf(v.shape,x.shape,r,s,n,i);if(null!=o&&(g=(0,p.YT)(o,"bias","fused conv2d"),[g]=(0,rP.makeTypesMatch)(g,b),"NHWC"===a?rH.assertAndGetBroadcastShape(S.outShape,g.shape):(d.vA(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),d.vA(0===g.shape.length||g.shape[0]===S.outChannels||1===g.shape[0],()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${S.outChannels})`))),null!=f){let e=f.shape;if(d.vA(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)d.vA(1===e[0]||e[0]===S.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${S.outChannels}).`);else if(3===e.length)try{rH.assertAndGetBroadcastShape(e,S.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${S.outShape}).`)}y=(0,p.YT)(f,"prelu weights","fused conv2d")}let N=(e,t)=>{d.vA("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[i,o,l,u]=t,h=(0,rq.XB)(e,l,c);d.vA(I.Dh(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let p=[(0,rQ.v)(o.shape,h,i,r,n),(0,rY.H)(o,h,i.shape,r,n)];if(null!=u){let e=(0,rq.Do)(u,h);p.push(e)}return p},k={x:v,filter:x,bias:g,preluActivationWeights:y},E={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:m};return null==o?(0,rK._X)((e,t,r)=>{let n=u.T2.runKernel(h.aAr,k,E);return r([t,e,n]),w&&(n=(0,C.t)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:N}})(v,x):(0,rK._X)((e,t,r,n)=>{let a=u.T2.runKernel(h.aAr,k,E);return n([t,e,a,r]),w&&(a=(0,C.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:N}})(v,x,g)}});var rJ=r(89022),r0=r(24556);let r1=(0,c.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:c="linear",preluActivationWeights:f,leakyreluAlpha:m}){let g,y;if(!1===(0,rq.zE)(u.T2.state.gradientDepth,c)){let u=(0,ed.G)(e,t,r,n,a,s,i);return null!=o&&(u=(0,l.W)(u,o)),(0,rq.f2)(u,c,f,m)}let b=(0,p.YT)(e,"x","depthwiseConv2d","float32"),x=(0,p.YT)(t,"filter","depthwiseConv2d","float32"),v=b,w=!1;3===b.rank&&(w=!0,v=(0,C.t)(b,[1,b.shape[0],b.shape[1],b.shape[2]])),d.vA(4===v.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${v.rank}.`),d.vA(4===x.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${x.rank}.`),d.vA(v.shape[3]===x.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${x.shape[2]}.`),null==s&&(s=[1,1]),d.vA(I.G0(r,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),I.s_("fused depthwiseConv2d",n,i);let T=I.uf(v.shape,x.shape,r,s,n,i,!0);null!=o&&(g=(0,p.YT)(o,"bias","fused conv2d"),[g]=(0,rP.makeTypesMatch)(g,b),rH.assertAndGetBroadcastShape(T.outShape,g.shape)),null!=f&&(y=(0,p.YT)(f,"prelu weights","fused depthwiseConv2d"));let S=(e,t)=>{d.vA(I.Dh(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[a,o,l,u]=t,h=(0,rq.XB)(e,l,c),p=(0,r0.l)(o.shape,h,a,r,n,s,i),f=(0,rJ.x)(o,h,a.shape,r,n,s,i);return null!=u?[p,f,(0,rq.Do)(g,h)]:[p,f]},N={x:v,filter:x,bias:g,preluActivationWeights:y},k={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:m};return null==o?(0,rK._X)((e,t,r)=>{let n=u.T2.runKernel(h.T7M,N,k);return r([t,e,n]),w&&(n=(0,C.t)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:S}})(v,x):(0,rK._X)((e,t,r,n)=>{let a=u.T2.runKernel(h.T7M,N,k);return n([t,e,a,r]),w&&(a=(0,C.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:S}})(v,x,g)}}),r2=(0,c.op)({fusedMatMul_:function({a:e,b:t,transposeA:r=!1,transposeB:n=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){let c,f;if(!1===(0,rq.zE)(u.T2.state.gradientDepth,s)){let u=(0,$.N)(e,t,r,n);return null!=a&&(u=(0,l.W)(u,a)),(0,rq.f2)(u,s,i,o)}let m=(0,p.YT)(e,"a","fused matMul"),g=(0,p.YT)(t,"b","fused matMul");[m,g]=(0,rP.makeTypesMatch)(m,g);let y=r?m.shape[m.rank-2]:m.shape[m.rank-1],b=n?g.shape[g.rank-1]:g.shape[g.rank-2],x=r?m.shape[m.rank-1]:m.shape[m.rank-2],v=n?g.shape[g.rank-2]:g.shape[g.rank-1],w=m.shape.slice(0,-2),T=g.shape.slice(0,-2),S=d.Ze(w),N=d.Ze(T);d.vA(y===b,()=>`Error in fused matMul: inner shapes (${y}) and (${b}) of Tensors with shapes ${m.shape} and ${g.shape} and transposeA=${r} and transposeB=${n} must match.`);let k=rH.assertAndGetBroadcastShape(m.shape.slice(0,-2),g.shape.slice(0,-2)).concat([x,v]),I=r?(0,C.t)(m,[S,y,x]):(0,C.t)(m,[S,x,y]),E=n?(0,C.t)(g,[N,v,b]):(0,C.t)(g,[N,b,v]);null!=a&&(c=(0,p.YT)(a,"bias","fused matMul"),[c]=(0,rP.makeTypesMatch)(c,m),rH.assertAndGetBroadcastShape(k,c.shape)),null!=i&&(f=(0,p.YT)(i,"prelu weights","fused matMul"));let A=(e,t)=>{let i,o;let[l,u,h,p]=t,d=(0,rq.XB)((0,C.t)(e,h.shape),h,s);return(r||n?!r&&n?(i=(0,$.N)(d,u,!1,!1),o=(0,$.N)(d,l,!0,!1)):r&&!n?(i=(0,$.N)(u,d,!1,!0),o=(0,$.N)(l,d,!1,!1)):(i=(0,$.N)(u,d,!0,!0),o=(0,$.N)(d,l,!0,!0)):(i=(0,$.N)(d,u,!1,!0),o=(0,$.N)(l,d,!0,!1)),null!=a)?[i,o,(0,rq.Do)(p,d)]:[i,o]},R={a:I,b:E,bias:c,preluActivationWeights:f},F={transposeA:r,transposeB:n,activation:s,leakyreluAlpha:o};return null==a?(0,rK._X)((e,t,r)=>{let n=u.T2.runKernel(h.Dr,R,F);return r([e,t,n]),{value:(0,C.t)(n,k),gradFunc:A}})(I,E):(0,rK._X)((e,t,r,n)=>{let a=u.T2.runKernel(h.Dr,R,F);return n([e,t,a,r]),{value:(0,C.t)(a,k),gradFunc:A}})(I,E,c)}}),r3=(0,c.op)({hammingWindow_:function(e){return rZ(e,.54,.46)}}),r4=(0,c.op)({hannWindow_:function(e){return rZ(e,.5,.5)}}),r9=(0,c.op)({frame_:function(e,t,r,n=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push((0,_.d)(e,s,t)),s+=r;if(n)for(;s<e.size;){let n=s+t-e.size,o=(0,A.x)([(0,_.d)(e,s,t-n),(0,eA.G)([n],a)]);i.push(o),s+=r}return 0===i.length?rg([],[0,t]):(0,C.t)((0,A.x)(i),[i.length,t])}}),r5=(0,c.op)({stft_:function(e,t,r,n,a=r4){null==n&&(n=rG(t));let s=r9(e,t,r),i=(0,R.l)(s,a(t));return(0,rn.z)(i,n)}}),r6=(0,c.op)({cropAndResize_:function(e,t,r,n,a="bilinear",s=0){let i=(0,p.YT)(e,"image","cropAndResize"),o=(0,p.YT)(t,"boxes","cropAndResize","float32"),l=(0,p.YT)(r,"boxInd","cropAndResize","int32"),c=o.shape[0];return d.vA(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),d.vA(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),d.vA(1===l.rank&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),d.vA(2===n.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),d.vA(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),d.vA("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),u.T2.runKernel(h.MRQ,{image:i,boxes:o,boxInd:l},{method:a,extrapolationValue:s,cropSize:n})}}),r8=(0,c.op)({flipLeftRight_:function(e){let t=(0,p.YT)(e,"image","flipLeftRight","float32");return d.vA(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),u.T2.runKernel(h.BxF,{image:t},{})}}),r7=(0,c.op)({grayscaleToRGB_:function(e){let t=(0,p.YT)(e,"image","grayscaleToRGB"),r=t.rank-1,n=t.shape[r];d.vA(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),d.vA(1===n,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let a=Array(t.rank);return a.fill(1,0,r),a[r]=3,(0,eC.V)(t,a)}}),ne=(0,c.op)({rgbToGrayscale_:function(e){let t;let r=(0,p.YT)(e,"image","RGBToGrayscale"),n=r.rank-1,a=r.shape[n];d.vA(r.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${r.rank}.`),d.vA(3===a,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`);let s=r.dtype,i=(0,k.w)(r,"float32"),o=rm([.2989,.587,.114]);switch(r.rank){case 2:t=eb("ij,j->i",i,o);break;case 3:t=eb("ijk,k->ij",i,o);break;case 4:t=eb("ijkl,l->ijk",i,o);break;case 5:t=eb("ijklm,m->ijkl",i,o);break;case 6:t=eb("ijklmn,n->ijklm",i,o);break;default:throw Error("Not a valid tensor rank.")}return t=(0,ek.U)(t,-1),(0,k.w)(t,s)}}),nt=(0,c.op)({rotateWithOffset_:function(e,t,r=0,n=.5){let a=(0,p.YT)(e,"image","rotateWithOffset","float32");return d.vA(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),u.T2.runKernel(h.BK4,{image:a},{radians:t,fillValue:r,center:n})}});function nr(e,t,r,n,a,s){null==n&&(n=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return r=Math.min(r,i),d.vA(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),d.vA(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),d.vA(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),d.vA(1===t.rank,()=>"scores must be a 1D tensor"),d.vA(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),d.vA(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:s}}let nn=(0,c.op)({nonMaxSuppression_:function(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let s=(0,p.YT)(e,"boxes","nonMaxSuppression","float32"),i=(0,p.YT)(t,"scores","nonMaxSuppression","float32"),o=nr(s,i,r,n,a),l={maxOutputSize:r=o.maxOutputSize,iouThreshold:n=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return u.T2.runKernel(h.SDM,{boxes:s,scores:i},l)}});var na=r(70315);async function ns(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let s=(0,p.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,p.YT)(t,"scores","nonMaxSuppressionAsync"),o=nr(s,i,r,n,a);r=o.maxOutputSize,n=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d}=(0,na.c7)(u,h,r,n,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),rm(d,"int32")}let ni=(0,c.op)({nonMaxSuppressionWithScore_:function(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=(0,p.YT)(e,"boxes","nonMaxSuppression"),o=(0,p.YT)(t,"scores","nonMaxSuppression"),l=nr(i,o,r,n,a,s);r=l.maxOutputSize,n=l.iouThreshold;let d={maxOutputSize:r,iouThreshold:n,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},c=u.T2.runKernel(h.e0f,{boxes:i,scores:o},d);return{selectedIndices:c[0],selectedScores:c[1]}}});async function no(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=(0,p.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,p.YT)(t,"scores","nonMaxSuppressionAsync"),l=nr(i,o,r,n,a,s);r=l.maxOutputSize,n=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],d=u[1],{selectedIndices:c,selectedScores:f}=(0,na.ut)(h,d,r,n,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:rm(c,"int32"),selectedScores:rm(f)}}let nl=(0,c.op)({nonMaxSuppressionPadded_:function(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=(0,p.YT)(e,"boxes","nonMaxSuppression"),o=(0,p.YT)(t,"scores","nonMaxSuppression"),l=nr(i,o,r,n,a,null),d=l.maxOutputSize,c=l.iouThreshold,f=l.scoreThreshold,m=u.T2.runKernel(h.Zl4,{boxes:i,scores:o},{maxOutputSize:d,iouThreshold:c,scoreThreshold:f,padToMaxOutputSize:s});return{selectedIndices:m[0],validOutputs:m[1]}}});async function nu(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=(0,p.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,p.YT)(t,"scores","nonMaxSuppressionAsync"),l=nr(i,o,r,n,a,null),u=l.maxOutputSize,h=l.iouThreshold,d=l.scoreThreshold,[c,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,na.ZS)(c,f,u,h,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:rm(m,"int32"),validOutputs:(0,tQ.d)(g,"int32")}}var nh=r(40063),np=r(38974);let nd=(0,c.op)({threshold_:function(e,t="binary",r=!1,n=.5){let a,s,i,o;let u=(0,p.YT)(e,"image","threshold"),h=u.shape[0]*u.shape[1],c=(0,R.l)(rm([n]),255);if(d.vA(3===u.rank,()=>`Error in threshold: image must be rank 3,but got rank ${u.rank}.`),d.vA(3===u.shape[2]||1===u.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${u.shape[2]}.`),d.vA("int32"===u.dtype||"float32"===u.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${u.dtype}.`),d.vA("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===u.shape[2]){[a,s,i]=(0,ra.l)(u,[1,1,1],-1);let e=(0,R.l)(a,.2989),t=(0,R.l)(s,.587),r=(0,R.l)(i,.114);o=(0,l.W)((0,l.W)(e,t),r)}else o=e;"otsu"===t&&(c=function(e,t){let r,n,a,s,i,o,u=rm([-1]),h=rm([0]),p=rm([0]);for(let d=0;d<e.size-1;d++){r=(0,_.d)(e,0,d+1),n=(0,_.d)(e,d+1),i=(0,em.y)((0,rp.c)(r),t),o=(0,em.y)((0,rp.c)(n),t);let c=(0,rp.c)((0,R.l)(r,tP(0,r.size)));a=(0,em.y)(c,(0,rp.c)(r));let f=(0,eA.G)(n.shape,r.size),m=(0,l.W)(tP(0,n.size),f),g=(0,R.l)(n,m);s=(0,em.y)((0,rp.c)(g),(0,rp.c)(n));let y=(0,ti.j)(a,s),b=(0,ti.j)(a,s),x=(0,R.l)(i,o);p=(0,R.l)((0,R.l)(x,y),b);let v=(0,e_.r)(p,h);h=(0,r$._)(v,p,h),u=(0,r$._)(v,rm([d]),u)}return u}(W((0,k.w)((0,tH.L)(o),"int32"),(0,rc.O)([]),256),h));let f=r?(0,eW.I)(o,c):(0,e_.r)(o,c);return(0,k.w)((0,R.l)(f,255),"int32")}}),nc=(0,c.op)({transform_:function(e,t,r="nearest",n="constant",a=0,s){let i=(0,p.YT)(e,"image","transform","float32"),o=(0,p.YT)(t,"transforms","transform","float32");return d.vA(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),d.vA(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),d.vA(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),u.T2.runKernel(h.dLy,{image:i,transforms:o},{interpolation:r,fillMode:n,fillValue:a,outputShape:s})}}),nf=(0,c.op)({bandPart_:function(e,t,r){let n,a;let s=(0,p.YT)(e,"a","bandPart");(0,d.vA)(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let i=s.shape,[o,l]=s.shape.slice(-2);"number"==typeof t?((0,d.vA)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),(0,d.vA)(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),n=(0,p.YT)(t<0?o:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),n=(0,r$._)((0,eB.M)(t,0),o,(0,tt.B)(t,o))),"number"==typeof r?((0,d.vA)(r%1==0,()=>`bandPart(): numUpper must be an integer, got ${r}.`),(0,d.vA)(r<=l,()=>`bandPart(): numUpper (${r}) must not be greater than the number of columns (${l}).`),a=(0,p.YT)(r<0?l:r,"numUpper","bandPart")):((0,d.vA)("int32"===r.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),a=(0,r$._)((0,eB.M)(r,0),l,(0,tt.B)(r,l)));let u=(0,C.t)(tP(0,o,1,"int32"),[-1,1]),h=tP(0,l,1,"int32"),c=(0,ti.j)(u,h),f=(0,eY.n)((0,eW.I)(c,n),(0,eD.D)(c,(0,th.H)(a))),m=(0,r_.U)([o,l],s.dtype);return(0,C.t)((0,rl.t)((0,rC.K)((0,C.t)(s,[-1,o,l])).map(e=>(0,r$._)(f,e,m))),i)}}),nm=(0,c.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${r})`)}else t=!0,e=(0,ra.l)(e,e.shape[0],0).map(e=>(0,ro.r)(e,[0]));(0,d.vA)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let r=[],n=e;for(let t=0;t<e.length;++t)r.push(u.T2.tidy(()=>{let e=n[t];if(t>0)for(let n=0;n<t;++n){let t=(0,R.l)((0,rp.c)((0,R.l)(r[n],e)),r[n]);e=(0,ti.j)(e,t)}return(0,em.y)(e,(0,rM.x)(e,"euclidean"))}));return t?(0,rl.t)(r,0):r}});var ng=r(711);function ny(e,t=!1){return u.T2.tidy(()=>{(0,d.vA)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let r=e.shape[0],n=e.shape[1],a=eE(r),s=(0,H.o)(e),i=rg([[1]],[1,1]),o=(0,H.o)(i),l=r>=n?n:r;for(let e=0;e<l;++e){let t=s,l=o,h=a;[o,s,a]=u.T2.tidy(()=>{let t=(0,_.d)(s,[e,e],[r-e,1]),l=(0,rM.x)(t),u=(0,_.d)(s,[e,e],[1,1]),h=(0,r$._)((0,e_.r)(u,0),rg([[-1]]),rg([[1]])),p=(0,ti.j)(u,(0,R.l)(h,l)),d=(0,em.y)(t,p);o=1===d.shape[0]?(0,H.o)(i):(0,A.x)([i,(0,_.d)(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=(0,th.H)((0,em.y)((0,$.N)(h,p),l)),f=(0,_.d)(s,[e,0],[r-e,n]),m=(0,R.l)(c,o),g=(0,rL.m)(o);if(0===e)s=(0,ti.j)(f,(0,$.N)(m,(0,$.N)(g,f)));else{let t=(0,ti.j)(f,(0,$.N)(m,(0,$.N)(g,f)));s=(0,A.x)([(0,_.d)(s,[0,0],[e,n]),t],0)}let y=(0,rL.m)(m),b=(0,_.d)(a,[0,e],[r,a.shape[1]-e]);if(0===e)a=(0,ti.j)(b,(0,$.N)((0,$.N)(b,o),y));else{let t=(0,ti.j)(b,(0,$.N)((0,$.N)(b,o),y));a=(0,A.x)([(0,_.d)(a,[0,0],[r,e]),t],1)}return[o,s,a]}),(0,ng.AS)([t,l,h])}return!t&&r>n&&(a=(0,_.d)(a,[0,0],[r,n]),s=(0,_.d)(s,[0,0],[n,n])),[a,s]})}let nb=(0,c.op)({qr_:function(e,t=!1){if((0,d.vA)(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return ny(e,t);{let r=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),n=(0,rC.K)((0,C.t)(e,[r,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return n.forEach(e=>{let[r,n]=ny(e,t);a.push(r),s.push(n)}),[(0,C.t)((0,rl.t)(a,0),e.shape),(0,C.t)((0,rl.t)(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(n||(n={}));let nx=(0,c.op)({computeWeightedLoss_:function(e,t,r=n.SUM_BY_NONZERO_WEIGHTS){let a=(0,p.YT)(e,"losses","computeWeightedLoss"),s=null;null!=t&&(s=(0,p.YT)(t,"weights","computeWeightedLoss"));let i=null==s?a:(0,R.l)(a,s);if(r===n.NONE)return i;if(r===n.SUM)return(0,rp.c)(i);if(r===n.MEAN){if(null==s)return(0,e5.i)(i);{let e=a.size/s.size,t=(0,em.y)((0,rp.c)(i),(0,rp.c)(s));return e>1?(0,em.y)(t,(0,tQ.d)(e)):t}}if(r===n.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,em.y)((0,rp.c)(i),(0,tQ.d)(a.size));{let e=(0,R.l)(s,(0,e6.S)(a.shape)),t=(0,k.w)((0,rp.c)((0,tp.E)(e,(0,tQ.d)(0))),"float32");return(0,em.y)((0,rp.c)(i),t)}}throw Error(`Unknown reduction: ${r}`)}}),nv=(0,c.op)({absoluteDifference_:function(e,t,r,a=n.SUM_BY_NONZERO_WEIGHTS){let i=(0,p.YT)(e,"labels","absoluteDifference"),o=(0,p.YT)(t,"predictions","absoluteDifference"),l=null;return null!=r&&(l=(0,p.YT)(r,"weights","absoluteDifference")),(0,d.O3)(i.shape,o.shape,"Error in absoluteDifference: "),nx((0,s.t)((0,ti.j)(i,o)),l,a)}}),nw=(0,c.op)({cosineDistance_:function(e,t,r,a,s=n.SUM_BY_NONZERO_WEIGHTS){let i=(0,p.YT)(e,"labels","cosineDistance"),o=(0,p.YT)(t,"predictions","cosineDistance"),l=null;null!=a&&(l=(0,p.YT)(a,"weights","cosineDistance")),(0,d.O3)(i.shape,o.shape,"Error in cosineDistance: ");let u=(0,tQ.d)(1);return nx((0,ti.j)(u,(0,rp.c)((0,R.l)(i,o),r,!0)),l,s)}}),nT=(0,c.op)({hingeLoss_:function(e,t,r,a=n.SUM_BY_NONZERO_WEIGHTS){let s=(0,p.YT)(e,"labels","hingeLoss"),i=(0,p.YT)(t,"predictions","hingeLoss"),o=null;null!=r&&(o=(0,p.YT)(r,"weights","hingeLoss")),(0,d.O3)(s.shape,i.shape,"Error in hingeLoss: ");let l=(0,tQ.d)(1);return s=(0,ti.j)((0,R.l)((0,tQ.d)(2),s),l),nx((0,tW.V)((0,ti.j)(l,(0,R.l)(s,i))),o,a)}}),nS=(0,c.op)({huberLoss_:function(e,t,r,a=1,i=n.SUM_BY_NONZERO_WEIGHTS){let o=(0,p.YT)(e,"labels","huberLoss"),u=(0,p.YT)(t,"predictions","huberLoss"),h=null;null!=r&&(h=(0,p.YT)(r,"weights","huberLoss")),(0,d.O3)(o.shape,u.shape,"Error in huberLoss: ");let c=(0,tQ.d)(a),f=(0,s.t)((0,ti.j)(u,o)),m=(0,tt.B)(f,c),g=(0,ti.j)(f,m);return nx((0,l.W)((0,R.l)((0,tQ.d)(.5),(0,ts.E)(m)),(0,R.l)(c,g)),h,i)}}),nN=(0,c.op)({logLoss_:function(e,t,r,a=1e-7,s=n.SUM_BY_NONZERO_WEIGHTS){let i=(0,p.YT)(e,"labels","logLoss"),o=(0,p.YT)(t,"predictions","logLoss"),u=null;null!=r&&(u=(0,p.YT)(r,"weights","logLoss")),(0,d.O3)(i.shape,o.shape,"Error in logLoss: ");let h=(0,tQ.d)(1),c=(0,tQ.d)(a),f=(0,th.H)((0,R.l)(i,(0,eG.R)((0,l.W)(o,c)))),m=(0,R.l)((0,ti.j)(h,i),(0,eG.R)((0,l.W)((0,ti.j)(h,o),c)));return nx((0,ti.j)(f,m),u,s)}}),nk=(0,c.op)({meanSquaredError_:function(e,t,r,a=n.SUM_BY_NONZERO_WEIGHTS){let s=(0,p.YT)(e,"labels","meanSquaredError"),i=(0,p.YT)(t,"predictions","meanSquaredError"),o=null;return null!=r&&(o=(0,p.YT)(r,"weights","meanSquaredError")),(0,d.O3)(s.shape,i.shape,"Error in meanSquaredError: "),nx((0,ri.P)(s,i),o,a)}}),nI=(0,c.op)({sigmoidCrossEntropy_:function(e,t,r,a=0,i=n.SUM_BY_NONZERO_WEIGHTS){let o=(0,p.YT)(e,"multiClassLabels","sigmoidCrossEntropy"),u=(0,p.YT)(t,"logits","sigmoidCrossEntropy"),h=null;if(null!=r&&(h=(0,p.YT)(r,"weights","sigmoidCrossEntropy")),(0,d.O3)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){let e=(0,tQ.d)(a),t=(0,tQ.d)(1),r=(0,tQ.d)(.5);o=(0,l.W)((0,R.l)(o,(0,ti.j)(t,e)),(0,R.l)(r,e))}return nx(function(e,t){let r=(0,p.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),n=(0,p.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(r.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=(0,tW.V)(n),i=(0,R.l)(n,r),o=(0,eZ.K)((0,eN.o)((0,th.H)((0,s.t)(n))));return(0,l.W)((0,ti.j)(a,i),o)}(o,u),h,i)}}),nC=(0,c.op)({softmaxCrossEntropy_:function(e,t,r,a=0,s=n.SUM_BY_NONZERO_WEIGHTS){let i=(0,p.YT)(e,"onehotLabels","softmaxCrossEntropy"),o=(0,p.YT)(t,"logits","softmaxCrossEntropy"),u=null;if(null!=r&&(u=(0,p.YT)(r,"weights","softmaxCrossEntropy")),(0,d.O3)(i.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){let e=(0,tQ.d)(a),t=(0,tQ.d)(1),r=(0,tQ.d)(i.shape[1]);i=(0,l.W)((0,R.l)(i,(0,ti.j)(t,e)),(0,em.y)(e,r))}return nx(function(e,t,r=-1){if(-1===r&&(r=t.rank-1),r!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${r}`);return(0,rK._X)((e,t,n)=>{let a=(0,eH.V)(t,[r],!0),s=(0,ti.j)((0,k.w)(t,"float32"),a);n([e,s]);let i=(0,th.H)((0,R.l)(s,e));return{value:(0,rp.c)(i,[r]),gradFunc:(e,t)=>{let[n,a]=t,s=(0,ta.SM)(e.shape,[r]);return[(0,R.l)((0,C.t)(e,s),(0,ti.j)((0,k.w)(n,"float32"),(0,eN.o)(a))),(0,R.l)((0,C.t)(e,s),(0,ti.j)((0,eN.o)(a),(0,k.w)(n,"float32")))]}}})(e,t)}(i,o),u,s)}}),nE=(0,c.op)({sparseFillEmptyRows_:function(e,t,r,n){let a=(0,p.YT)(e,"indices","sparseFillEmptyRows","int32"),s=(0,p.YT)(t,"values","sparseFillEmptyRows"),i=(0,p.YT)(r,"denseShape","sparseFillEmptyRows","int32"),o=(0,p.YT)(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(1!==s.rank)throw Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw Error(`Default value should be a scalar but received shape ${o.shape}`);let l=u.T2.runKernel(h.C8s,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),nA=(0,c.op)({sparseReshape_:function(e,t,r){let n=(0,p.YT)(e,"inputIndices","sparseReshape","int32"),a=(0,p.YT)(t,"inputShape","sparseReshape","int32"),s=(0,p.YT)(r,"newShape","sparseReshape","int32");if(2!==n.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(1!==a.rank)throw Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i=u.T2.runKernel(h.BoJ,{inputIndices:n,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),n$=(0,c.op)({sparseSegmentMean_:function(e,t,r){let n=(0,p.YT)(e,"data","sparseSegmentMean"),a=(0,p.YT)(t,"indices","sparseSegmentMean","int32"),s=(0,p.YT)(r,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(1!==s.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);return u.T2.runKernel(h.L6G,{data:n,indices:a,segmentIds:s})}}),nR=(0,c.op)({sparseSegmentSum_:function(e,t,r){let n=(0,p.YT)(e,"data","sparseSegmentSum"),a=(0,p.YT)(t,"indices","sparseSegmentSum","int32"),s=(0,p.YT)(r,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(1!==s.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);return u.T2.runKernel(h.DvZ,{data:n,indices:a,segmentIds:s})}}),nF=(0,c.op)({stringNGrams_:function(e,t,r,n,a,s,i,o){let l=(0,p.YT)(e,"data","stringNGrams","string");if("string"!==l.dtype)throw Error("Data must be of datatype string");if(1!==l.shape.length)throw Error(`Data must be a vector, saw: ${l.shape}`);let d=(0,p.YT)(t,"dataSplits","stringNGrams");if("int32"!==d.dtype)throw Error("Data splits must be of datatype int32");let c=u.T2.runKernel(h.YAb,{data:l,dataSplits:d},{separator:r,nGramWidths:n,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:c[0],nGramsSplits:c[1]}}}),n_=(0,c.op)({stringSplit_:function(e,t,r=!0){let n=(0,p.YT)(e,"input","stringSplit","string"),a=(0,p.YT)(t,"delimiter","stringSplit","string");if(1!==n.rank)throw Error(`Input should be Tensor1D but received shape ${n.shape}`);if(0!==a.rank)throw Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s=u.T2.runKernel(h.iW0,{input:n,delimiter:a},{skipEmpty:r});return{indices:s[0],values:s[1],shape:s[2]}}}),nD=(0,c.op)({stringToHashBucketFast_:function(e,t){let r=(0,p.YT)(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return u.T2.runKernel(h.$jE,{input:r},{numBuckets:t})}}),nO=(0,c.op)({staticRegexReplace_:function(e,t,r,n=!0){let a=(0,p.YT)(e,"input","staticRegexReplace","string");return u.T2.runKernel(h.GZp,{x:a},{pattern:t,rewrite:r,replaceGlobal:n})}}),nL={fft:re.h,ifft:rt.K,rfft:rn.z,irfft:rr.g},nM={hammingWindow:r3,hannWindow:r4,frame:r9,stft:r5},nP={flipLeftRight:r8,grayscaleToRGB:r7,resizeNearestNeighbor:np.b,resizeBilinear:nh.v,rgbToGrayscale:ne,rotateWithOffset:nt,cropAndResize:r6,nonMaxSuppression:nn,nonMaxSuppressionAsync:ns,nonMaxSuppressionWithScore:ni,nonMaxSuppressionWithScoreAsync:no,nonMaxSuppressionPadded:nl,nonMaxSuppressionPaddedAsync:nu,threshold:nd,transform:nc},nz={bandPart:nf,gramSchmidt:nm,qr:nb},nB={absoluteDifference:nv,computeWeightedLoss:nx,cosineDistance:nw,hingeLoss:nT,huberLoss:nS,logLoss:nN,meanSquaredError:nk,sigmoidCrossEntropy:nI,softmaxCrossEntropy:nC},nW={sparseFillEmptyRows:nE,sparseReshape:nA,sparseSegmentMean:n$,sparseSegmentSum:nR},nV={stringNGrams:nF,stringSplit:n_,stringToHashBucketFast:nD,staticRegexReplace:nO}},85145:(e,t,r)=>{"use strict";r.d(t,{e:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({pad_:function(e,t,r=0){let i=(0,s.YT)(e,"x","pad");if(0===i.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return n.T2.runKernel(a.ODT,{x:i},{paddings:t,constantValue:r})}})},6174:(e,t,r)=>{"use strict";r.d(t,{d:()=>d});var n=r(16381),a=r(23299),s=r(98283),i=r(9756),o=r(14227),l=r(87749),u=r(59429),h=r(97094),p=r(1840);let d=(0,u.op)({pool_:function(e,t,r,u,d,c,f){let m;null==d&&(d=[1,1]),null==c&&(c=1),0===u&&(u="valid");let g=(0,n.YT)(e,"x","maxPool"),y=g,b=!1;3===g.rank&&(b=!0,y=(0,h.t)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),a.vA(o.G0(c,d),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${c} and dilations '${d}'`);let x=o.E6(y.shape,t,c,d,u),v=[x.dilationHeight,x.dilationWidth];m="same"===u?function(e,t){let r=e.map((e,r)=>e+(e-1)*(t[r]-1)).map(e=>e-1),n=r.map(e=>Math.floor(e/2)),a=r.map((e,t)=>e-n[t]);return r.map((e,t)=>[n[t],a[t]])}([x.filterHeight,x.filterWidth],v):[[0,0],[0,0]];let w=1===v[0]&&1===v[1],[T,S]=function(e,t,r){let n=r.map(e=>e[0]),a=r.map(e=>e[1]),s=e.concat(n,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]);return[t.map((e,t)=>[n[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([x.inHeight,x.inWidth],v,m),N=w?u:"valid",k=w?y:(0,p.e)(y,v,T),I=("avg"===r?()=>(0,s.$)(k,t,c,N,f):()=>(0,l.j)(k,t,c,N,f))(),C=w?I:(0,i.G)(I,v,S);return b?(0,h.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},80154:(e,t,r)=>{"use strict";r.d(t,{n:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({pow_:function(e,t){let r=(0,i.YT)(e,"base","pow"),o=(0,i.YT)(t,"exp","pow");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.pyJ,l)}})},66174:(e,t,r)=>{"use strict";r.d(t,{N:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({prelu_:function(e,t){let r=(0,s.YT)(e,"x","prelu"),i=(0,s.YT)(t,"alpha","prelu");return n.T2.runKernel(a.Ncv,{x:r,alpha:i})}})},75895:(e,t,r)=>{"use strict";function n(e,t=!1){console.log(e.toString(t))}r.d(t,{y:()=>n})},3781:(e,t,r)=>{"use strict";r.d(t,{_:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(16747);let o=(0,r(59429).op)({prod_:function(e,t=null,r=!1){let o=(0,s.YT)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));let l={x:o};return n.T2.runKernel(a.kdj,l,{axis:t,keepDims:r})}})},12596:(e,t,r)=>{"use strict";r.d(t,{x:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({real_:function(e){let t=(0,s.YT)(e,"input","real");return n.T2.runKernel(a.LRy,{input:t})}})},44268:(e,t,r)=>{"use strict";r.d(t,{V:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({reciprocal_:function(e){let t=(0,s.YT)(e,"x","reciprocal");return n.T2.runKernel(a.huO,{x:t})}})},19834:(e,t,r)=>{"use strict";r.d(t,{V:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({relu_:function(e){let t=(0,s.YT)(e,"x","relu");return n.T2.runKernel(a.fUj,{x:t})}})},16032:(e,t,r)=>{"use strict";r.d(t,{j:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({relu6_:function(e){let t=(0,s.YT)(e,"x","relu6");return n.T2.runKernel(a.P_L,{x:t})}})},97094:(e,t,r)=>{"use strict";r.d(t,{t:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({reshape_:function(e,t){let r=(0,s.YT)(e,"x","reshape","string_or_numeric");return n.T2.runKernel(a.R23,{x:r},{shape:t})}})},99186:(e,t,r)=>{"use strict";r.d(t,{B:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({reverse_:function(e,t){let r=(0,s.YT)(e,"x","reverse");return n.T2.runKernel(a.D7i,{x:r},{dims:t})}})},34820:(e,t,r)=>{"use strict";r.d(t,{L:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({round_:function(e){let t=(0,s.YT)(e,"x","round");return n.T2.runKernel(a.hVg,{x:t})}})},75592:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({rsqrt_:function(e){let t=(0,s.YT)(e,"x","rsqrt","float32");return n.T2.runKernel(a.TOR,{x:t})}})},89860:(e,t,r)=>{"use strict";r.d(t,{d:()=>s});var n=r(27708),a=r(2291);function s(e,t){if(((0,n.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,n.isTypedArray)(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.Q)(e,[],[],t)}},42042:(e,t,r)=>{"use strict";r.d(t,{Ly:()=>a,TT:()=>s,l8:()=>i});var n=r(23299);function a(e,t,r){let n=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${a}.`;if(r.rank<a)throw Error(s+` update.rank < ${a}. `);if(e.length<n+(r.rank-a))throw Error(s+` Output shape length < ${n+(r.rank-a)}`);if(r.rank!==a+e.length-n)throw Error(s+` update.rank != ${a+e.length-n}`);for(let e=0;e<a;++e)if(r.shape[e]!==t.shape[e])throw Error(s+` updates.shape[${e}] (${r.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<r.rank-a;++t)if(r.shape[t+a]!==e[t+n])throw Error(s+` updates.shape[${t+a}] (${r.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,r){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(r.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${r}`);if(0===r.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(r,t,e)}function i(e,t,r){let a=t.shape.length,s=a>1?t.shape[a-1]:1,i=r.length,o=1;for(let e=s;e<i;++e)o*=r[e];let l=s<1?1:s,u=(0,n.Ze)(t.shape)/l,h=[...(0,n.Ur)(r.slice(0,s)),1];return{sliceRank:s,numUpdates:u,sliceSize:o,strides:h,outputSize:(0,n.Ze)(r)}}},24639:(e,t,r)=>{"use strict";r.d(t,{W:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({selu_:function(e){let t=(0,s.YT)(e,"x","selu");return n.T2.runKernel(a.u$b,{x:t})}})},7412:(e,t,r)=>{"use strict";r.d(t,{X:()=>a,j:()=>n});let n=1.7580993408473768,a=1.0507009873554805},27964:(e,t,r)=>{"use strict";r.d(t,{w:()=>u});var n=r(16381),a=r(23299),s=r(18120),i=r(45594),o=r(59429),l=r(97094);let u=(0,o.op)({separableConv2d_:function(e,t,r,o,u,h=[1,1],p="NHWC"){let d=(0,n.YT)(e,"x","separableConv2d"),c=(0,n.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,n.YT)(r,"pointwiseFilter","separableConv2d"),m=d,g=!1;if(3===d.rank&&(g=!0,m=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===p)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.vA(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.vA(4===c.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),a.vA(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),a.vA(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.vA(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);let y=c.shape[2],b=c.shape[3];a.vA(f.shape[2]===y*b,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`);let x=(0,i.G)(m,c,o,u,p,h),v=(0,s.X)(x,f,1,"valid",p);return g?(0,l.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},51068:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({sigmoid_:function(e){let t=(0,s.YT)(e,"x","sigmoid","float32");return n.T2.runKernel(a.vI1,{x:t})}})},61069:(e,t,r)=>{"use strict";r.d(t,{_:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({sign_:function(e){let t=(0,s.YT)(e,"x","sign");return n.T2.runKernel(a.YVe,{x:t})}})},29630:(e,t,r)=>{"use strict";r.d(t,{F:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({sin_:function(e){let t=(0,s.YT)(e,"x","sin","float32");return n.T2.runKernel(a.hql,{x:t})}})},45782:(e,t,r)=>{"use strict";r.d(t,{L:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({sinh_:function(e){let t=(0,s.YT)(e,"x","sinh");return n.T2.runKernel(a.J3C,{x:t})}})},27366:(e,t,r)=>{"use strict";r.d(t,{d:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({slice_:function(e,t,r){let i=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===i.rank)throw Error("Slicing scalar is not possible");return n.T2.runKernel(a.JiE,{x:i},{begin:t,size:r})}})},41763:(e,t,r)=>{"use strict";r.r(t),r.d(t,{assertParamsValid:()=>a,computeFlatOffset:()=>g,computeOutShape:()=>i,getNormalizedAxes:()=>u,isSliceContinous:()=>m,maskToAxes:()=>s,parseSliceParams:()=>y,sliceInfo:()=>b,startForAxis:()=>c,startIndicesWithElidedDims:()=>h,stopForAxis:()=>f,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>d,stridesWithElidedDims:()=>o});var n=r(23299);function a(e,t,r){let a=e.shape.length;n.vA(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),n.vA(a===r.length,()=>`Error in slice${a}D: Length of size ${r} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)n.vA(t[s]+r[s]<=e.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+r[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function s(e){let t=[],r=0;for(;e>0;)1&e&&t.push(r),e/=2,r++;return t}function i(e,t,r){let n=[];for(let a=0;a<e.length;a++)n[a]=Math.ceil((t[a]-e[a])/r[a]);return n}function o(e,t,r,n){let a=[...e];for(let e=a.length;e<n.length;e++)a.push(1);for(let e=0;e<r;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function l(e,t){let r=[];for(let n=0;n<e;n++)r.push(t+n);return r}function u(e,t,r,n,a,s,i,l,u){let m=e.length,g=Array(m),y=Array(m),b=Array(m);if(t.length&&r>0){let u=t[0],d=r+1;g=h(i,u,d,n,e),y=p(l,u,d,a,e),b=o(s,u,d,e)}else for(let t=0;t<m;t++)g[t]=c(i,n,s,e,t,u),y[t]=f(l,a,s,e,t,u),b[t]=d(s,t,u);return{begin:g,end:y,strides:b}}function h(e,t,r,n,a){let s=[...a],i=l(r,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{var o;let i=(o=a)<=t?o:o-(r-1),l=n[i];e&1<<i&&(l=0),s[a]=l}return s}function p(e,t,r,a,s){let i=[...s],o=l(r,t);for(let n=0;n<i.length;n++)if(o.indexOf(n)>-1)i[n]=Number.MAX_SAFE_INTEGER;else{var u;let s=(u=n)<=t?u:u-(r-1),o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[n]=o}for(let e=0;e<i.length;e++){let t=s[e];i[e]<0&&(i[e]+=t),i[e]=n.qE(0,i[e],s[e])}return i}function d(e,t,r){let n=e[t];return(r&1<<t||null==n)&&(n=1),n}function c(e,t,r,a,s,i){let o=t[s],l=r[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let u=a[s];return o<0&&(o+=u),o=n.qE(0,o,u-1)}function f(e,t,r,a,s,i){let o=t[s],l=r[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let u=a[s];return o<0&&(o+=u),o=l>0?n.qE(0,o,u):n.qE(-1,o,u-1)}function m(e,t,r){let n=r.length;for(let e=0;e<r.length;e++)if(r[e]>1){n=e;break}for(let a=n+1;a<r.length;a++)if(t[a]>0||r[a]!==e[a])return!1;return!0}function g(e,t){let r=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)r+=e[n]*t[n];return r}function y(e,t,r){let a,s;let i=e.shape.length;return(a="number"==typeof t?[t,...Array(i-1).fill(0)]:t.length<i?t.concat(Array(i-t.length).fill(0)):t.slice()).forEach(e=>{n.vA(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=(s=null==r?Array(i).fill(-1):"number"==typeof r?[r,...Array(i-1).fill(-1)]:r.length<i?r.concat(Array(i-r.length).fill(-1)):r).map((t,r)=>t>=0?t:(n.vA(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${r}.`),e.shape[r]-a[r])),[a,s]}function b(e,t,r,n,a,s,i,o,l){let u;if(null==n?(u=Array(t.length)).fill(1):u=n,null!=i&&(i&i-1)!=0)throw Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:r.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)h&&(1<<e&o)!=0&&p.numAddAxisAfterEllipsis++,1<<e&i&&(h=!0);!h&&(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let r=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=Array(t.dims),t.end=Array(t.dims),t.strides=Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;r<a;r++)t.begin[r]=0,t.end[r]=0,t.strides[r]=1,t.beginMask|=1<<r,t.endMask|=1<<r,t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[r]=n}else if(1<<n&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(r===t.begin.length)throw Error(`Index out of range using input dim ${r}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[r]=e.begin[n]),null!=e.end&&(t.end[r]=e.end[n]),t.strides[r]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<r),e.endMask&1<<n&&(t.endMask|=1<<r),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<r):(t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[r]=n,r++}}(p,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){let r;if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}let s=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];let o=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){let e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=x(d.begin[t],0,d.strides[t],a,s,i),d.end[t]=x(d.end[t],1,d.strides[t],a,s,i);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;c=c&&e,f=f&&(0===t&&1===d.strides[t]||e)}else c=c&&1===d.strides[t]&&o,f=f&&(0===t&&1===d.strides[t]||o);let l=!1;if(d.beginValid&&d.endValid?(r=d.end[t]-d.begin[t],l=!0):n?(r=1,l=!0):o&&a>=0&&(r=d.strides[t]<0?-a:a,l=!0),l){let e;e=0===r||r<0!=d.strides[t]<0?0:Math.trunc(r/d.strides[t])+(r%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>-2!==d.finalShapeGatherIndices[t]),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function x(e,t,r,n,a,s){if(a[t])return r>0?s[t]:s[t+1&1];{let t=e<0?n+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},76214:(e,t,r)=>{"use strict";r.d(t,{V:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({softmax_:function(e,t=-1){let r=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=r.rank-1),t!==r.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and dim was ${t}`);let i={dim:t};return n.T2.runKernel(a.rFG,{logits:r},i)}})},95916:(e,t,r)=>{"use strict";r.d(t,{l:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({softplus_:function(e){let t=(0,s.YT)(e,"x","softplus");return n.T2.runKernel(a.Fin,{x:t})}})},1840:(e,t,r)=>{"use strict";r.d(t,{e:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({spaceToBatchND_:function(e,t,r){let o=(0,s.YT)(e,"x","spaceToBatchND");return i.vA(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),i.vA(r.length===t.length,()=>`paddings.shape[0] ${r.length} must be equal to [blockShape] ${t.length}`),i.vA(o.shape.reduce((e,n,a)=>a>0&&a<=t.length?e&&(n+r[a-1][0]+r[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${r.toString()} must be divisible by blockShapes ${t.toString()}`),n.T2.runKernel(a.A8B,{x:o},{blockShape:t,paddings:r})}})},36255:(e,t,r)=>{"use strict";r.d(t,{h:()=>i});var n=r(54685),a=r(71699),s=r(23299);let i=(0,r(59429).op)({fft_:function(e){return(0,s.vA)("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),n.T2.runKernel(a.rGP,{input:e})}})},62556:(e,t,r)=>{"use strict";r.d(t,{K:()=>i});var n=r(54685),a=r(71699),s=r(23299);let i=(0,r(59429).op)({ifft_:function(e){return(0,s.vA)("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),n.T2.runKernel(a.OAQ,{input:e})}})},68082:(e,t,r)=>{"use strict";r.d(t,{g:()=>f});var n=r(83420),a=r(77668),s=r(2822),i=r(87698),o=r(59429),l=r(12596),u=r(97094),h=r(99186),p=r(89860),d=r(27366),c=r(62556);let f=(0,o.op)({irfft_:function(e){let t;let r=e.shape[e.shape.length-1],o=e.size/r;if(r<=2){let n=(0,u.t)(e,[o,r]);t=(0,c.K)(n)}else{let f=[o,2*(r-1)],m=(0,u.t)((0,l.x)(e),[o,r]),g=(0,u.t)((0,s.n)(e),[o,r]),y=(0,h.B)((0,d.d)(m,[0,1],[o,r-2]),1),b=(0,i.l)((0,h.B)((0,d.d)(g,[0,1],[o,r-2]),1),(0,p.d)(-1)),x=(0,a.x)([m,y],1),v=(0,a.x)([g,b],1),w=(0,u.t)((0,n.f)(x,v),[f[0],f[1]]);t=(0,c.K)(w)}if(t=(0,l.x)(t),3===e.rank&&0!==e.shape[0]){let r=t,n=e.shape[0];t=(0,u.t)(t,[n,t.shape[0]/n,t.shape[1]]),r.dispose()}return t}})},34495:(e,t,r)=>{"use strict";r.d(t,{z:()=>m});var n=r(23299),a=r(83420),s=r(77668),i=r(2822),o=r(59429),l=r(12596),u=r(97094),h=r(27366),p=r(5156),d=r(69011),c=r(12435),f=r(36255);let m=(0,o.op)({rfft_:function(e,t){let r;(0,n.vA)("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let o=e.shape[e.shape.length-1],m=e.size/o;if(null!=t&&t<o){let n=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,r=(0,h.d)(e,n,a),o=t}else if(null!=t&&t>o){let n=e.shape.map(e=>e);n[e.shape.length-1]=t-o,r=(0,s.x)([e,(0,d.U)(n)],e.shape.length-1),o=t}else r=e;let g=(0,c.P)(r),y=(0,u.t)((0,a.f)(r,g),[m,o]),b=(0,f.h)(y),x=Math.floor(o/2)+1,v=(0,l.x)(b),w=(0,i.n)(b),T=(0,p.l)(v,[x,o-x],v.shape.length-1),S=(0,p.l)(w,[x,o-x],w.shape.length-1),N=r.shape.slice();return N[r.shape.length-1]=x,(0,u.t)((0,a.f)(T[0],S[0]),N)}})},5156:(e,t,r)=>{"use strict";r.d(t,{l:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({split_:function(e,t,r=0){let i=(0,s.YT)(e,"x","split");return n.T2.runKernel(a.Blb,{x:i},{numOrSizeSplits:t,axis:r})}})},83574:(e,t,r)=>{"use strict";r.d(t,{R:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({sqrt_:function(e){let t=(0,s.YT)(e,"x","sqrt","float32");return n.T2.runKernel(a.dFH,{x:t})}})},17771:(e,t,r)=>{"use strict";r.d(t,{E:()=>s});var n=r(54685),a=r(16381);let s=(0,r(59429).op)({square_:function(e){let t=(0,a.YT)(e,"x","square");return n.T2.runKernel("Square",{x:t},{})}})},18425:(e,t,r)=>{"use strict";r.d(t,{P:()=>l});var n=r(54685),a=r(71699),s=r(4525),i=r(16381),o=r(46012);let l=(0,r(59429).op)({squaredDifference_:function(e,t){let r=(0,i.YT)(e,"a","squaredDifference"),l=(0,i.YT)(t,"b","squaredDifference");[r,l]=(0,s.makeTypesMatch)(r,l),(0,o.assertAndGetBroadcastShape)(r.shape,l.shape);let u={a:r,b:l};return n.T2.runKernel(a.Ddj,u,{})}})},64412:(e,t,r)=>{"use strict";r.d(t,{r:()=>o});var n=r(16381),a=r(23299),s=r(59429),i=r(97094);let o=(0,s.op)({squeeze_:function(e,t){let r=(0,n.YT)(e,"x","squeeze","string_or_numeric");return(0,i.t)(r,(0,a.gx)(r.shape,t).newShape)}})},7636:(e,t,r)=>{"use strict";r.d(t,{t:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({stack_:function(e,t=0){let r=(0,s.j1)(e,"tensors","stack","string_or_numeric");return i.vA(r.length>=1,()=>"Pass at least one tensor to tf.stack"),r.length>0&&i.vA(t<=r[0].rank,()=>"Axis must be <= rank of the tensor"),n.T2.runKernel(a.mM$,r,{axis:t})}})},41518:(e,t,r)=>{"use strict";r.d(t,{P:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({step_:function(e,t=0){let r=(0,s.YT)(e,"x","step");return n.T2.runKernel(a.pnw,{x:r},{alpha:t})}})},73454:(e,t,r)=>{"use strict";r.d(t,{Y:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({stridedSlice_:function(e,t,r,i,o=0,l=0,u=0,h=0,p=0){let d=(0,s.YT)(e,"x","stridedSlice","string_or_numeric");return n.T2.runKernel(a.UcO,{x:d},{begin:t,end:r,strides:i,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p})}})},10958:(e,t,r)=>{"use strict";r.d(t,{j:()=>o});var n=r(54685),a=r(71699),s=r(4525),i=r(16381);let o=(0,r(59429).op)({sub_:function(e,t){let r=(0,i.YT)(e,"a","sub"),o=(0,i.YT)(t,"b","sub");[r,o]=(0,s.makeTypesMatch)(r,o);let l={a:r,b:o};return n.T2.runKernel(a.PbM,l)}})},84575:(e,t,r)=>{"use strict";r.d(t,{c:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(16747);let o=(0,r(59429).op)({sum_:function(e,t=null,r=!1){let o=(0,s.YT)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));let l={x:o};return n.T2.runKernel(a.WuN,l,{axis:t,keepDims:r})}})},11735:(e,t,r)=>{"use strict";r.d(t,{M:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({tan_:function(e){let t=(0,s.YT)(e,"x","tan","float32");return n.T2.runKernel(a.oFs,{x:t})}})},49445:(e,t,r)=>{"use strict";r.d(t,{y:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({tanh_:function(e){let t=(0,s.YT)(e,"x","tanh","float32");return n.T2.runKernel(a.iuW,{x:t})}})},88689:(e,t,r)=>{"use strict";r.d(t,{O:()=>s});var n=r(16381),a=r(2291);function s(e,t,r){let s=(0,n.MZ)(e,r);return(0,a.Q)(e,t,s,r)}},80618:(e,t,r)=>{"use strict";r.d(t,{$:()=>i});var n=r(16381),a=r(23299),s=r(2291);function i(e,t,r){if((0,a.HO)(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let i=(0,n.MZ)(e,r);if(3!==i.length&&1!==i.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.Q)(e,t,i,r)}},2291:(e,t,r)=>{"use strict";r.d(t,{Q:()=>o});var n=r(54685),a=r(88802),s=r(23299),i=r(27708);function o(e,t,r,o){if(null==o)o=(0,s.X$)(e);else if("complex64"===o)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,a.Nw)(e)||(0,a.Oj)(e)){if("float32"!==o&&"int32"!==o)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return n.T2.backend.createTensorFromGPUData(e,t||r,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);let e=(0,s.Ze)(t),n=(0,s.Ze)(r);(0,s.vA)(e===n,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${n}`);for(let e=0;e<r.length;++e){let n=r[e],a=e!==r.length-1||n!==(0,s.Ze)(t.slice(e));(0,s.vA)(r[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${t}). `)}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||r,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),n.T2.makeTensor(e,t,o)}},18704:(e,t,r)=>{"use strict";r.d(t,{V:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({tile_:function(e,t){let r=(0,s.YT)(e,"x","tile","string_or_numeric");return i.vA(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${t}.`),n.T2.runKernel(a.FAs,{x:r},{reps:t})}})},35916:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({topk_:function(e,t=1,r=!0){let i=(0,s.YT)(e,"x","topk");if(0===i.rank)throw Error("topk() expects the input to be of rank 1 or higher");let o=i.shape[i.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let[l,u]=n.T2.runKernel(a.TBb,{x:i},{k:t,sorted:r});return{values:l,indices:u}}})},60419:(e,t,r)=>{"use strict";r.d(t,{m:()=>c});var n=r(54685),a=r(711),s=r(71699),i=r(16381),o=r(23299),l=r(83420),u=r(2822),h=r(69970),p=r(59429),d=r(12596);let c=(0,p.op)({transpose_:function(e,t,r){let p=(0,i.YT)(e,"x","transpose");if(null==t&&(t=p.shape.map((e,t)=>t).reverse()),o.vA(p.rank===t.length,()=>`Error in transpose: rank of input ${p.rank} must match length of perm ${t}.`),t.forEach(e=>{o.vA(e>=0&&e<p.rank,()=>`All entries in 'perm' must be between 0 and ${p.rank-1} but got ${t}`)}),p.rank<=1)return p.clone();let c={perm:t};return"complex64"===p.dtype?(0,a.DZ)(()=>{let e=(0,d.x)(p),t=(0,u.n)(p);return e=n.T2.runKernel(s.wx0,{x:e},c),t=n.T2.runKernel(s.wx0,{x:t},c),r&&(t=(0,h.H)(t)),(0,l.f)(e,t)}):n.T2.runKernel(s.wx0,{x:p},c)}})},48207:(e,t,r)=>{"use strict";r.d(t,{A:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({unique_:function(e,t=0){let r=(0,s.YT)(e,"x","unique","string_or_numeric");(0,i.vA)(r.rank>0,()=>"The input tensor must be at least 1D");let[o,l]=n.T2.runKernel(a.EwU,{x:r},{axis:t});return{values:o,indices:l}}})},40700:(e,t,r)=>{"use strict";r.d(t,{z:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({unsortedSegmentSum_:function(e,t,r){let o=(0,s.YT)(e,"x","unsortedSegmentSum"),l=(0,s.YT)(t,"segmentIds","unsortedSegmentSum","int32");return(0,i.vA)((0,i.E6)(r),()=>"numSegments must be of dtype int"),n.T2.runKernel(a.pPe,{x:o,segmentIds:l},{numSegments:r})}})},12721:(e,t,r)=>{"use strict";r.d(t,{K:()=>o});var n=r(54685),a=r(71699),s=r(16381),i=r(23299);let o=(0,r(59429).op)({unstack_:function(e,t=0){let r=(0,s.YT)(e,"x","unstack","string_or_numeric");return i.vA(t>=-r.shape.length&&t<r.shape.length,()=>`Axis = ${t} is not in [-${r.shape.length}, ${r.shape.length})`),n.T2.runKernel(a.dXR,{value:r},{axis:t})}})},20131:(e,t,r)=>{"use strict";r.d(t,{_:()=>l});var n=r(54685),a=r(71699),s=r(16381),i=r(98313),o=r(46012);let l=(0,r(59429).op)({where_:function(e,t,r){let l=(0,s.YT)(t,"a","where"),u=(0,s.YT)(r,"b","where"),h=(0,s.YT)(e,"condition","where","bool"),p=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(h.shape,l.shape),u.shape),d=(0,i.h)(h,p),c=(0,i.h)(l,p),f=(0,i.h)(u,p);return n.T2.runKernel(a.l6P,{condition:d,t:c,e:f})}})},69011:(e,t,r)=>{"use strict";r.d(t,{U:()=>function e(t,r="float32"){if((0,a.SA)(t),"complex64"===r){let r=e(t,"float32"),n=e(t,"float32");return(0,s.f)(r,n)}let i=(0,a.Ty)((0,a.Ze)(t),r);return n.T2.makeTensor(i,t,r)}});var n=r(54685),a=r(23299),s=r(83420)},12435:(e,t,r)=>{"use strict";r.d(t,{P:()=>i});var n=r(54685),a=r(71699),s=r(16381);let i=(0,r(59429).op)({zerosLike_:function(e){let t=(0,s.YT)(e,"x","zerosLike");return n.T2.runKernel(a.xJ3,{x:t})}})},8494:(e,t,r)=>{"use strict";function n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}r.d(t,{Y:()=>n})},3449:(e,t,r)=>{"use strict";r.d(t,{qY:()=>m,yl:()=>u,rT:()=>y,tp:()=>g,B4:()=>f,Q5:()=>c,qP:()=>d});var n=r(33871),a=r(23299);function s(e,t,r){let n;return n=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.Kg)(e)?`'${e}'`:"bool"===r?i(e):parseFloat(e.toFixed(7)).toString(),(0,a.av)(n,t)}function i(e){return 0===e?"false":"true"}function o(e){let t=[];for(let r=0;r<e.length;r+=2)t.push([e[r],e[r+1]]);return t}var l=r(27708);class u{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=a.Ze(e),null!=r){let e=r.length;a.vA(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||a.Ab(t,this.size),this.strides=(0,a.Ur)(e)}set(e,...t){0===t.length&&(t=[0]),a.vA(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let r=this.locToIndex(t);this.values[r]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=this.strides[t]*e[t];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null;function d(e){h=e}function c(e){p=e}function f(e){}class m{constructor(e,t,r,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.Ze(e),this.strides=(0,a.Ur)(e),this.dataId=r,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return(0,a.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=h().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>l.decodeString(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>l.decodeString(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return function(e,t,r,n){let l=(0,a.Ur)(t),u=function(e,t,r,n){let i=(0,a.Ze)(t),l=n[n.length-1],u=Array(l).fill(0),h=t.length,p="complex64"===r?o(e):e;if(h>1)for(let e=0;e<i/l;e++){let t=e*l;for(let e=0;e<l;e++)u[e]=Math.max(u[e],s(p[t+e],0,r).length)}return u}(e,t,r,l),h=t.length,p=function e(t,r,n,a,l,u=!0){let h="complex64"===n?2:1,p=r[0],d=r.length;if(0===d)return"complex64"===n?[s(o(t)[0],0,n)]:"bool"===n?[i(t[0])]:[t[0].toString()];if(1===d){if(p>20){let e=Array.from(t.slice(0,3*h)),r=Array.from(t.slice((p-3)*h,p*h));return"complex64"===n&&(e=o(e),r=o(r)),["["+e.map((e,t)=>s(e,l[t],n)).join(", ")+", ..., "+r.map((e,t)=>s(e,l[p-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?o(t):Array.from(t)).map((e,t)=>s(e,l[t],n)).join(", ")+"]"]}let c=r.slice(1),f=a.slice(1),m=a[0]*h,g=[];if(p>20){for(let r=0;r<3;r++){let a=r*m,s=a+m;g.push(...e(t.slice(a,s),c,n,f,l,!1))}g.push("...");for(let r=p-3;r<p;r++){let a=r*m,s=a+m;g.push(...e(t.slice(a,s),c,n,f,l,r===p-1))}}else for(let r=0;r<p;r++){let a=r*m,s=a+m;g.push(...e(t.slice(a,s),c,n,f,l,r===p-1))}let y=2===d?",":"";g[0]="["+(p>0?g[0]+y:"");for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<d;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(u?"":b),g}(e,t,r,l,u),d=["Tensor"];return n&&(d.push(`  dtype: ${r}`),d.push(`  rank: ${h}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(p.map(e=>"    "+e).join("\n")),d.join("\n")}(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),h().makeVariable(this,e,t,r)}}function g(){return(0,n.m)("Tensor",()=>m)}Object.defineProperty(m,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),g();class y extends m{constructor(e,t,r,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.r1(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>e instanceof m&&null!=e.assign&&e.assign instanceof Function})},4525:(e,t,r)=>{"use strict";r.r(t),r.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>u,isTensorInList:()=>l,makeTypesMatch:()=>i});var n=r(3449),a=r(88802),s=r(23299);function i(e,t){if(e.dtype===t.dtype)return[e,t];let r=(0,a.Tu)(e.dtype,t.dtype);return[e.cast(r),t.cast(r)]}function o(e,t){(0,s.vA)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function l(e,t){return t.some(t=>t.id===e.id)}function u(e){let t=[];return function e(t,r,a){if(null!=t){if(t instanceof n.qY){r.push(t);return}if(Array.isArray(t)||"object"==typeof t)for(let n in t){let s=t[n];a.has(s)||(a.add(s),e(s,r,a))}}}(e,t,new Set),t}},16381:(e,t,r)=>{"use strict";r.d(t,{MZ:()=>u,YT:()=>p,j1:()=>d});var n=r(54685),a=r(57414),s=r(3449),i=r(88802),o=r(27708),l=r(23299);function u(e,t){let r=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oj)(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.Nw)(e))return[e.buffer.size/(null==t?4:(0,l.jv)(t))];if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(r)||(0,o.isTypedArray)(r)&&"string"!==t;)n.push(r.length),r=r[0];return Array.isArray(e)&&(0,a._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,r,n){if(n=n||[],!Array.isArray(t)&&!(0,o.isTypedArray)(t)){(0,l.vA)(0===r.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${r[0]} elements`);return}(0,l.vA)(r.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),(0,l.vA)(t.length===r[0],()=>`Element arr[${n.join("][")}] should have ${r[0]} elements, but has ${t.length} elements`);let a=r.slice(1);for(let r=0;r<t.length;++r)e(t[r],a,n.concat(r))}(e,n,[]),n}function h(e,t,r,n){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${r}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,r,a="numeric"){if(e instanceof(0,s.tp)())return h(a,e.dtype,t,r),e;let i=(0,l.X$)(e);if("string"!==i&&["bool","int32","float32"].indexOf(a)>=0&&(i=a),h(a,i,t,r),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let n=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${r}' must be a Tensor or TensorLike, but got '${n}'`)}let d=u(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);let c="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return n.T2.makeTensor(c,d,i)}function d(e,t,r,n="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>p(e,`${t}[${a}]`,r,n))}},88802:(e,t,r)=>{"use strict";var n,a,s,i,o;r.d(t,{Nw:()=>d,Oj:()=>p,Tu:()=>u,ch:()=>h}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(n||(n={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));let l={float32:i,int32:a,bool:s,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function h(e){return u(e,"int32")}function p(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function d(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},27708:(e,t,r)=>{"use strict";r.r(t),r.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>x,createShuffledIndices:()=>s.P8,decodeString:()=>N,distSquared:()=>s.oO,encodeString:()=>S,fetch:()=>T,fingerPrint64:()=>b,flatten:()=>I,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>l,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>k,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>w,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>v});var n=r(57414),a=r(8494),s=r(23299),i=r(92952);let o=r.n(i)()||i;function l(e){return o.fromString(e,!0,16)}let u=l("c3a5c85c97cb3127"),h=l("b492b66fbe98f273"),p=l("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function c(e,t,r){let n=e.slice(t,t+r);return o.fromBytes(Array.from(n),!0,!0)}function f(e,t){return c(e,t,8)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,r=l("9ddfea08eb382d69")){let n=e.xor(t).mul(r);n=n.xor(n.shru(47));let a=t.xor(n).mul(r);return(a=a.xor(a.shru(47))).mul(r)}function y(e,t,r,n){return function(e,t,r,n,a,s){a=a.add(e),s=m(s.add(a).add(n),21);let i=a;return a=(a=a.add(t)).add(r),s=s.add(m(a,44)),[a.add(n),s.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),r,n)}function b(e,t=e.length){let r=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let r=p.add(2*t),n=f(e,0).add(p),a=f(e,t-8);return g(m(a,37).mul(r).add(n),m(n,25).add(a).mul(r),r)}if(t>=4){let r=p.add(2*t);return g(c(e,0,4).shl(3).add(t),c(e,t-4,4),r)}if(t>0){let r=e[0],n=e[t>>1],a=e[t-1];return d(p.mul(r+(n<<8)).xor(u.mul(t+(a<<2)))).mul(p)}return p}(e,t):function(e,t=e.length){let r=p.add(2*t),n=f(e,0).mul(h),a=f(e,8),s=f(e,t-8).mul(r),i=f(e,t-16).mul(p);return g(m(n.add(a),43).add(m(s,30)).add(i),n.add(m(a.add(p),18)).add(s),r)}(e,t);if(t<=64)return function(e,t=e.length){let r=p.add(2*t),n=f(e,0).mul(p),a=f(e,8),s=f(e,t-8).mul(r),i=f(e,t-16).mul(p),o=m(n.add(a),43).add(m(s,30)).add(i),l=g(o,n.add(m(a.add(p),18)).add(s),r),u=f(e,16).mul(r),h=f(e,24),d=o.add(f(e,t-32)).mul(r),c=l.add(f(e,t-24)).mul(r);return g(m(u.add(h),43).add(m(d,30)).add(c),u.add(m(h.add(n),18)).add(d),r)}(e,t);let n=r,a=r.mul(h).add(113),s=d(a.mul(p).add(113)).mul(p),i=[o.UZERO,o.UZERO],l=[o.UZERO,o.UZERO];n=n.mul(p).add(f(e,0));let x=0,v=(t-1>>6)*64;do n=m(n.add(a).add(i[0]).add(f(e,x+8)),37).mul(h),a=m(a.add(i[1]).add(f(e,x+48)),42).mul(h),n=n.xor(l[1]),a=a.add(i[0]).add(f(e,x+40)),s=m(s.add(l[0]),33).mul(h),i=y(e,x,i[1].mul(h),n.add(l[0])),l=y(e,x+32,s.add(l[1]),a.add(f(e,x+16))),[s,n]=[n,s],x+=64;while(x!==v);let w=h.add(s.and(255).shl(1));return x=v+(t-1&63)-63,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),n=m(n.add(a).add(i[0]).add(f(e,x+8)),37).mul(w),a=m(a.add(i[1]).add(f(e,x+48)),42).mul(w),n=n.xor(l[1].mul(9)),a=a.add(i[0].mul(9).add(f(e,x+40))),s=m(s.add(l[0]),33).mul(w),i=y(e,x,i[1].mul(w),n.add(l[0])),l=y(e,x+32,s.add(l[1]),a.add(f(e,x+16))),[s,n]=[n,s],g(g(i[0],l[0],w).add(d(a).mul(u)).add(s),g(i[1],l[1],w).add(n),w)}function x(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){var r;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=I(e)),(0,n._K)().getBool("DEBUG")&&s.nd(e,t),(r=e)instanceof Float32Array&&"float32"===t||r instanceof Int32Array&&"int32"===t||r instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let r=0;r<t.length;++r)0!==Math.round(e[r])&&(t[r]=1);return t}throw Error(`Unknown data type ${t}`)}function w(){return(0,n._K)().platform.now()}function T(e,t){return(0,n._K)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,n._K)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,n._K)().platform.decode(e,t)}function k(e){return null!=(0,n._K)().platform.isTypedArray?(0,n._K)().platform.isTypedArray(e):(0,a.Y)(e)}function I(e,t=[],r=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||s.yL(e)||null==e||k(e)&&r)t.push(e);else if(Array.isArray(e)||k(e))for(let n=0;n<e.length;++n)I(e[n],t,r);else{let n=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(n=Math.max(n,Number(t)));for(let a=0;a<=n;a++)I(e[a],t,r)}return t}},23299:(e,t,r)=>{"use strict";function n(e){let t=e.length,r=0;for(;t>0;)r=Math.random()*t|0,o(e,--t,r)}function a(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let r=e.length,n=0;for(;r>0;)n=Math.random()*r|0,o(e,--r,n),o(t,r,n)}function s(e,t,r){return Math.max(e,Math.min(t,r))}function i(e){return e%2==0?e:e+1}function o(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function l(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t}function u(e,t){let r=Math.random();return t*r+(1-r)*e}function h(e,t){let r=0;for(let n=0;n<e.length;n++){let a=Number(e[n])-Number(t[n]);r+=a*a}return r}function p(e,t){if(!e)throw Error("string"==typeof t?t:t())}function d(e,t,r=""){p(y(e,t),()=>r+` Shapes ${e} and ${t} must match`)}function c(e){p(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e){if(0===e.length)return 1;let t=e[0];for(let r=1;r<e.length;r++)t*=e[r];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(null!==e[r]&&null!==t[r]&&e[r]!==t[r])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return -1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){let t=new Uint32Array(e);for(let r=0;r<e;++r)t[r]=r;return n(t),t}function T(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=e=>0,r,n){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}let l=t(++i);if(null!=r&&i>=r){s();return}null!=n?n(o,l):setTimeout(o,l)};o()})}function N(e,t){let r=1,n=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)r*=e[t];else if(-1===e[t]){if(-1!==n)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${t}`);n=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===n){if(t>0&&t!==r)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===r)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%r!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${r}`);let a=e.slice();return a[n]=t/r,a}function k(e,t){let r=t.length;return p((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-r&&e<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${e}`),p(e.every(e=>b(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?r+e:e)}function I(e,t){let r=[],n=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:k(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(r.push(e[t]),n.push(t)),s[i]<=t&&i++}1!==e[t]&&(r.push(e[t]),n.push(t))}return{newShape:r,keptDims:n}}function C(e,t){return E(e,t)}function E(e,t){let r=null;if(null==e||"float32"===e)r=new Float32Array(t);else if("int32"===e)r=new Int32Array(t);else if("bool"===e)r=new Uint8Array(t);else if("string"===e)r=Array(t);else throw Error(`Unknown data type ${e}`);return r}function A(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&("float32"!==t||"complex64"===e)&&("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function _(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function D(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function L(e){return"number"==typeof e}function M(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let r=t;r<e;++r)if(e%r==0)return r;return e}function z(e){let t=e.length;if(t<2)return[];let r=Array(t-1);r[t-2]=e[t-1];for(let n=t-3;n>=0;--n)r[n]=r[n+1]*e[n+1];return r}function B(e,t,r=!1){if(0===e.length)return t[0];let n=e.reduce((e,t)=>e*t)*(r?2:1);if(0===n)return[];if(n!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${r?" for a complex tensor":""}.`);return function e(t,r,n,a=!1){let s=[];if(1===r.length){let e=r[0]*(a?2:1);for(let r=0;r<e;r++)s[r]=n[t+r]}else{let i=r[0],o=r.slice(1),l=o.reduce((e,t)=>e*t)*(a?2:1);for(let r=0;r<i;r++)s[r]=e(t+r*l,o,n,a)}return s}(0,e,t,r)}function W(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function V(e,t){let r=U(e,t);for(let e=0;e<r.length;e++)r[e]=1;return r}function U(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function G(e,t){let r=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return B(e,new Float32Array(r));if("int32"===t)return B(e,new Int32Array(r));if("bool"===t)return B(e,new Uint8Array(r));throw Error(`Unknown data type ${t}`)}function Z(e){e.forEach(t=>{p(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function j(e,t,r){if(0===t)return 0;if(1===t)return e[0];let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=r[t]*e[t];return n}function K(e,t,r){if(0===t)return[];if(1===t)return[e];let n=Array(t);for(let t=0;t<n.length-1;++t)n[t]=Math.floor(e/r[t]),e-=n[t]*r[t];return n[n.length-1]=e,n}function H(e){return e&&e.then&&"function"==typeof e.then}r.d(t,{Ab:()=>E,BE:()=>R,E6:()=>b,Et:()=>L,FZ:()=>V,HO:()=>c,Kg:()=>D,Lm:()=>O,O3:()=>d,P8:()=>w,SA:()=>Z,SL:()=>_,Sf:()=>m,Tn:()=>M,Ty:()=>U,Ur:()=>z,X$:()=>function e(t){if(Array.isArray(t))return e(t[0]);if(t instanceof Float32Array);else if(t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray)return"int32";else if(L(t));else if(D(t))return"string";else if(O(t))return"bool";return"float32"},XT:()=>N,Y6:()=>k,Ze:()=>f,_k:()=>K,_q:()=>S,a0:()=>a,av:()=>T,c7:()=>G,ce:()=>C,cz:()=>l,eV:()=>i,e_:()=>g,gS:()=>v,gx:()=>I,jv:()=>F,k4:()=>n,lK:()=>P,nd:()=>A,o2:()=>W,oO:()=>h,qE:()=>s,r1:()=>y,sX:()=>j,so:()=>u,vA:()=>p,wg:()=>o,xn:()=>$,yL:()=>H,ym:()=>x,yw:()=>B})},5717:(e,t,r)=>{"use strict";r.d(t,{Bu:()=>S,b_:()=>k,rF:()=>y});var n=r(92289),a=r(23279),s=r(96253);class i extends n.JFn.Serializable{getConfig(){return{}}}class o extends i{apply(e,t=1){return a.Pq(e,t)}}o.className="elu",n.JFn.registerClass(o);class l extends i{apply(e){return n.WfX(e)}}l.className="selu",n.JFn.registerClass(l);class u extends i{apply(e){return n.VVh(e)}}u.className="relu",n.JFn.registerClass(u);class h extends i{apply(e){return(0,n.DZQ)(()=>n.BpO(6,n.VVh(e)))}}h.className="relu6",n.JFn.registerClass(h);class p extends i{apply(e){return e}}p.className="linear",n.JFn.registerClass(p);class d extends i{apply(e){return n.ry7(e)}}d.className="sigmoid",n.JFn.registerClass(d);class c extends i{apply(e){return a.KK(e)}}c.className="hardSigmoid",n.JFn.registerClass(c);class f extends i{apply(e){return n.lw0(e)}}f.className="softplus",n.JFn.registerClass(f);class m extends i{apply(e){return a.aY(e)}}m.className="softsign",n.JFn.registerClass(m);class g extends i{apply(e){return n.ymU(e)}}g.className="tanh",n.JFn.registerClass(g);class y extends i{apply(e,t=-1){return n.Vs9(e,t)}}y.className="softmax",n.JFn.registerClass(y);class b extends i{apply(e,t=-1){return n.HPB(e,t)}}b.className="logSoftmax",n.JFn.registerClass(b);class x extends i{apply(e){return(0,n.DZQ)(()=>n.DZQ(()=>{let t=Math.sqrt(2),r=n.lKK(.5,n.WQq(1,n.Y12(n.y4m(e,t))));return n.lKK(e,r)}))}}x.className="gelu",n.JFn.registerClass(x);class v extends i{apply(e){return(0,n.DZQ)(()=>n.lKK(.5,n.lKK(e,n.WQq(1,n.ymU(n.lKK(n.RZD(n.y4m(2,Math.PI)),n.WQq(e,n.lKK(.044715,n.n7C(e,3)))))))))}}v.className="gelu_new",n.JFn.registerClass(v);class w extends i{apply(e){return(0,n.DZQ)(()=>n.lKK(e,n.ymU(n.lw0(e))))}}w.className="mish",n.JFn.registerClass(w);class T extends i{apply(e,t=1){return(0,n.DZQ)(()=>n.lKK(n.ry7(n.lKK(e,t)),e))}}function S(e){return e.getClassName()}function N(e,t={}){return(0,s.Xv)(e,n.JFn.SerializationMap.getMap().classNameMap,t,"activation")}function k(e){if(null==e){let e={};return e.className="linear",e.config={},N(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},N(t)}return e instanceof i?e:N(e)}T.className="swish",n.JFn.registerClass(T)},7392:(e,t,r)=>{"use strict";let n;r.d(t,{Ni:()=>s,VI:()=>i});var a=r(92289);function s(){return null==n&&(n=(0,a.Hs)().epsilon()),n}function i(){return"channelsLast"}},31246:(e,t,r)=>{"use strict";r.d(t,{j:()=>a,v:()=>i});let n=0;function a(){return n++}let s={};function i(e=""){return e in s||(s[e]=0),s[e]+=1,e+s[e].toString()}},23279:(e,t,r)=>{"use strict";r.d(t,{Bq:()=>p,Dh:()=>c,EZ:()=>C,Ew:()=>T,FE:()=>x,KK:()=>E,Ls:()=>A,Om:()=>v,PS:()=>d,Pq:()=>k,UG:()=>u,Vs:()=>b,aY:()=>I,kg:()=>w,ly:()=>y,ni:()=>N,r0:()=>m,u1:()=>g,ux:()=>h,wg:()=>l});var n=r(92289),a=r(42389),s=r(33651),i=r(34158),o=r(7392);function l(e,t){return n.wgE(e,t)}function u(e,t=-1){let r=e.shape.slice();return t<0&&(t=r.length+t+1),r.splice(t,0,1),n.tQQ(e,r)}function h(e,t){return(0,n.DZQ)(()=>{if(2!==e.shape.length)throw new s.Qp(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return b(u(e,1),[1,t,1])})}function p(e){let t=[i.no(e.shape)];return n.tQQ(e,t)}function d(e){if(e.rank<=1)throw new s.Qp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],i.no(e.shape,1)];return n.tQQ(e,t)}function c(e,t,r){return(0,n.DZQ)(()=>{switch(e.rank){case 1:return n.Q$M(e,t,r);case 2:return n.zAd(e,[t,0],[r,e.shape[1]]);case 3:return n.wck(e,[t,0,0],[r,e.shape[1],e.shape[2]]);case 4:return n.R0O(e,[t,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3]]);case 5:return n.dik(e,[t,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return n.dik(e,[t,0,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new s.Qp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function f(e,t,r){return(0,n.DZQ)(()=>{switch(e.rank){case 1:return n.Q$M(e,t,r);case 2:return n.zAd(e,[0,t],[e.shape[0],r]);case 3:return n.wck(e,[0,0,t],[e.shape[0],e.shape[1],r]);case 4:return n.R0O(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],r]);default:throw new s.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function m(e,t,r,a){return(0,n.DZQ)(()=>{switch(e.rank){case 1:return n.Q$M(e,t,r);case 2:switch(a){case 1:return c(e,t,r);case 2:return f(e,t,r);default:throw new s.Qp(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return c(e,t,r);case 2:return n.wck(e,[0,t,0],[e.shape[0],r,e.shape[2]]);case 3:return f(e,t,r);default:throw new s.Qp(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return c(e,t,r);case 2:return n.R0O(e,[0,t,0,0],[e.shape[0],r,e.shape[2],e.shape[3]]);case 3:return n.R0O(e,[0,0,t,0],[e.shape[0],e.shape[1],r,e.shape[3]]);case 4:return f(e,t,r);default:throw new s.Qp(`The axis is not within the rank of the tensor ${a}`)}default:throw new s.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function g(e,t=-1){let r;return t<0&&(t=0!==(r=e[0].rank)?r:0),t===e[0].rank&&(t=-1),n.xWs(e,t)}function y(e,t){switch(e.rank){case 1:return n.I1m([e,t]);case 2:return n.RPU([e,t],0);case 3:return n.O5O([e,t],0);case 4:return n.P1l([e,t],0);default:throw new s.Qp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function b(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new s.Qp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return n.Vsq(e,t)}function x(e,t=0,r=1,a,s){return n.FE$(e,t,r,a,s)}function v(e,t,r,a){if(e.rank<2||t.rank<2)throw new s.EH(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new s.EH(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return n.cZk.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?S(e.rank,a,(0,o.VI)()):null,activation:r});{let s=e.shape.slice(),i=s.pop();e=n.tQQ(e,[-1,i]);let l=t.shape.slice(),u=l.pop(),h=l.pop(),p=[...l,u],d=Array.from({length:t.rank},(e,r)=>0===r?t.rank-2:r<=t.rank-2?r-1:r);t=n.tQQ(n.mgz(t,d),[h,-1]);let c=[...s,...p];return n.tQQ(n.cZk.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?S(e.rank,a,(0,o.VI)()):null,activation:r}),c)}}function w(e,t,r){return(0,n.DZQ)(()=>(t=Array.isArray(t)?(0,n.tGX)(t,"int32"):n.wgE(t,"int32"),n.kgh(e,t,r)))}function T(e){return n.lKK(e,e)}function S(e,t,r){let a=t.shape;if(1!==t.rank&&t.rank!==e)throw new s.Qp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===r)return 1===a.length?n.tQQ(t,[1,a[0],1,1,1]):n.tQQ(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===r)return 1===a.length?n.tQQ(t,[1,1,1,1,a[0]]):n.tQQ(t,[1].concat(a))}else if(4===e){if("channelsFirst"===r)return 1===a.length?n.tQQ(t,[1,a[0],1,1]):n.tQQ(t,[1,a[2],a[0],a[1]]);if("channelsLast"===r)return 1===a.length?n.tQQ(t,[1,1,1,a[0]]):n.tQQ(t,[1].concat(a))}else if(3===e){if("channelsFirst"===r)return 1===a.length?n.tQQ(t,[1,a[0],1]):n.tQQ(t,[1,a[1],a[0]]);if("channelsLast"===r)return 1===a.length?n.tQQ(t,[1,1,a[0]]):n.tQQ(t,[1].concat(a))}else if(e<3)return t;throw new s.Qp(`Unsupported input rank by biasAdd: ${t.rank}`)}function N(e,t,r){return(0,n.DZQ)(()=>(null==r&&(r=(0,o.VI)()),(0,a.uM)(r),n.WQq(e,S(e.rank,t,r))))}function k(e,t=1){if(1!==t)throw new s.EH(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return n.Pqc(e)}function I(e){return(0,n.DZQ)(()=>n.y4m(e,n.WQq(n.tnl(e),1)))}function C(e,t,r,a){return(0,n.DZQ)(()=>n.EZY(e,t,r,a))}function E(e){return(0,n.DZQ)(()=>{let t=n.WQq(.5,n.lKK(.2,e));return n.zQh(t,0,1)})}function A(e,t,r=!1){return r?e():t()}},79874:(e,t,r)=>{"use strict";r.d(t,{Eq:()=>c,J5:()=>l,dY:()=>m});var n,a=r(92289),s=r(33651),i=r(82255),o=r(96253);!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(n||(n={}));class l{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class u{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onEpochBegin(e,t)}async onEpochEnd(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onEpochEnd(e,t)}async onBatchBegin(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onBatchBegin(e,t)}async onBatchEnd(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onBatchEnd(e,t)}async onTrainBegin(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainBegin(e)}async onTrainEnd(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainEnd(e)}}class h extends l{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let r=null==t.size?0:t.size;for(let e in this.seen+=r,t){let n=t[e];if("number"==typeof n)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+n*r;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let s=(0,a.DZQ)(()=>(0,a.WQq)(this.totals[e],(0,a.lKK)(n,r)));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,a.DZQ)(()=>{let r=(0,a.lKK)((0,a.y4m)(1,this.seen),this.totals[e]);t[e]=r,this.totals[e].dispose(),(0,a.aCs)(t[e])}))}}class p extends l{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(let r in null==t&&(t={}),this.epoch.push(e),t)null==this.history[r]&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){let e=[],t=[],r=[];for(let n in this.history){let a=this.history[n];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(n),r.push(s)}}let n=await Promise.all(e);for(let e=0;e<n.length;++e)this.history[t[e]][r[e]].dispose(),this.history[t[e]][r[e]]=n[e][0]}}class d extends l{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||a.dA1,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=o.sg(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){let n=[];null!=this.yield&&(await (0,i.I)(r),n.push(this.yield(e,t,r))),n.push(this.nextFrameFunc()),await Promise.all(n)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await (0,i.I)(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let r=[];null!=this.epochEnd&&(await (0,i.I)(t),r.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){null!=this.batchBegin&&(await (0,i.I)(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let r=[];null!=this.batchEnd&&(await (0,i.I)(t),r.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?r.push(this.nextFrameFunc()):a.ZSL.isNumber(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){null!=this.trainBegin&&(await (0,i.I)(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await (0,i.I)(e),await this.trainEnd(e))}}function c(e,t){return(null==e&&(e={}),e instanceof l)?[e]:Array.isArray(e)&&e[0]instanceof l?e:o.st(e).map(e=>new d(e,t))}class f{constructor(){}static registerCallbackConstructor(e,t){a.ZSL.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),f.checkForDuplicate(t),null==f.constructors[e]&&(f.constructors[e]=[]),f.constructors[e].push(t)}static checkForDuplicate(e){for(let t in f.constructors)f.constructors[+t].forEach(t=>{if(t===e)throw new s.Qp("Duplicate callback constructor.")})}static clear(){f.constructors={}}static createCallbacks(e){let t=[];for(let r in f.constructors){let n=+r;e>=n&&t.push(...f.constructors[n])}return t.map(e=>new e)}}function m(e,t,r,n,a,s,i,o,l){let d=new p,c=[new h,...f.createCallbacks(t)];null!=e&&c.push(...e),c.push(d);let m=new u(c);return m.setParams({epochs:r,initialEpoch:n,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:m,history:d}}f.constructors={}},42389:(e,t,r)=>{"use strict";r.d(t,{BC:()=>d,IU:()=>p,Kx:()=>u,Uc:()=>c,tB:()=>l,uM:()=>i,uU:()=>o});var n=r(90620),a=r(96253);let s=new Map;function i(e){(0,a.E6)(n.To,"DataFormat",e)}function o(e){(0,a.E6)(n.ft,"InterpolationFormat",e)}function l(e){(0,a.E6)(n.EY,"PaddingMode",e)}function u(e){(0,a.E6)(n.bb,"PoolMode",e)}let h=[];function p(e,t){h.push(e);try{let e=t();return h.pop(),e}catch(e){throw h.pop(),e}}function d(e){if(!m(e))throw Error("Not a valid tensor name: '"+e+"'");return(0===h.length?"":h.join("/")+"/")+e}function c(e){if(!m(e))throw Error("Not a valid tensor name: '"+e+"'");s.has(e)||s.set(e,0);let t=s.get(e);if(s.set(e,s.get(e)+1),!(t>0))return e;{let r=`${e}_${t}`;return s.set(r,1),r}}let f=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function m(e){return!!e.match(f)}},51884:(e,t,r)=>{"use strict";r.d(t,{YZ:()=>m,uH:()=>c});var n=r(92289),a=r(7392),s=r(96253);function i(e,t){return(0,n.DZQ)(()=>n.RZD(n.czq(n.lKK(e,e),t,!0)))}class o extends n.JFn.Serializable{getConfig(){return{}}}class l extends o{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,n.DZQ)(()=>{let t=i(e,this.axis),r=n.zQh(t,0,this.maxValue);return n.lKK(e,n.y4m(r,n.WQq((0,a.Ni)(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}l.className="MaxNorm",n.JFn.registerClass(l);class u extends o{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,n.DZQ)(()=>n.y4m(e,n.WQq((0,a.Ni)(),i(e,this.axis))))}getConfig(){return{axis:this.axis}}}u.className="UnitNorm",n.JFn.registerClass(u);class h extends o{apply(e){return n.VVh(e)}}h.className="NonNeg",n.JFn.registerClass(h);class p extends o{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,n.DZQ)(()=>{let t=i(e,this.axis),r=n.WQq(n.lKK(this.rate,n.zQh(t,this.minValue,this.maxValue)),n.lKK(1-this.rate,t));return n.lKK(e,n.y4m(r,n.WQq((0,a.Ni)(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}p.className="MinMaxNorm",n.JFn.registerClass(p);let d={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function c(e){return(0,s.k4)(e)}function f(e,t={}){return(0,s.Xv)(e,n.JFn.SerializationMap.getMap().classNameMap,t,"constraint")}function m(e){return null==e?null:"string"==typeof e?f({className:e in d?d[e]:e,config:{}}):e instanceof o?e:f(e)}},17860:(e,t,r)=>{"use strict";r.d(t,{RW:()=>u,g7:()=>c,oR:()=>d});var n=r(92289),a=r(33651);class s{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}var i=r(96253),o=r(26927),l=r(61022);class u{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof u)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,r){if(null==this.id2Value[e.id])this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,n.wgE)(t,e.dtype)}catch(r){throw new a.Qp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=r&&(this.id2Mask[e.id]=r);else throw new a.Qp(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof l.Ar){if(null!=this.id2Value[e.id])return this.id2Value[e.id];throw new a.Qp(`Nonexistent key: ${e.name}`)}{let t=this.name2Id[e];if(null==t)throw new a.Qp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof l.Ar){if(null!=this.id2Value[e.id])return this.id2Mask[e.id];throw new a.Qp(`Nonexistent key: ${e.name}`)}{let t=this.name2Id[e];if(null==t)throw new a.Qp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,n.ASo)(this.id2Mask)}}let h=new s,p=new s;function d(e){null!=h&&h.setMaxEntries(e),null!=p&&p.setMaxEntries(e)}function c(e,t,r,a){let s;let l=null!=r&&r.training,d=Array.isArray(e),c=d?e:[e],m=c.map(e=>e.name),g=[],y=t.names();for(let e of m)-1!==y.indexOf(e)?g.push(t.getValue(e)):g.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);let b=m.join(",")+"|"+t.names().sort().join(","),x=h.get(b);if(null==x){let e=function(e,t){n.ZSL.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let r=[],a={};if(1===e.length){let n=f(e[0],t);r=n.sorted,a=n.recipientMap}else{let n=new Set;for(let s of e){let{sorted:e,recipientMap:i}=f(s,t);for(let t of e)n.has(t.name)||(r.push(t),n.add(t.name));for(let e in i)null==a[e]&&(a[e]=new Set),i[e].forEach(t=>a[e].add(t))}}return{sorted:r,recipientCounts:function(e){let t={};for(let r in e)t[r]=e[r].size;return t}(a)}}(c,t);x=e.sorted,s=e.recipientCounts,h.put(b,x),p.put(b,s)}s={},l||Object.assign(s,p.get(b));let v=new u(t);for(let e=0;e<x.length;++e){if(null!=a){let e=(0,n.m1Z)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}let u=x[e],h=u.sourceLayer;if(h instanceof o.m)continue;let p=[],d=[],c=[],f=!1;for(let e of u.inputs){let r=v.getValue(e),n=v.getMask(e);p.push(r),d.push(n),null!=n&&(f=!0),l||(s[e.name]--,0!==s[e.name]||t.hasKey(e)||-1!==m.indexOf(e.name)||r.isDisposed||!0===e.sourceLayer.stateful||c.push(r))}f&&((r=r||{}).mask=d[0]);let y=(0,i.st)(h.apply(p,r)),b=null;h.supportsMasking&&(b=h.computeMask(p,d));let w=function(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let r=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let n of e.sourceLayer.inboundNodes[t].outputTensors)if(n.id===e.id){r=t;break}t=e.sourceLayer.getOutputAt(r)}return t}(u),T=Array.isArray(w)?w:[w];for(let e=0;e<T.length;++e){v.hasKey(T[e])||v.add(T[e],y[e],Array.isArray(b)?b[0]:b);let t=m.indexOf(T[e].name);-1!==t&&(g[t]=y[e])}l||(0,n.ASo)(c)}return v.disposeMasks(),d?g:g[0]}function f(e,t){let r=new Set,n=[],a={};for(let e of t.names())r.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(r.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),n.push(e),r.add(e.name),t&&i.pop();else for(let t of(i.push(s.length-1),e.inputs))null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),r.has(t.name)||s.push(t)}return{sorted:n,recipientMap:a}}},26927:(e,t,r)=>{"use strict";r.d(t,{m:()=>o,p:()=>l});var n=r(92289),a=r(31246),s=r(33651),i=r(61022);class o extends i.Wd{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:(0,a.v)("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new s.Qp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new s.Qp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new s.Qp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];let n=new i.Ar(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new i.bP({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new s.Qp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function l(e){if(null==e.batchShape&&null==e.shape)throw Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new s.Qp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let r=e.dtype;return null==r&&(r="float32"),new o({batchInputShape:t,name:e.name,dtype:r,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}o.className="InputLayer",n.JFn.registerClass(o)},61022:(e,t,r)=>{"use strict";r.d(t,{Ar:()=>c,Wd:()=>y,X6:()=>function e(t,r,n){if((null==r||null!=n&&n>0)&&(r=t.sourceLayer,n=t.nodeIndex),0===r.inboundNodes.length)return[t];{let t=r.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{let r=[];for(let n=0;n<t.inboundLayers.length;n++)for(let a of e(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]))-1===r.indexOf(a)&&r.push(a);return r}}},bP:()=>m,eO:()=>d});var n=r(92289),a=r(31246),s=r(42389),i=r(33651),o=r(22662),l=r(96253),u=r(12809),h=r(8708),p=r(98505);class d{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class c{constructor(e,t,r,n,i,o,l){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=n,this.callArgs=i,this.outputTensorIndex=l,this.id=(0,a.j)(),null!=o&&(this.originalName=(0,s.BC)(o),this.name=(0,s.Uc)(this.originalName)),this.rank=t.length}}let f=0;class m{constructor(e,t){for(let r of(this.callArgs=t,this.id=f++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes,e.inboundLayers))null!=r&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let g=0;class y extends n.JFn.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=g++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=l.uc(e)+"_"+(0,a.v)(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let r=null;null!=e.batchSize&&(r=e.batchSize),t=[r].concat(e.inputShape)}this.batchInputShape=t;let r=e.dtype;null==r&&(r=e.inputDType),null==r&&(r="float32"),this.dtype=r}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new i.bu(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new i.Qp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return l.wL(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return l.wL(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new i.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new i.l7(`Layer ${this.name} is not connected, no input to return.`);return l.wL(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new i.l7(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new i.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return l.wL(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=l.st(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let r=l.st(this.inputSpec);if(t.length!==r.length)throw new i.Qp(`Layer ${this.name} expects ${r.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){let n=t[e],a=r[e];if(null==a)continue;let s=n.rank;if(null!=a.ndim&&s!==a.ndim)throw new i.Qp(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new i.Qp(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new i.Qp(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&n.dtype!==a.dtype)throw new i.Qp(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${n.dtype}.`);if(a.axes){let t=n.shape;for(let r in a.axes){let n=Number(r),s=a.axes[r],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new i.Qp(`Input ${e} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){let r=a.shape[t],s=n.shape[t];if(null!=r&&null!=s&&r!==s)throw new i.Qp(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${n.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let r=l.st(e),n=function(e){let t=!0;for(let r of l.st(e))if(!(r instanceof c)){t=!1;break}return t}(e),a=function(e){let t=!0;for(let r of l.st(e))if(r instanceof c){t=!1;break}return t}(e);if(n===a)throw new i.Qp("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,s.IU)(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let r of l.st(e))t.push(r.shape);this.build(l.wL(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let n=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,n);let a=l.st(n),s=[];for(let e of a)-1!==r.indexOf(e)&&(e=e.clone()),s.push(e);if(n=l.wL(s),null!=this.activityRegularizer)throw new i.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}{let r;let n=function(e){e=l.st(e);let t=[];for(let r of e)t.push(r.shape);return l.wL(t)}(e),a=this.computeOutputShape(n),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((r,n)=>new c(s,r,this,l.st(e),t,this.name,n)):new c(s,a,this,l.st(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new i.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape){if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,n)=>{null!=r&&null!=e[n]&&e[n]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new i.l7(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let r=JSON.stringify(t.outputShapes);-1===e.indexOf(r)&&e.push(r)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new i.l7(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new i.bu(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return h.Y(this.weights)}build(e){this.built=!0}getWeights(e=!1){return(0,p.ex)(e?this.trainableWeights:this.weights)}setWeights(e){(0,n.DZQ)(()=>{let t=this.weights;if(t.length!==e.length)throw new i.Qp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let r=[],a=(0,p.ex)(t);for(let s=0;s<a.length;++s){let o=a[s],l=t[s],u=e[s];if(!n.ZSL.arraysEqual(o.shape,u.shape))throw new i.Qp(`Layer weight shape ${o.shape} not compatible with provided weight shape ${u.shape}`);r.push([l,u])}(0,p.UM)(r)})}addWeight(e,t,r,n,a,s,l,u){if(-1!==this._addedWeightNames.indexOf(e))throw new i.Qp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==r&&(r="float32"),this.fastWeightInitDuringBuild&&(n=null!=u?u():(0,o.Fe)("zeros"));let h=n.apply(t,r),d=new p.eR(h,r,e,s,l);return h.dispose(),null!=a&&this.addLoss(()=>a.apply(d.read())),null==s&&(s=!0),s?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=l.st(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(Array.isArray(t))t.forEach(e=>{if(null!=e)throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}return null}return t}setMaskMetadata(e,t,r){if(!this.supportsMasking)return;let n=this.computeMask(e,r),a=l.st(t),s=l.st(n);if(a.length!==s.length)throw Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=s[e]}addInboundNode(e,t,r,n,a,s,i=null){let o=l.st(e);t=l.st(t),r=l.st(r),n=l.st(n),a=u.FS(a),s=u.FS(s);let h=[],p=[],d=[];for(let e of o)h.push(e.sourceLayer),p.push(e.nodeIndex),d.push(e.tensorIndex);new m({outboundLayer:this,inboundLayers:h,nodeIndices:p,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:r,outputMasks:n,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}},7210:(e,t,r)=>{"use strict";r.d(t,{O:()=>p,c:()=>c});var n=r(92289),a=r(79874),s=r(33651),i=r(82255),o=r(96253),l=r(42987);function u(e,t){let r,a;r=t.xs,a=t.ys,n.ZSL.assert(null!=r&&null!=a,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=h("input",e.inputNames,r),i=h("output",e.outputNames,a),o=s[0].shape[0];n.ZSL.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),n.ZSL.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<s.length;t++)n.ZSL.assert(s[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)n.ZSL.assert(i[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function h(e,t,r){if(r instanceof n.qYS)return[r];if(Array.isArray(r))return n.ZSL.assert(r.length===t.length,()=>`Received an array of ${r.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),r;{let n=[];for(let a of t){if(null==r[a])throw new s.Qp(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);n.push(r[a])}return n}}async function p(e,t,r){let h=null!=r.batchesPerEpoch;if(n.ZSL.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),n.ZSL.assert(null!=r,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),n.ZSL.assert(null!=r.epochs&&r.epochs>0&&Number.isInteger(r.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${r.epochs}`),n.ZSL.assert(!h||r.batchesPerEpoch>0&&Number.isInteger(r.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${r.batchesPerEpoch}`),n.ZSL.assert(null==r.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let p,c,f,m;let g=null!=r.validationData;if(g){if(d(r.validationData))n.ZSL.assert(null==r.validationBatches||r.validationBatches>0&&Number.isInteger(r.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${r.validationBatches}`);else{let e=function(e){if(3===e.length)throw new s.EH("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(r.validationData);p=e.xs,c=e.ys}}let y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();f=g?b.slice().concat(b.map(e=>"val_"+e)):b.slice();let x=(0,a.Eq)(r.callbacks,r.yieldEvery),v=null==r.verbose?1:r.verbose,{callbackList:w,history:T}=(0,a.dY)(x,v,r.epochs,null,null,(m=null,null!=r.batchesPerEpoch?m=r.batchesPerEpoch:Number.isFinite(t.size)&&(m=t.size),m),null,g,f);w.setModel(e),e.history=T,await w.onTrainBegin(),e.stopTraining_=!1;let S=null==r.initialEpoch?0:r.initialEpoch,N=await t.iterator();for(;S<r.epochs;){let a={};await w.onEpochBegin(S);let s=0,f=0;for(h||(N=await t.iterator());!h||s<r.batchesPerEpoch;){let t=await N.next();if(h&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${r.batchesPerEpoch}, but your dataset iterator ran out of data after ${s} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${r.batchesPerEpoch*r.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:a,ys:o}=u(e,t.value),h={};h.batch=f,h.size=a[0].shape[0],await w.onBatchBegin(f,h);let p=[];if(null!=r.classWeight){let t=(0,l.zO)(r.classWeight,e.outputNames);for(let e=0;e<t.length;++e)p.push(await (0,l.tP)(o[e],null,t[e]))}let d=a.concat(o).concat(p),c=y(d);n.ASo(d);for(let e=0;e<b.length;++e){let t=b[e],r=c[e];h[t]=r,n.aCs(r)}await w.onBatchEnd(f,h),(0,i.i)(h),f++,s++}if(h?s>=r.batchesPerEpoch:t.done){if(g){let t;t=d(r.validationData)?(0,o.st)(await e.evaluateDataset(r.validationData,{batches:r.validationBatches})):(0,o.st)(e.evaluate(p,c,{batchSize:null==r.validationBatchSize?32:r.validationBatchSize,verbose:0}));for(let r=0;r<e.metricsNames.length;++r)a[`val_${e.metricsNames[r]}`]=t[r]}break}if(e.stopTraining_)break}if(await w.onEpochEnd(S,a),S++,e.stopTraining_)break}return await w.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function d(e){return"function"==typeof e.iterator}async function c(e,t,r){let a=null!=(r=r||{}).batches,i=e.testFunction,l=[];if(r.verbose>0)throw new s.EH("Verbose mode is not implemented yet.");n.ZSL.assert(!a||r.batches>0&&Number.isInteger(r.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(r.batches)}`);let h="function"==typeof t.next?t:await t.iterator(),p=0,d=0;for(;!a||d<r.batches;){let t=await h.next();if(l=n.DZQ(()=>{if(t.value){let{xs:r,ys:a}=u(e,t.value),s=r.concat(a),o=n.DZQ(()=>i(s));if(n.ASo(s),0===d)for(let e=0;e<o.length;++e)l.push((0,n.d_2)(0));let h=s[0].shape[0];for(let e=0;e<o.length;++e){let t=o[e],r=l[e];l[e]=n.DZQ(()=>n.WQq(l[e],n.lKK(h,t))),d>0&&n.ASo(r)}n.ASo(o),p+=h,++d}return l}),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${r.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<l.length;++e){let t=l[e];l[e]=n.y4m(l[e],p),n.ASo(t)}return(0,o.wL)(l)}},87964:(e,t,r)=>{"use strict";r.d(t,{DE:()=>function e(t,r){return n.DZQ(()=>null==t?null:Array.isArray(t)?t.map(t=>e(t,r)):(0,a.kg)(t,"int32"===r.dtype?r:n.wgE(r,"int32")))},Ec:()=>u,Pe:()=>i,XX:()=>o,n4:()=>l,yy:()=>s});var n=r(92289),a=r(23279);function s(e){n.ZSL.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function i(e,t,r){return null==e?[null]:Array.isArray(e)?e.map(e=>(0,a.Dh)(e,t,r-t)):(0,a.Dh)(e,t,r-t)}function o(e,t){let r=[],n=0,a=null;for(;n<e;)(a=n+t)>=e&&(a=e),r.push([n,a]),n=a;return r}function l(e){let t=[];e instanceof n.qYS&&(e=[e]);for(let r=0;r<e.length;++r){let n=e[r];if(1===n.rank)t.push((0,a.UG)(n,1));else if(0===n.rank)throw Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");else t.push(n)}return t}function u(e,t){if(null==e)return;let r=[];if(t instanceof n.qYS)r.push(t.id);else if(Array.isArray(t))t.forEach(e=>r.push(e.id));else if(null!=t)for(let e in t){let n=t[e];r.push(n.id)}let a=[];if(e instanceof n.qYS)-1===r.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===r.indexOf(e.id)&&a.push(e)});else if(null!=e)for(let t in e){let n=e[t];-1===r.indexOf(n.id)&&a.push(n)}a.forEach(e=>{e.isDisposed||e.dispose()})}},42987:(e,t,r)=>{"use strict";r.d(t,{M5:()=>i,tP:()=>s,zO:()=>a});var n=r(92289);function a(e,t){return function(e,t,r){let n=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===n)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==n)throw Error(`Provided ${r} is an array of ${e.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let r=[];return t.forEach(t=>{t in e?r.push(e[t]):r.push(null)}),r}throw Error(`The model has multiple (${n}) outputs, so ${r} must be either an array with ${n} elements or an object with ${t} keys. Provided ${r} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function s(e,t,r,a){if(null!=t||null!=a)throw Error("Support sampleWeight is not implemented yet");if(null==r)return null;{let t=(0,n.DZQ)(()=>{if(1===e.shape.length)return(0,n.o8B)(e);if(2===e.shape.length){if(e.shape[1]>1)return(0,n.FLi)(e,1);if(1===e.shape[1])return(0,n.tQQ)(e,[e.shape[0]]);throw Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await t.data());(0,n.ASo)(t);let s=[];return a.forEach(e=>{if(null==r[e])throw Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(r[e])}),(0,n.tGX)(s,"float32")}}function i(e,t){return(0,n.lKK)(e,t)}},33651:(e,t,r)=>{"use strict";r.d(t,{EH:()=>i,Qp:()=>s,bu:()=>a,l7:()=>n,pf:()=>o});class n extends Error{constructor(e){super(e),Object.setPrototypeOf(this,n.prototype)}}class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}}class s extends Error{constructor(e){super(e),Object.setPrototypeOf(this,s.prototype)}}class i extends Error{constructor(e){super(e),Object.setPrototypeOf(this,i.prototype)}}class o extends Error{constructor(e){super(e),Object.setPrototypeOf(this,o.prototype)}}},85295:(e,t,r)=>{"use strict";r(79874),r(26927),r(49881),r(88334)},22662:(e,t,r)=>{"use strict";r.d(t,{H4:()=>p,sN:()=>c,Fe:()=>$,zo:()=>A});var n=r(92289),a=r(23279),s=r(42389),i=r(33651);let o=["fanIn","fanOut","fanAvg"],l=["normal","uniform","truncatedNormal"];var u=r(96253),h=r(34158);class p extends n.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class d extends p{apply(e,t){return(0,n.Ul9)(e,t)}}d.className="Zeros",n.JFn.registerClass(d);class c extends p{apply(e,t){return(0,n.SaS)(e,t)}}c.className="Ones",n.JFn.registerClass(c);class f extends p{constructor(e){if(super(),"object"!=typeof e)throw new i.Qp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new i.Qp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,n.DZQ)(()=>(0,n.lKK)((0,n.d_2)(this.value),(0,n.SaS)(e,t)))}getConfig(){return{value:this.value}}}f.className="Constant",n.JFn.registerClass(f);class m extends p{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,n.YeY)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}m.className="RandomUniform",n.JFn.registerClass(m);class g extends p{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new i.EH(`randomNormal does not support dType ${t}.`);return a.FE(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}g.className="RandomNormal",n.JFn.registerClass(g);class y extends p{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new i.EH(`truncatedNormal does not support dType ${t}.`);return(0,n.efE)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}y.className="TruncatedNormal",n.JFn.registerClass(y);class b extends p{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,n.DZQ)(()=>{if(2===e.length&&e[0]===e[1])return(0,n.lKK)(this.gain,(0,n.y5U)(e[0]));throw new i.Qp("Identity matrix initializer can only be used for 2D square matrices.")})}getConfig(){return{gain:this.gain}}}b.className="Identity",n.JFn.registerClass(b);class x extends p{constructor(e){var t,r;if(super(),e.scale<0)throw new i.Qp(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,(0,u.E6)(o,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,r=this.distribution,(0,u.E6)(l,"Distribution",r),this.seed=e.seed}apply(e,t){let r=function(e,t="channelsLast"){let r,n;if((0,s.uM)(t),2===e.length)r=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=(0,h.no)(e,2);r=e[1]*t,n=e[0]*t}else if("channelsLast"===t){let t=(0,h.no)(e,0,e.length-2);r=e[e.length-2]*t,n=e[e.length-1]*t}}else{let t=(0,h.no)(e);r=Math.sqrt(t),n=Math.sqrt(t)}return[r,n]}(e),a=r[0],o=r[1],l=this.scale;if("fanIn"===this.mode?l/=Math.max(1,a):"fanOut"===this.mode?l/=Math.max(1,o):l/=Math.max(1,(a+o)/2),"normal"===this.distribution){let r=Math.sqrt(l);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new i.EH(`${this.getClassName()} does not support dType ${t}.`);return(0,n.efE)(e,0,r,t,this.seed)}{let r=Math.sqrt(3*l);return(0,n.YeY)(e,-r,r,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}x.className="VarianceScaling",n.JFn.registerClass(x);class v extends x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}v.className="GlorotUniform",n.JFn.registerClass(v);class w extends x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}w.className="GlorotNormal",n.JFn.registerClass(w);class T extends x{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}T.className="HeNormal",n.JFn.registerClass(T);class S extends x{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}S.className="HeUniform",n.JFn.registerClass(S);class N extends x{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}N.className="LeCunNormal",n.JFn.registerClass(N);class k extends x{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}k.className="LeCunUniform",n.JFn.registerClass(k);class I extends p{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,n.DZQ)(()=>{if(e.length<2)throw new i.EH("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw TypeError(`Unsupported data type ${t}.`);let r=n.ZSL.sizeFromShape(e.slice(0,-1)),s=e[e.length-1],o=r*s;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);let l=[Math.max(s,r),Math.min(s,r)],u=a.FE(l,0,1,t,this.seed),h=n.mPL.qr(u,!1),p=h[0],d=h[1].flatten().stridedSlice([0],[Math.min(s,r)*Math.min(s,r)],[Math.min(s,r)+1]);return p=(0,n.lKK)(p,d.sign()),r<s&&(p=p.transpose()),(0,n.lKK)((0,n.d_2)(this.gain),p.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}I.className="Orthogonal",n.JFn.registerClass(I);let C={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function E(e,t={}){return(0,u.Xv)(e,n.JFn.SerializationMap.getMap().classNameMap,t,"initializer")}function A(e){return(0,u.k4)(e)}function $(e){if("string"==typeof e){let t=e in C?C[e]:e;if("GlorotNormal"===t)return new w;if("GlorotUniform"===t)return new v;{if("HeNormal"===t)return new T;if("HeUniform"===t)return new S;if("LeCunNormal"===t)return new N;if("LeCunUniform"===t)return new k;let e={};return e.className=t,e.config={},E(e)}}return e instanceof p?e:E(e)}},90620:(e,t,r)=>{"use strict";r.d(t,{EY:()=>s,To:()=>n,bb:()=>i,ft:()=>a,r$:()=>o});let n=["channelsFirst","channelsLast"],a=["nearest","bilinear"],s=["valid","same","causal"],i=["max","avg"],o=["sum","mul","concat","ave"]},69543:(e,t,r)=>{"use strict";var n=r(92289),a=r(5717),s=r(51884),i=r(61022),o=r(33651),l=r(22662),u=r(95825),h=r(12809);class p extends i.Wd{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=(0,h.un)(e);let r=(0,n.VVh)(e);return null!=this.maxValue&&(r=(0,n.zQh)(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue};return Object.assign(e,super.getConfig()),e}}p.className="ReLU",n.JFn.registerClass(p);class d extends i.Wd{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=(0,h.un)(e);return(0,n.H8d)(r,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}d.className="LeakyReLU",n.JFn.registerClass(d);class c extends i.Wd{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=(0,l.Fe)(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=(0,u.Bm)(e.alphaRegularizer),this.alphaConstraint=(0,s.YZ)(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if("number"==typeof e.sharedAxes)this.sharedAxes=[e.sharedAxes];else throw new o.Qp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){let t=(e=(0,h.U$)(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)r[t]=e[t];this.inputSpec=[new i.eO({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=(0,h.un)(e),(0,n.NsG)(e,this.alpha.read())}getConfig(){let e={alphaInitializer:(0,l.zo)(this.alphaInitializer),alphaRegularizer:(0,u.R9)(this.alphaRegularizer),alphaConstraint:(0,s.uH)(this.alphaConstraint),sharedAxes:this.sharedAxes};return Object.assign(e,super.getConfig()),e}}c.className="PReLU",n.JFn.registerClass(c);class f extends i.Wd{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new o.EH(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=(0,h.un)(e);return(0,n.Pqc)(r)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}f.className="ELU",n.JFn.registerClass(f);class m extends i.Wd{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let r=(0,h.un)(e);return(0,n.lKK)(r,(0,n.wgE)((0,n.rhj)(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta};return Object.assign(e,super.getConfig()),e}}m.className="ThresholdedReLU",n.JFn.registerClass(m);class g extends i.Wd{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=new a.rF().apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,n.DZQ)(()=>{let r=(0,h.un)(e),a=t.mask;if(null!=a){let e=(0,n.lKK)((0,n.jbE)((0,n.SaS)(r.shape),(0,n.wgE)(a,r.dtype)),(0,n.d_2)(-1e9));r=(0,n.WQq)(r,e)}return this.axis instanceof Array?this.axis.length>1?(0,n.oNF)((0,n.jbE)(r,(0,n.VZ)(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}g.className="Softmax",n.JFn.registerClass(g)},69796:(e,t,r)=>{"use strict";var n=r(92289),a=r(7392),s=r(23279),i=r(42389),o=r(51884),l=r(33651),u=r(22662),h=r(95825),p=r(91678),d=r(12809),c=r(41566);class f extends c.kO{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=(0,u.Fe)(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=(0,o.YZ)(e.depthwiseConstraint),this.depthwiseRegularizer=(0,h.Bm)(e.depthwiseRegularizer)}build(e){if((e=(0,d.U$)(e)).length<4)throw new l.Qp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new l.Qp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let r=e[t],n=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,n.DZQ)(()=>{let t=function(e,t,r=[1,1],s="valid",o,u){return(0,n.DZQ)(()=>{null==o&&(o=(0,a.VI)()),(0,i.uM)(o);let u=(0,c.RK)(e,o);if(4!==e.rank)throw new l.Qp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new l.Qp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return u=n.Gl3(u,t,r,"same"===s?"same":"valid","NHWC",null),"channelsFirst"===o&&(u=n.mgz(u,[0,3,1,2])),u})}(e=(0,d.un)(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,0);return this.useBias&&(t=s.ni(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=(0,d.U$)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],r="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=(0,p.Ol)(t,this.kernelSize[0],this.padding,this.strides[0]),s=(0,p.Ol)(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,a,s]:[e[0],a,s,n]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=(0,u.zo)(this.depthwiseInitializer),e.depthwiseRegularizer=(0,h.R9)(this.depthwiseRegularizer),e.depthwiseConstraint=(0,o.uH)(this.depthwiseRegularizer),e}}f.className="DepthwiseConv2D",n.JFn.registerClass(f)},85679:(e,t,r)=>{"use strict";var n=r(92289),a=r(23279),s=r(42389),i=r(61022),o=r(33651),l=r(22662),u=r(91678),h=r(96253),p=r(12809),d=r(38615),c=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)0>t.indexOf(n[a])&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]]);return r};class f extends d.VS{constructor(e){if(e.unroll)throw new o.EH("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new o.EH("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new i.eO({ndim:5})]}call(e,t){return n.DZQ(()=>{if(null!=this.cell.dropoutMask&&(n.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(n.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new o.Qp("ConvRNN2D cell does not support constants");let r=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:r,training:a,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...[,,].fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return n.DZQ(()=>{let{stateSize:t}=this.cell,r=e.shape,a=this.computeSingleOutputShape(r),s=[a[0],...a.slice(2)],i=n.Ul9(s);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){n.DZQ(()=>{if(!this.stateful)throw new o.l7("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape,a=this.computeSingleOutputShape(r),s=[a[0],...a.slice(2)];if(null==r[0])throw new o.Qp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>n.Ul9(s)):this.states_=[n.Ul9(s)];else if(null==e)n.ASo(this.states_),null!=this.keptStates&&(n.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>n.Ul9(s)):this.states_[0]=n.Ul9(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new o.Qp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):n.ASo(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t];if(!n.ZSL.arraysEqual(r.shape,s))throw new o.Qp(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>n.aCs(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:r,kernelSize:n,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],h=e[o?4:3],p=(0,u.Ol)(l,n[0],a,s[0],i[0]),d=(0,u.Ol)(h,n[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[r,p,d]:[p,d,r]]}}f.className="ConvRNN2D";class m extends d.Tu{constructor(e){let{filters:t,kernelSize:r,strides:n,padding:a,dataFormat:i,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,(0,h.oo)(this.filters,"filters"),this.kernelSize=(0,u.J)(r,2,"kernelSize"),this.kernelSize.forEach(e=>(0,h.oo)(e,"kernelSize")),this.strides=(0,u.J)(n||1,2,"strides"),this.strides.forEach(e=>(0,h.oo)(e,"strides")),this.padding=a||"valid",(0,s.tB)(this.padding),this.dataFormat=i||"channelsLast",(0,s.uM)(this.dataFormat),this.dilationRate=(0,u.J)(o||1,2,"dilationRate"),this.dilationRate.forEach(e=>(0,h.oo)(e,"dilationRate"))}build(e){var t;e=(0,p.U$)(e);let r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new o.Qp(`The channel dimension of the input should be defined. Found ${e[r]}`);let s=e[r],i=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let u=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",u,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let r=this.biasInitializer,s=this.filters;e=new((t=class extends l.H4{apply(e,t){let i=r.apply([s]),o=n.SaS([s]),l=r.apply([2*s]);return a.u1([i,o,l])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return n.DZQ(()=>{if(3!==e.length)throw new o.Qp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=t.training||!1,a=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=(0,d.FW)({ones:()=>n.P61(a),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,u=(e,t,r)=>t&&t[r]?n.lKK(t[r],e):e,h=u(a,l,0),p=u(a,l,1),c=u(a,l,2),f=u(a,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=(0,d.FW)({ones:()=>n.P61(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let m=this.recurrentDropoutMask,g=u(s,m,0),y=u(s,m,1),b=u(s,m,2),x=u(s,m,3),[v,w,T,S]=n.lDo(this.kernel.read(),4,3),[N,k,I,C]=this.useBias?n.lDo(this.bias.read(),4):[null,null,null,null];h=this.inputConv(h,v,N,this.padding),p=this.inputConv(p,w,k,this.padding),c=this.inputConv(c,T,I,this.padding),f=this.inputConv(f,S,C,this.padding);let[E,A,$,R]=n.lDo(this.recurrentKernel.read(),4,3);g=this.recurrentConv(g,E),y=this.recurrentConv(y,A),b=this.recurrentConv(b,$),x=this.recurrentConv(x,R);let F=this.recurrentActivation.apply(n.WQq(h,g)),_=this.recurrentActivation.apply(n.WQq(p,y)),D=n.WQq(n.lKK(_,i),n.lKK(F,this.activation.apply(n.WQq(c,b)))),O=n.lKK(this.recurrentActivation.apply(n.WQq(f,x)),this.activation.apply(D));return[O,O,D]})}getConfig(){let e=super.getConfig(),{units:t}=e,r=c(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),n)}inputConv(e,t,r,s){let i=n.Xtf(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?a.ni(i,r,this.dataFormat):i}recurrentConv(e,t){return n.Xtf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}m.className="ConvLSTM2DCell",n.JFn.registerClass(m);class g extends f{constructor(e){super(Object.assign(Object.assign({},e),{cell:new m(e)}))}static fromConfig(e,t){return new e(t)}}g.className="ConvLSTM2D",n.JFn.registerClass(g)},53704:(e,t,r)=>{"use strict";var n=r(92289),a=r(5717),s=r(23279),i=r(51884),o=r(61022),l=r(33651),u=r(22662),h=r(95825),p=r(96253),d=r(34158),c=r(12809);class f extends o.Wd{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,r=[];for(let e=0;e<this.noiseShape.length;++e)r.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return r}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,c.un)(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,n=this.getNoiseShape(r);return s.Ls(()=>s.EZ(r,this.rate,n,this.seed),()=>r,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed};return Object.assign(e,super.getConfig()),e}dispose(){return super.dispose()}}f.className="Dropout",n.JFn.registerClass(f);class m extends f{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}}m.className="SpatialDropout1D",n.JFn.registerClass(m);class g extends o.Wd{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,(0,p.oo)(this.units,"units"),this.activation=(0,a.b_)(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=(0,u.Fe)(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,u.Fe)(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=(0,i.YZ)(e.kernelConstraint),this.biasConstraint=(0,i.YZ)(e.biasConstraint),this.kernelRegularizer=(0,h.Bm)(e.kernelRegularizer),this.biasRegularizer=(0,h.Bm)(e.biasRegularizer),this.activityRegularizer=(0,h.Bm)(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=(0,c.U$)(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=(0,c.U$)(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,n.DZQ)(()=>{let r;this.invokeCallHook(e,t);let n=(0,c.un)(e),a=(0,p.Cd)(this.activation.getClassName());return null!=a?r=s.Om(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=s.Om(n,this.kernel.read()),null!=this.bias&&(r=s.ni(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:(0,a.Bu)(this.activation),useBias:this.useBias,kernelInitializer:(0,u.zo)(this.kernelInitializer),biasInitializer:(0,u.zo)(this.biasInitializer),kernelRegularizer:(0,h.R9)(this.kernelRegularizer),biasRegularizer:(0,h.R9)(this.biasRegularizer),activityRegularizer:(0,h.R9)(this.activityRegularizer),kernelConstraint:(0,i.uH)(this.kernelConstraint),biasConstraint:(0,i.uH)(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}g.className="Dense",n.JFn.registerClass(g);class y extends o.Wd{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(let t of(e=(0,c.U$)(e)).slice(1))if(null==t)throw new l.Qp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],(0,d.no)(e,1)]}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,c.un)(e);if("channelsFirst"===this.dataFormat&&r.rank>1){let e=[0];for(let t=2;t<r.rank;++t)e.push(t);e.push(1),r=(0,n.mgz)(r,e)}return s.PS(r)})}getConfig(){let e={};return null!=this.dataFormat&&(e.dataFormat=this.dataFormat),Object.assign(e,super.getConfig()),e}}y.className="Flatten",n.JFn.registerClass(y);class b extends o.Wd{constructor(e){super(e),this.supportsMasking=!0,this.activation=(0,a.b_)(e.activation)}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,c.un)(e);return this.activation.apply(r)})}getConfig(){let e={activation:(0,a.Bu)(this.activation)};return Object.assign(e,super.getConfig()),e}}b.className="Activation",n.JFn.registerClass(b);class x extends o.Wd{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,n.DZQ)(()=>(e=(0,c.un)(e),s.ux(e,this.n)))}getConfig(){let e={n:this.n};return Object.assign(e,super.getConfig()),e}}x.className="RepeatVector",n.JFn.registerClass(x);class v extends o.Wd{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let r="Total size of new array must be unchanged.",n=t.slice(),a=1,s=null;for(let e=0;e<n.length;++e){let t=n[e];if(this.isUnknown(t)){if(null===s)s=e;else throw new l.Qp("Can only specifiy one unknown dimension.")}else a*=t}let i=(0,d.no)(e);if(null!==s){if(0===a||i%a!=0)throw new l.Qp(r);n[s]=i/a}else if(i!==a)throw new l.Qp(r);return n}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,c.un)(e),a=r.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,n.tQQ)(r,s)})}getConfig(){let e={targetShape:this.targetShape};return Object.assign(e,super.getConfig()),e}}v.className="Reshape",n.JFn.registerClass(v);class w extends o.Wd{constructor(e){if(super(e),null==e.dims)throw Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=(0,d.y1)(1,e.dims.length+1);if(!n.ZSL.arraysEqual(e.dims.slice().sort(),t))throw Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new o.eO({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=(0,c.U$)(e)).slice();return this.dims.forEach((r,n)=>{t[n+1]=e[r]}),t}call(e,t){return(0,n.mgz)((0,c.un)(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims};return Object.assign(e,super.getConfig()),e}}w.className="Permute",n.JFn.registerClass(w);class T extends o.Wd{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e?this.maskValue=null==e.maskValue?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let r=(0,c.un)(e);return(0,n.bzn)((0,n.Ec)(r,this.maskValue),-1)}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,c.un)(e),a=(0,n.bzn)((0,n.Ec)(r,this.maskValue),-1,!0);return(0,n.lKK)(r,(0,n.wgE)(a,r.dtype))})}}T.className="Masking",n.JFn.registerClass(T)},87753:(e,t,r)=>{"use strict";var n=r(92289),a=r(23279),s=r(51884),i=r(61022),o=r(33651),l=r(22662),u=r(95825),h=r(96253),p=r(12809);class d extends i.Wd{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(h.st(e.inputLength))}this.inputDim=e.inputDim,h.oo(this.inputDim,"inputDim"),this.outputDim=e.outputDim,h.oo(this.outputDim,"outputDim"),this.embeddingsInitializer=(0,l.Fe)(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=(0,u.Bm)(e.embeddingsRegularizer),this.activityRegularizer=(0,u.Bm)(e.activityRegularizer),this.embeddingsConstraint=(0,s.YZ)(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,n.DZQ)(()=>this.maskZero?(e=(0,p.un)(e),(0,n.Ec)(e,(0,n.POl)(e))):null)}computeOutputShape(e){if(e=(0,p.U$)(e),null==this.inputLength)return[...e,this.outputDim];let t=h.st(this.inputLength);if(t.length!==e.length-1)throw new o.Qp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let n=0;n<t.length;++n){let a=t[n],s=e[n+1];if(null!=a&&null!=s&&a!==s)throw new o.Qp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[r]=s),r++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,p.un)(e);"int32"!==r.dtype&&(r=a.wg(r,"int32"));let s=a.kg(this.embeddings.read(),(0,n.tQQ)(r,[r.size]));return(0,n.tQQ)(s,(0,p.U$)(this.computeOutputShape(r.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:(0,l.zo)(this.embeddingsInitializer),embeddingsRegularizer:(0,u.R9)(this.embeddingsRegularizer),activityRegularizer:(0,u.R9)(this.activityRegularizer),embeddingsConstraint:(0,s.uH)(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength};return Object.assign(e,super.getConfig()),e}}d.className="Embedding",n.JFn.registerClass(d)},73701:(e,t,r)=>{"use strict";var n=r(92289),a=r(23279),s=r(61022),i=r(33651),o=r(18695),l=r(96253),u=r(34158),h=r(12809);class p extends s.Wd{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new i.EH}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let r=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let a=e[e.length-t.length+n],s=t[n];if(null==a||null==s||a<0||s<0)r.push(null);else if(1===a)r.push(s);else if(1===s)r.push(a);else{if(a!==s)throw new i.Qp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(a)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[(0,h.U$)(e)]),e.length<2)throw new i.Qp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)null!=r&&null!==r[0]&&t.push(r[0]);if((t=l.Am(t)).length>1)throw new i.Qp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let n=null==e[t]?null:e[t].slice(1);r=this.computeElementwiseOpOutputShape(r,n)}let n=e.map(e=>e.length);-1===e.indexOf(null)&&1===l.Am(n).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,n.DZQ)(()=>{if(!this.reshapeRequired)return this.mergeFunction(e);{let t=[],r=e.map(e=>e.rank);if(-1===r.indexOf(null)){let n=u.T9(r);for(let r of e){let e=r.rank;for(let t=0;t<n-e;++t)r=a.UG(r,1);t.push(r)}return this.mergeFunction(t)}{let r=!1;for(let a of e){let e=a.rank;if(null==e){let e=a.shape,s=e[0],i=e.slice(1).concat([s]),o=n.tQQ(a,[s].concat(u.no(e.slice(1))));o=n.mgz(o,[1,0]),o=n.tQQ(o,i),t.push(o),r=!0}else if(e>1){let s=u.y1(1,e).concat([0]);t.push(n.mgz(a,s)),r=!0}else t.push(a)}let a=this.mergeFunction(t),s=a.rank;if(r){if(null==s){let e=a.shape,t=e.length,r=e[t-1],s=[r].concat(e.slice(0,e.length-1));a=n.tQQ(n.mgz(n.tQQ(a,[-1,r]),[1,0]),s)}else if(s>1){let e=[s-1].concat(u.y1(0,s-1));a=n.mgz(a,e)}}return a}}})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let r=[];for(let t of e)null!=t&&null!==t[0]&&r.push(t[0]);return 1===(r=l.Am(r)).length?r.concat(t):[null].concat(t)}computeMask(e,t){return n.DZQ(()=>{if(null==t)return null;if(!Array.isArray(t))throw new i.Qp("`mask` should be an Array");if(!Array.isArray(e))throw new i.Qp("`inputs` should be an Array");if(t.length!==e.length)throw new i.Qp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let r=(t=t.map(e=>null==e?e:n.UG6(e,0)))[0];for(let e=1;e<t.length-1;++e)r=n.n76(r,t[e]);return r})}}class d extends p{constructor(e){super(e)}mergeFunction(e){return(0,n.DZQ)(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=n.WQq(t,e[r]);return t})}}d.className="Add",n.JFn.registerClass(d);class c extends p{constructor(e){super(e)}mergeFunction(e){return(0,n.DZQ)(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=n.lKK(t,e[r]);return t})}}c.className="Multiply",n.JFn.registerClass(c);class f extends p{constructor(e){super(e)}mergeFunction(e){return(0,n.DZQ)(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=n.WQq(t,e[r]);return n.lKK(1/e.length,t)})}}f.className="Average",n.JFn.registerClass(f);class m extends p{constructor(e){super(e)}mergeFunction(e){return(0,n.DZQ)(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=n.PhQ(t,e[r]);return t})}}m.className="Maximum",n.JFn.registerClass(m);class g extends p{constructor(e){super(e)}mergeFunction(e){return(0,n.DZQ)(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=n.BpO(t,e[r]);return t})}}g.className="Minimum",n.JFn.registerClass(g);class y extends p{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||1===e.length)throw new i.Qp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let r=[];for(let t=0;t<e.length;++t){let a=e[t].slice();a.splice(this.axis,1);let s=!1;for(let e of r)if(n.ZSL.arraysEqual(e,a)){s=!0;break}s||r.push(a)}if(r.length>1)throw new i.Qp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,n.DZQ)(()=>a.u1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new i.Qp("A `Concatenate` layer should be called on a list of inputs.");let t=e[0].slice(),r=this.axis<0?t.length+this.axis:this.axis;for(let n of e.slice(1)){if(null==t[r]||null==n[r]){t[r]=null;break}t[r]+=n[r]}return t}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new i.Qp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new i.Qp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new i.Qp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return n.DZQ(()=>{let r=!0;if(t.forEach(e=>{if(null!=e){r=!1;return}}),r)return null;let a=[];for(let r=0;r<e.length;++r)null==t[r]?a.push(n.wgE(n.P61(e[r]),"bool")):t[r].rank<e[r].rank?a.push(n.UG6(t[r],-1)):a.push(t[r]);let s=n.xWs(a,this.axis);return n.Q7R(s,-1,!1)})}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function b(e,t){for(;e<0;)e+=t;return e}y.className="Concatenate",n.JFn.registerClass(y);class x extends p{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){n.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],r=e[1];if(t.length>3||r.length>3)throw new i.EH("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,r);if(t[a[0]]!==r[a[1]])throw new i.Qp(`Dimension incompatibility: ${t[a[0]]} !== ${r[a[1]]}`)}mergeFunction(e){let t;if(2!==e.length)throw new i.Qp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let r=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,r)=>b(t,e[r].shape.length)):[b(this.axes,r.shape.length),b(this.axes,a.shape.length)],this.normalize&&(r=(0,o.Yq)(r,t[0]),a=(0,o.Yq)(a,t[1])),function(e,t,r){if(e.shape.length>3||t.shape.length>3)throw new i.EH("batchDot is not implemented for tensors of 4D or higher rank yet");if(n.ZSL.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),n.ZSL.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof r&&(r=[r,r]),"complex64"===e.dtype||"complex64"===t.dtype)throw new i.EH("batchDot is not implemented for complex64-type Tensors yet.");let a=e.shape.length,s=t.shape.length;null==r&&(r=[a-1,s-2]);let o=r;return n.DZQ(()=>{let r,i;if(a>s){r=a-s;let e=[];for(let t=0;t<r;++t)e.push(1);t=n.tQQ(t,t.shape.concat(e))}else if(s>a){r=s-a;let t=[];for(let e=0;e<r;++e)t.push(1);e=n.tQQ(e,e.shape.concat(t))}else r=0;if(2===e.shape.length&&2===t.shape.length)i=o[0]===o[1]?n.czq(n.lKK(e,t),o[0]):n.czq(n.lKK(n.mgz(e,[1,0]),t),o[1]);else{let r=o[0]!==e.shape.length-1,a=o[1]===t.shape.length-1;i=n.NoW(e,t,r,a)}if(r>0){let e;e=a>s?a+s-3:a-1;let t=[];for(let n=e;n<e+r;++n)t.push(n);i=n.r2V(i,t)}return 1===i.shape.length&&(i=n.UG6(i,1)),i})}(r,a,t)}interpretAxes(e,t){return Array.isArray(this.axes)?this.axes:[b(this.axes,e.length),b(this.axes,t.length)]}computeOutputShape(e){n.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new i.EH("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,r);t.splice(a[0],1),r.splice(a[1],1),r.splice(0,1);let s=t.concat(r);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize};return Object.assign(e,super.getConfig()),e}}x.className="Dot",n.JFn.registerClass(x)},88331:(e,t,r)=>{"use strict";var n=r(92289),a=r(23279),s=r(61022),i=r(12809);class o extends s.Wd{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,i.un)(e);return a.Ls(()=>(0,n.WQq)(a.FE(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}}o.className="GaussianNoise",n.JFn.registerClass(o);class l extends s.Wd{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t);let r=(0,i.un)(e);return this.rate>0&&this.rate<1?a.Ls(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return(0,n.lKK)(r,a.FE(r.shape,1,e))},()=>r,t.training||!1):r})}}l.className="GaussianDropout",n.JFn.registerClass(l);class u extends s.Wd{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||(0,i.un)(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,n.DZQ)(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(e);return a.Ls(()=>{let t=(0,i.un)(e),s=(0,n.DQN)((0,n.YeY)(r),this.rate);s=a.wg(s,"float32");let o=((1-this.rate)*(1+3.09091329228798*this.rate))**-.5,l=-(-1.7580993408473766*o)*this.rate,u=(0,n.WQq)((0,n.lKK)(t,s),(0,n.lKK)((0,n.WQq)(s,-1),-1.7580993408473766));return(0,n.WQq)((0,n.lKK)(u,o),l)},()=>(0,i.un)(e),t.training||!1)}return e})}}u.className="AlphaDropout",n.JFn.registerClass(u)},43052:(e,t,r)=>{"use strict";var n=r(92289),a=r(51884),s=r(61022),i=r(33651),o=r(22662),l=r(95825),u=r(96253),h=r(34158),p=r(12809);function d(e,t,r,a,s,o=.001){let l;if(2===e.rank)l=n.BFc(e,t,r,a,s,o);else if(3===e.rank)l=n.kSi(e,t,r,a,s,o);else if(4===e.rank)l=n.T5N(e,t,r,a,s,o);else throw new i.EH(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return l}class c extends s.Wd{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,o.Fe)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,o.Fe)(e.gammaInitializer||"ones"),this.movingMeanInitializer=(0,o.Fe)(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,o.Fe)(e.movingVarianceInitializer||"ones"),this.betaConstraint=(0,a.YZ)(e.betaConstraint),this.gammaConstraint=(0,a.YZ)(e.gammaConstraint),this.betaRegularizer=(0,l.Bm)(e.betaRegularizer),this.gammaRegularizer=(0,l.Bm)(e.gammaRegularizer)}build(e){e=(0,p.U$)(e);let t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(null==r)throw new i.Qp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new s.eO({ndim:e.length,axes:{[t]:r}})];let n=[r];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,n.DZQ)(()=>{let r=null!=t.training&&t.training,a=(0,p.un)(e),s=a.shape,i=s.length,o=h.y1(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);let c=u.fD(1,i);c[l]=s[l];let f=o.slice();f.sort();let m=!n.ZSL.arraysEqual(f,h.y1(0,i).slice(0,i-1));if(!r)return(()=>{if(!m)return d(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon);{let e=(0,n.tQQ)(this.movingMean.read(),c);return d(a,e,(0,n.tQQ)(this.movingVariance.read(),c),this.center?(0,n.tQQ)(this.beta.read(),c):null,this.scale?(0,n.tQQ)(this.gamma.read(),c):null,this.epsilon)}})();let[g,y,b]=function(e,t,r,a,s=.001){return n.ZSL.arraysEqual(a.slice().sort(),h.y1(0,e.rank-1))?function(e,t,r,a,s=.001){return(0,n.DZQ)(()=>{let i=n.Clk(e,a),o=i.mean,l=i.variance;return[d(e,o,l,r,t,s),o,l]})}(e,t,r,a,s):function(e,t,r,a,s=.001){return(0,n.DZQ)(()=>{let i=n.Clk(e,a),o=i.mean,l=i.variance,u=[];for(let t of h.y1(0,e.rank))-1!==a.indexOf(t)?u.push(1):u.push(e.shape[t]);let p=(0,n.tQQ)(o,u),c=(0,n.tQQ)(l,u),f=null==t?null:(0,n.tQQ)(t,u);return[d(e,p,c,null==r?null:(0,n.tQQ)(r,u),f,s),o,l]})}(e,t,r,a,s)}(a,this.gamma.read(),this.beta.read(),o,this.epsilon),x=(e,t,r)=>{n.DZQ(()=>{let a=e.read(),s=n.lKK(n.jbE(a,t),1-r);e.write(n.jbE(a,s))})};return(()=>{x(this.movingMean,y,this.momentum),x(this.movingVariance,b,this.momentum)})(),g})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,o.zo)(this.betaInitializer),gammaInitializer:(0,o.zo)(this.gammaInitializer),movingMeanInitializer:(0,o.zo)(this.movingMeanInitializer),movingVarianceInitializer:(0,o.zo)(this.movingVarianceInitializer),betaRegularizer:(0,l.R9)(this.betaRegularizer),gammaRegularizer:(0,l.R9)(this.gammaRegularizer),betaConstraint:(0,a.uH)(this.betaConstraint),gammaConstraint:(0,a.uH)(this.gammaConstraint)};return Object.assign(e,super.getConfig()),e}}c.className="BatchNormalization",n.JFn.registerClass(c);class f extends s.Wd{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,o.Fe)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,o.Fe)(e.gammaInitializer||"ones"),this.betaRegularizer=(0,l.Bm)(e.betaRegularizer),this.gammaRegularizer=(0,l.Bm)(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=(0,p.U$)(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw Error(`Invalid axis: ${e}`);if(this.axis.length!==u.Am(this.axis).length)throw Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let r=(0,p.un)(e),a=r.shape,s=a.length;return(0,n.DZQ)(()=>{let{mean:e,variance:t}=(0,n.Clk)(r,this.axis,!0),i=u.fD(1,s);for(let e of this.axis)i[e]=a[e];let o=e=>null!=e&&e.shape.length!==s?n.tQQ(e,i):e,l=this.scale?o(this.gamma.read()):null,h=this.center?o(this.beta.read()):null,p=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(p.push(a[e]),c.push(1)):(p.push(1),c.push(a[e]));return e=n.Vsq(e,p),t=n.Vsq(t,p),null!=l&&(l=n.Vsq(l,c)),null!=h&&(h=n.Vsq(h,c)),d(r,e,t,h,l,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,o.zo)(this.betaInitializer),gammaInitializer:(0,o.zo)(this.gammaInitializer),betaRegularizer:(0,l.R9)(this.betaRegularizer),gammaRegularizer:(0,l.R9)(this.gammaRegularizer)};return Object.assign(e,super.getConfig()),e}}f.className="LayerNormalization",n.JFn.registerClass(f)},42656:(e,t,r)=>{"use strict";var n=r(92289),a=r(7392),s=r(61022),i=r(33651),o=r(12809);class l extends s.Wd{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?(0,a.VI)():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{let t,r;if(e.padding=e.padding,2!==e.padding.length)throw new i.Qp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new i.Qp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new i.Qp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new s.eO({ndim:4})]}computeOutputShape(e){let t,r;return(e=(0,o.U$)(e),"channelsFirst"===this.dataFormat)?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,r]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,r,e[3]])}call(e,t){return(0,n.DZQ)(()=>{var t,r,s;return t=(0,o.un)(e),r=this.padding,s=this.dataFormat,(0,n.DZQ)(()=>{let e;if(4!==t.rank)throw new i.Qp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==r&&(r=[[1,1],[1,1]]),2!==r.length||2!==r[0].length||2!==r[1].length)throw new i.Qp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s=(0,a.VI)()),"channelsLast"!==s&&"channelsFirst"!==s)throw new i.Qp(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);return e="channelsFirst"===s?[[0,0],[0,0],r[0],r[1]]:[[0,0],r[0],r[1],[0,0]],n.eVF(t,e)})})}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}l.className="ZeroPadding2D",n.JFn.registerClass(l)},19671:(e,t,r)=>{"use strict";var n=r(92289),a=r(7392),s=r(23279),i=r(42389),o=r(61022),l=r(33651),u=r(91678),h=r(96253),p=r(12809),d=r(41566);function c(e,t,r,s,o,l){return(0,n.DZQ)(()=>{let u;(0,i.uM)(o),(0,i.Kx)(l),(0,i.tB)(s),null==r&&(r=[1,1]),null==s&&(s="valid"),null==o&&(o=(0,a.VI)()),null==l&&(l="max"),e=(0,d.RK)(e,o);let h="same"===s?"same":"valid";return u="max"===l?n.jgi(e,t,r,h):n.$jT(e,t,r,h),"channelsFirst"===o&&(u=n.mgz(u,[0,3,1,2])),u})}function f(e,t,r,s,o,l){return(0,n.DZQ)(()=>{let u;(0,i.uM)(o),(0,i.Kx)(l),(0,i.tB)(s),null==r&&(r=[1,1,1]),null==s&&(s="valid"),null==o&&(o=(0,a.VI)()),null==l&&(l="max"),e=(0,d.al)(e,o);let h="same"===s?"same":"valid";return u="max"===l?n.NYV(e,t,r,h):n.sub(e,t,r,h),"channelsFirst"===o&&(u=n.mgz(u,[0,4,1,2,3])),u})}class m extends o.Wd{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&1===e.poolSize.length&&"number"==typeof e.poolSize[0])this.poolSize=e.poolSize;else throw new l.Qp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if((0,h.oo)(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else if(Array.isArray(e.strides)&&1===e.strides.length&&"number"==typeof e.strides[0])this.strides=e.strides;else throw new l.Qp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);(0,h.oo)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,(0,i.tB)(this.padding),this.inputSpec=[new o.eO({ndim:3})]}computeOutputShape(e){e=(0,p.U$)(e);let t=(0,u.Ol)(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,n.DZQ)(()=>{this.invokeCallHook(e,t),e=s.UG((0,p.un)(e),2);let r=this.poolingFunction((0,p.un)(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return n.r2V(r,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides};return Object.assign(e,super.getConfig()),e}}class g extends m{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return(0,i.uM)(a),(0,i.tB)(n),c(e,t,r,n,a,"max")}}g.className="MaxPooling1D",n.JFn.registerClass(g);class y extends m{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return(0,i.uM)(a),(0,i.tB)(n),c(e,t,r,n,a,"avg")}}y.className="AveragePooling1D",n.JFn.registerClass(y);class b extends o.Wd{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new l.Qp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];(0,h.oo)(this.poolSize,"poolSize"),(0,h.oo)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,i.uM)(this.dataFormat),(0,i.tB)(this.padding),this.inputSpec=[new o.eO({ndim:4})]}computeOutputShape(e){e=(0,p.U$)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],r="channelsFirst"===this.dataFormat?e[3]:e[2];return(t=(0,u.Ol)(t,this.poolSize[0],this.padding,this.strides[0]),r=(0,u.Ol)(r,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return(0,n.DZQ)(()=>(this.invokeCallHook(e,t),this.poolingFunction((0,p.un)(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class x extends b{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return(0,i.uM)(a),(0,i.tB)(n),c(e,t,r,n,a,"max")}}x.className="MaxPooling2D",n.JFn.registerClass(x);class v extends b{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return(0,i.uM)(a),(0,i.tB)(n),c(e,t,r,n,a,"avg")}}v.className="AveragePooling2D",n.JFn.registerClass(v);class w extends o.Wd{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new l.Qp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];(0,h.oo)(this.poolSize,"poolSize"),(0,h.oo)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,i.uM)(this.dataFormat),(0,i.tB)(this.padding),this.inputSpec=[new o.eO({ndim:5})]}computeOutputShape(e){e=(0,p.U$)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],r="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[4]:e[3];return(t=(0,u.Ol)(t,this.poolSize[0],this.padding,this.strides[0]),r=(0,u.Ol)(r,this.poolSize[1],this.padding,this.strides[1]),n=(0,u.Ol)(n,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,r,n]:[e[0],t,r,n,e[4]]}call(e,t){return(0,n.DZQ)(()=>(this.invokeCallHook(e,t),this.poolingFunction((0,p.un)(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class T extends w{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return(0,i.uM)(a),(0,i.tB)(n),f(e,t,r,n,a,"max")}}T.className="MaxPooling3D",n.JFn.registerClass(T);class S extends w{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return(0,i.uM)(a),(0,i.tB)(n),f(e,t,r,n,a,"avg")}}S.className="AveragePooling3D",n.JFn.registerClass(S);class N extends o.Wd{constructor(e){super(e),this.inputSpec=[new o.eO({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new l.EH}}class k extends N{constructor(e){super(e||{})}call(e,t){return(0,n.DZQ)(()=>{let t=(0,p.un)(e);return n.i2o(t,1)})}}k.className="GlobalAveragePooling1D",n.JFn.registerClass(k);class I extends N{constructor(e){super(e||{})}call(e,t){return(0,n.DZQ)(()=>{let t=(0,p.un)(e);return n.T9B(t,1)})}}I.className="GlobalMaxPooling1D",n.JFn.registerClass(I);class C extends o.Wd{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,i.uM)(this.dataFormat),this.inputSpec=[new o.eO({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new l.EH}getConfig(){let e={dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class E extends C{call(e,t){return(0,n.DZQ)(()=>{let t=(0,p.un)(e);return"channelsLast"===this.dataFormat?n.i2o(t,[1,2]):n.i2o(t,[2,3])})}}E.className="GlobalAveragePooling2D",n.JFn.registerClass(E);class A extends C{call(e,t){return(0,n.DZQ)(()=>{let t=(0,p.un)(e);return"channelsLast"===this.dataFormat?n.T9B(t,[1,2]):n.T9B(t,[2,3])})}}A.className="GlobalMaxPooling2D",n.JFn.registerClass(A)},58379:(e,t,r)=>{"use strict";var n=r(61022),a=r(92289),s=r(12809),i=r(33651),o=r(23279);class l extends n.Wd{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){return null==(e=(0,s.U$)(e))?[this.numTokens]:("oneHot"===this.outputMode&&1!==e[e.length-1]?e.push(this.numTokens):e[e.length-1]=this.numTokens,e)}call(e,t){return(0,a.DZQ)(()=>{let r;if("int32"!==(e=(0,s.un)(e)).dtype&&(e=o.wg(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new i.Qp(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=(0,s.un)(t.countWeights)}let n=(0,a.T9B)(e),l=(0,a.jkA)(e),u=(0,a.rhj)(this.numTokens,n).bufferSync().get(0),h=(0,a.DQN)(l,0).bufferSync().get(0);if(!(u&&h))throw new i.Qp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,r,n){let l,u=(0,s.un)(e);if("int32"!==u.dtype&&(u=o.wg(u,"int32")),"int"===t)return u;let h=u.shape;if(0===u.rank&&(u=(0,a.UG6)(u,-1)),"oneHot"===t&&1!==u.shape[u.shape.length-1]&&(u=(0,a.UG6)(u,-1)),u.rank>2)throw new i.Qp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${h} which would result in output rank ${u.rank}.`);let p=["multiHot","oneHot"].includes(t),d=u;if(l=void 0!==n&&"count"===t?(0,a.aOp)(d,n,r,p):(0,a.aOp)(d,[],r,p),"tfIdf"!==t)return l;if(n)return(0,a.lKK)(l,n);throw new i.Qp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,r)})}}l.className="CategoryEncoding",a.JFn.registerClass(l)},39572:(e,t,r)=>{"use strict";var n=r(92289),a=r(12809),s=r(61022),i=r(23279);let{resizeBilinear:o,cropAndResize:l}=n.Slp;class u extends s.Wd{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,s,o,u,h,p){return(0,n.DZQ)(()=>{let d;let c=!1,f=(s+t)/u,m=(o+r)/h,g=[t/u,r/h,f,m],y=[];3===e.rank?(c=!0,d=(0,n.t$z)([e])):d=e;for(let e=0;e<d.shape[0];e++)y.push(g);let b=l(d,(0,n.OEK)(y,[y.length,4]),(0,n.y17)(0,y.length,1,"int32"),[s,o],"nearest");return c?i.wg((0,a.un)((0,n.K$i)(b)),p):i.wg(b,p)})}upsize(e,t,r,a){return(0,n.DZQ)(()=>{let n=o(e,[t,r]);return i.wg(n,a)})}call(e,t){return(0,n.DZQ)(()=>{let t=(0,a.un)(e),r=t.dtype,n=t.shape,s=n[n.length-3],i=n[n.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let l=0;return(i!==this.width&&0===(l=Math.floor((i-this.width)/2))&&(l=1),o>=0&&l>=0)?this.centerCrop(t,o,l,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=(0,a.U$)(e)).length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}}u.className="CenterCrop",n.JFn.registerClass(u)},29344:(e,t,r)=>{"use strict";var n=r(61022),a=r(92289),s=r(12809),i=r(23279);class o extends n.Wd{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset};return Object.assign(e,super.getConfig()),e}call(e,t){return(0,a.DZQ)(()=>("float32"!==(e=(0,s.un)(e)).dtype&&(e=i.wg(e,"float32")),(0,a.WQq)((0,a.lKK)(e,this.scale),this.offset)))}}o.className="Rescaling",a.JFn.registerClass(o)},78293:(e,t,r)=>{"use strict";var n=r(92289),a=r(61022),s=r(33651),i=r(12809);let o=new Set(["bilinear","nearest"]);class l extends a.Wd{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(o.has(e.interpolation))this.interpolation=e.interpolation;else throw new s.Qp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`)}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=(0,i.U$)(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio};return Object.assign(e,super.getConfig()),e}call(e,t){return(0,n.DZQ)(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return n.Slp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return n.Slp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw Error(`Interpolation is ${this.interpolation} but only ${[...o]} are supported`)})}}l.className="Resizing",n.JFn.registerClass(l)},99959:(e,t,r)=>{"use strict";var n=r(92289),a=r(12809),s=r(33651),i=r(61022);class o{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}o.className="RandomSeed";class l extends i.Wd{constructor(e){super(e),this.randomGenerator=new o(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed};return Object.assign(e,super.getConfig()),e}}l.className="BaseRandomLayer";let u=new Set(["bilinear","nearest"]);class h extends l{constructor(e){super(e);let{factor:t,interpolation:r="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new s.Qp(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new s.Qp(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new s.Qp(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(r){if(u.has(r))this.interpolation=r;else throw new s.Qp(`Invalid interpolation parameter: ${r} is not implemented`)}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=(0,a.U$)(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,n.DZQ)(()=>{let t=(0,a.un)(e);this.imgHeight=t.shape[t.shape.length-3];let r=t.shape[t.shape.length-2];this.widthFactor=(0,n.YeY)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*r;s=Math.round(s);let i=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return n.Slp.resizeBilinear(e,i);case"nearest":return n.Slp.resizeNearestNeighbor(e,i);default:throw Error(`Interpolation is ${this.interpolation}
          but only ${[...u]} are supported`)}})}}h.className="RandomWidth",n.JFn.registerClass(h)},13933:(e,t,r)=>{"use strict";r.d(t,{i:()=>s});var n=r(92289),a=r(96253);function s(e,t={},r=!1){return(0,a.Xv)(e,n.JFn.SerializationMap.getMap().classNameMap,t,"layer",r)}},29079:(e,t,r)=>{"use strict";var n=r(92289),a=r(23279),s=r(42389),i=r(61022),o=r(33651),l=r(90620),u=r(96253),h=r(12809),p=r(38615),d=r(13933);class c extends i.Wd{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}};return Object.assign(e,super.getConfig()),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){let n=t.layer,a=(0,d.i)(n,r);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}}class f extends c{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=(0,h.U$)(e)).length<3)throw new o.Qp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=(0,h.U$)(e))[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),n=e[1];return[r[0],n].concat(r.slice(1))}call(e,t){return(0,n.DZQ)(()=>(e=(0,h.un)(e),(0,p.L7)((e,r)=>[(0,h.un)(this.layer.call(e,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}f.className="TimeDistributed",n.JFn.registerClass(f);class m extends c{constructor(e){var t;super(e);let r=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=r,this.forwardLayer=(0,d.i)(n),r.goBackwards=!0!==r.goBackwards;let a={};if(a.className=e.layer.getClassName(),a.config=r,this.backwardLayer=(0,d.i)(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,t=this.mergeMode,u.E6(l.r$,"BidirectionalMergeMode",t),e.weights)throw new o.EH("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,r,n,a=this.forwardLayer.computeOutputShape(e);return(Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(n=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,r=[t]):r=null==this.mergeMode?[t,t.slice()]:[t],this.returnState)?null==this.mergeMode?r.concat(n).concat(n.slice()):[t].concat(n).concat(n.slice()):u.wL(r)}apply(e,t){let r=null==t?null:t.initialState,n=null==t?null:t.constants;null==t&&(t={});let a=(0,p.tL)(e,r,n,this.numConstants);if(e=a.inputs,r=a.initialState,n=a.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==n)return super.apply(e,t);let s=[],l=[];if(null!=r){let e=r.length;if(e%2>0)throw new o.Qp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,s.push(...r);let n=r.map(e=>new i.eO({shape:e.shape}));this.forwardLayer.stateSpec=n.slice(0,e/2),this.backwardLayer.stateSpec=n.slice(e/2),l.push(...n)}if(null!=n)throw new o.EH("Support for constants in Bidirectional layers is not implemented yet.");let u=s[0]instanceof i.Ar;for(let e of s)if(e instanceof i.Ar!==u)throw new o.Qp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(!u)return super.apply(e,t);{let r=[e].concat(s),n=this.inputSpec.concat(l),a=this.inputSpec;this.inputSpec=n;let i=super.apply(r,t);return this.inputSpec=a,i}}call(e,t){return(0,n.DZQ)(()=>{let r,s,i,o;let l=t.initialState;if(null==l)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let n=l.slice(0,l.length/2),a=l.slice(l.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:n})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return(this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=n.BEg(s,1)),"concat"===this.mergeMode?o=a.u1([r,s]):"sum"===this.mergeMode?o=n.WQq(r,s):"ave"===this.mergeMode?o=n.lKK(.5,n.WQq(r,s)):"mul"===this.mergeMode?o=n.lKK(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState)?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){(0,s.IU)(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),(0,s.IU)(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let r;if(Array.isArray(t)&&(t=t[0]),r=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,!this.returnState)return r;{let e=this.forwardLayer.states.map(e=>null);return Array.isArray(r)?r.concat(e).concat(e):[r].concat(e).concat(e)}}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode};return Object.assign(e,super.getConfig()),e}static fromConfig(e,t){let r=(0,d.i)(t.layer);if(delete t.layer,null!=t.numConstants)throw new o.EH("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");return t.layer=r,new e(t)}}m.className="Bidirectional",n.JFn.registerClass(m)},82255:(e,t,r)=>{"use strict";r.d(t,{I:()=>a,i:()=>s});var n=r(92289);async function a(e){if(null==e)return;let t=[],r=[],a=[];for(let n in e){let s=e[n];"number"!=typeof s&&(t.push(s.data()),r.push(n),a.push(s))}if(t.length>0){let s=await Promise.all(t);for(let t=0;t<s.length;++t)e[r[t]]=s[t][0];(0,n.ASo)(a)}}function s(e){if(null!=e)for(let t in e){let r=e[t];"number"!=typeof r&&r.dispose()}}},18695:(e,t,r)=>{"use strict";r.d(t,{Jc:()=>c,Jt:()=>g,Ol:()=>p,Pg:()=>f,SO:()=>m,VW:()=>h,Xv:()=>u,Yq:()=>o,bt:()=>l,qp:()=>d});var n=r(92289),a=r(7392),s=r(23279),i=r(33651);function o(e,t){return(0,n.DZQ)(()=>{"float32"!==e.dtype&&(e=n.wgE(e,"float32"));let r=n.czq(s.Ew(e),t,!0),i=n.GSj(r.shape,(0,a.Ni)()),o=n.RZD(n.PhQ(r,i));return n.y4m(e,o)})}function l(e,t){return(0,n.DZQ)(()=>n.i2o(s.Ew(n.jbE(t,e)),-1))}function u(e,t){return(0,n.DZQ)(()=>n.i2o(n.tnl(n.jbE(t,e)),-1))}function h(e,t){return(0,n.DZQ)(()=>{let r=n.jbE(e,t),s=n.zQh(n.tnl(e),(0,a.Ni)(),Number.MAX_VALUE),i=n.tnl(n.y4m(r,s));return n.lKK(100,n.i2o(i,-1))})}function p(e,t,r=!1){return(0,n.DZQ)(()=>{if(r)t=n.Vs9(t);else{let e=n.czq(t,t.shape.length-1,!0);t=n.y4m(t,e)}return t=n.zQh(t,(0,a.Ni)(),1-(0,a.Ni)()),n.HZy(n.czq(n.lKK(n.wgE(e,"float32"),n.Rm2(t)),t.shape.length-1))})}function d(e,t,r=!1){return(0,n.DZQ)(()=>{let i=n.wgE(n.RIf(s.Bq(e)),"int32"),o=(t=n.zQh(t,(0,a.Ni)(),1-(0,a.Ni)())).shape;return p(n.tQQ(n.Mw0(i,o[o.length-1]),o),t,r)})}function c(e,t){return(0,n.DZQ)(()=>{let r;return r=n.zQh(t,(0,a.Ni)(),1-(0,a.Ni)()),r=n.Rm2(n.y4m(r,n.jbE(1,r))),n.i2o(function(e,t){if(!n.ZSL.arraysEqual(e.shape,t.shape))throw new i.Qp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,n.DZQ)(()=>{let r=n.VVh(t),a=n.HZy(n.tnl(t));return n.WQq(n.jbE(r,n.lKK(t,e)),n.Kko(n.oNF(a)))})}(e,r),-1)})}function f(e,t){return(0,n.DZQ)(()=>{let r=o(e,-1),a=o(t,-1),s=n.lKK(r,a);return n.HZy(n.czq(s,-1))})}let m={meanSquaredError:l,meanAbsoluteError:u,meanAbsolutePercentageError:h,meanSquaredLogarithmicError:function(e,t){return(0,n.DZQ)(()=>{let r=n.zQh(t,(0,a.Ni)(),Number.MAX_VALUE),i=n.Rm2(n.WQq(1,r)),o=n.zQh(e,(0,a.Ni)(),Number.MAX_VALUE),l=n.Rm2(n.WQq(1,o));return n.i2o(s.Ew(n.jbE(i,l)),-1)})},squaredHinge:function(e,t){return(0,n.DZQ)(()=>{let r=n.PhQ(0,n.jbE(1,n.lKK(e,t)));return n.i2o(s.Ew(r),-1)})},hinge:function(e,t){return(0,n.DZQ)(()=>{let r=n.PhQ(0,n.jbE(1,n.lKK(e,t)));return n.i2o(r,-1)})},categoricalHinge:function(e,t){return(0,n.DZQ)(()=>{let r=n.czq(n.lKK(e,t),-1),a=n.T9B(n.lKK(n.jbE(1,e),t),-1);return n.PhQ(0,n.WQq(1,n.jbE(a,r)))})},logcosh:function(e,t){return(0,n.DZQ)(()=>{let r=Math.log(2),a=n.jbE(t,e),s=n.jbE(n.WQq(a,n.lw0(n.lKK(-2,a))),r);return n.i2o(s,-1)})},categoricalCrossentropy:p,sparseCategoricalCrossentropy:d,binaryCrossentropy:c,kullbackLeiblerDivergence:function(e,t){return(0,n.DZQ)(()=>{let r=n.zQh(e,(0,a.Ni)(),1),s=n.zQh(t,(0,a.Ni)(),1);return n.czq(n.lKK(e,n.Rm2(n.y4m(r,s))),-1)})},poisson:function(e,t){return(0,n.DZQ)(()=>{let r=n.Rm2(n.WQq((0,a.Ni)(),t));return n.i2o(n.jbE(t,n.lKK(e,r)),-1)})},cosineProximity:f};function g(e){if("string"!=typeof e)return e;{if(e in m)return m[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new i.Qp(t)}}},23481:(e,t,r)=>{"use strict";r.d(t,{GT:()=>S,Jc:()=>h,Jt:()=>T,Ol:()=>b,qp:()=>v,qv:()=>p,xM:()=>l,yP:()=>u});var n=r(92289),a=r(23279),s=r(33651),i=r(18695),o=r(96253);function l(e,t){return(0,n.DZQ)(()=>{let r=n.lKK(.5,n.P61(t)),s=a.wg(n.rhj(t,r),e.dtype);return n.i2o(n.LCg(e,s),-1)})}function u(e,t){return(0,n.DZQ)(()=>a.wg(n.LCg(n.FLi(e,-1),n.FLi(t,-1)),"float32"))}function h(e,t){return(0,i.Jc)(e,t)}function p(e,t){return e.rank===t.rank&&(e=n.r2V(e,[e.rank-1])),(t=n.FLi(t,-1)).dtype!==e.dtype&&(t=n.wgE(t,e.dtype)),n.wgE(n.LCg(e,t),"float32")}let d=i.bt,c=i.bt,f=i.Xv,m=i.Xv,g=i.VW,y=i.VW,b=i.Ol,x=i.Pg,v=i.qp,w={binaryAccuracy:l,categoricalAccuracy:u,precision:function(e,t){return(0,n.DZQ)(()=>{let r=(0,n.DZQ)(()=>n.wgE(n.czq(n.n76(n.LCg(e,1),n.LCg(t,1))),"float32")),a=(0,n.DZQ)(()=>n.wgE(n.czq(n.n76(n.LCg(e,0),n.LCg(t,1))),"float32")),s=n.WQq(r,a);return n.wgE(n._M9(n.rhj(s,0),n.y4m(r,s),0),"float32")})},categoricalCrossentropy:b,sparseCategoricalCrossentropy:v,mse:d,MSE:c,mae:f,MAE:m,mape:g,MAPE:y,cosine:x};function T(e){if("string"==typeof e&&e in w)return w[e];if("string"!=typeof e&&null!=e)return e;throw new s.Qp(`Unknown metric ${e}`)}function S(e){if(o.vA(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let r of Object.keys(i.SO))if(i.SO[r]===e){t=r;break}if(void 0!==t)return t;for(let r of Object.keys(w))if(w[r]===e){t=r;break}return void 0!==t?t:e.name}}},88334:(e,t,r)=>{"use strict";var n=r(92289),a=r(31246),s=r(26927),i=r(61022),o=r(49881),l=r(33651),u=r(13933),h=r(96253);r(69824);var p=r(12809);class d extends o.Gw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:(0,a.v)("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new l.Qp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t;let r=e instanceof d||e instanceof o.Gw;if(r){if(1!==(t=e).outputs.length)throw new l.Qp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new l.Qp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new l.Qp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=(0,s.p)({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(r)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new l.Qp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new l.Qp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=(0,i.X6)(this.outputs[0])}this.inboundNodes=[],new i.bP({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:h.fD(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if((0,p.U$)(e),0===this.inputs.length||0===this.outputs.length)throw TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new o.Gw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new l.bu("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new l.bu("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new l.bu("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new l.bu("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},a=!1){let s;let i={};if(t instanceof Array){if(!(null!=t[0].className)||"Merge"===t[0].className)throw new l.Qp("Legacy serialization format not supported yet.");s=t}else n.ZSL.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;let o=new e(i);if(!(o instanceof d))throw new l.EH(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let e of s){let t=void 0,r=(0,u.i)(e,t,a);a&&r.setFastWeightInitDuringBuild(!0),o.add(r)}return o}set stopTraining(e){if(null==this.model)throw new l.Qp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new l.Qp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}}d.className="Sequential",n.JFn.registerClass(d)},21396:(e,t,r)=>{"use strict";r.d(t,{K:()=>i});var n=r(92289),a=r(7392),s=r(33651);function i(e){let t={Adagrad:()=>n.BaG.adagrad(.01),Adadelta:()=>n.BaG.adadelta(1,.95,(0,a.Ni)()),Adam:()=>n.BaG.adam(.001,.9,.999,(0,a.Ni)()),Adamax:()=>n.BaG.adamax(.002,.9,.999,(0,a.Ni)(),0),RMSProp:()=>n.BaG.rmsprop(.001,.9,0,(0,a.Ni)()),SGD:()=>n.BaG.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new s.Qp(`Unknown Optimizer ${e}`)}},95825:(e,t,r)=>{"use strict";r.d(t,{Bm:()=>p,R9:()=>u});var n=r(92289),a=r(23279),s=r(96253);class i extends n.JFn.Serializable{}class o extends i{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,n.DZQ)(()=>{let t=(0,n.Ul9)([1]);return this.hasL1&&(t=(0,n.WQq)(t,(0,n.czq)(n.lKK(this.l1,(0,n.tnl)(e))))),this.hasL2&&(t=(0,n.WQq)(t,(0,n.czq)(n.lKK(this.l2,a.Ew(e))))),n.tQQ(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}o.className="L1L2",n.JFn.registerClass(o);let l={l1l2:"L1L2"};function u(e){return(0,s.k4)(e)}function h(e,t={}){return(0,s.Xv)(e,n.JFn.SerializationMap.getMap().classNameMap,t,"regularizer")}function p(e){return null==e?null:"string"==typeof e?h({className:e in l?l[e]:e,config:{}}):e instanceof i?e:h(e)}},4339:(e,t,r)=>{"use strict";function n(e,t,r=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){for(let r of Object.keys(t))if("string"!=typeof r||!e(t[r]))return!1;return!0}if(!Array.isArray(t))return!1;for(let r of t)if(!e(r))return!1;return!0}{let e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw Error("User-defined metadata is expected to be a JSON object, but is not.");if(r){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}r.d(t,{Yl:()=>n})},91678:(e,t,r)=>{"use strict";r.d(t,{J:()=>i,Ol:()=>o,mW:()=>l});var n=r(33651),a=r(96253),s=r(34158);function i(e,t,r){if("number"==typeof e)return(0,a.fD)(e,t);if(e.length!==t)throw new n.Qp(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){let i=e[a];if(!(0,s.Fq)(i))throw new n.Qp(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e}function o(e,t,r,n,a=1){return null==e?e:Math.floor((("same"===r?e:e-(t+(t-1)*(a-1))+1)+n-1)/n)}function l(e,t,r,a){if(null==e)return null;if("valid"===a)e=e*t+(0,s.T9)([r-t,0]);else if("same"===a)e*=t;else throw new n.Qp(`Unsupport padding mode: ${a}.`);return e}},96253:(e,t,r)=>{"use strict";r.d(t,{Am:()=>g,Cb:()=>p,Cd:()=>w,E6:()=>b,HP:()=>x,U9:()=>o,Xv:()=>f,ZF:()=>y,fD:()=>s,k4:()=>c,oo:()=>function e(t,r){Array.isArray(t)?(n.ZSL.assert(t.length>0,()=>`${r} is unexpectedly an empty array.`),t.forEach((t,n)=>e(t,`element ${n+1} of ${r}`))):n.ZSL.assert(Number.isInteger(t)&&t>0,()=>`Expected ${r} to be a positive integer, but got ${function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}(t)}.`)},sg:()=>v,st:()=>u,th:()=>m,uc:()=>h,vA:()=>i,wL:()=>l});var n=r(92289),a=r(33651);function s(e,t){if(Array.isArray(e)){let r=[];for(let n=0;n<t;n++)r=r.concat(e);return r}{let r=Array(t);return r.fill(e),r}}function i(e,t){if(!e)throw new a.pf(t)}function o(e,t){let r=0;for(let n of e)n===t&&r++;return r}function l(e){return 1===e.length?e[0]:e}function u(e){return Array.isArray(e)?e:[e]}function h(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function p(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let d={};function c(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function f(e,t={},r={},n="object",s=!1){if("string"==typeof e){let s;if(e in r)s=r[e];else if(e in d)s=d[e];else if(null==(s=t[e]))throw new a.Qp(`Unknown ${n}: ${e}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{let i,o;if(null==e.className||null==e.config)throw new a.Qp(`${n}: Improper config format: ${JSON.stringify(e)}.
'className' and 'config' must set.`);let l=e.className;if(l in r?[i,o]=r[l]:l in d?[i,o]=d.className:l in t&&([i,o]=t[l]),null==i)throw new a.Qp(`Unknown ${n}: ${l}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let t={};for(let e of Object.keys(d))t[e]=d[e];for(let e of Object.keys(r))t[e]=r[e];e.config.customObjects=t;let n=Object.assign({},d);for(let e of Object.keys(r))d[e]=r[e];!function e(t){if(null!=t&&"object"==typeof t){if(Array.isArray(t))t.forEach(t=>e(t));else for(let r of Object.keys(t)){let n=t[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?e(n):t[r]=n.value)}}}(e.config);let a=o(i,e.config,r,s);return d=Object.assign({},n),a}{let t=Object.assign({},d);for(let e of Object.keys(r))d[e]=r[e];let n=new i(e.config);return d=Object.assign({},t),n}}}function m(e,t){return -1*(e<t?-1:e>t?1:0)}function g(e){if(null==e)return e;let t=[];for(let r of e)-1===t.indexOf(r)&&t.push(r);return t}function y(e){if(null==e)throw new a.Qp(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function b(e,t,r){if(null!=r&&0>e.indexOf(r))throw new a.Qp(`${r} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function x(e,t,r=0,n=1/0){return i(r>=0),i(n>=r),Array.isArray(e)&&e.length>=r&&e.length<=n&&e.every(e=>typeof e===t)}function v(e,t,r){let a,s=null!=r?r():n.ZSL.now();return(...i)=>{let o=null!=r?r():n.ZSL.now();return o-s<t?a:(s=o,a=e(...i))}}function w(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}},85397:(e,t,r)=>{"use strict";r.d(t,{o:()=>a});var n=r(8708);function a(e,t,r,i=console.log){let o;let l=function(e){let t=!0,r=[],n=[];for(let t in e.nodesByDepth)r.push(e.nodesByDepth[t]);for(let e of r){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}n.push(...e)}if(t)for(let r of e.layers){let e=!1;for(let a of r.inboundNodes)if(-1!==n.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),u=["Layer (type)","Input Shape","Output shape","Param #"];if(l?(t=t||90,r=r||[.32,.61,.89,1]):(t=t||115,r=r||[.24,.48,.7,.8,1]),r[r.length-1]<=1&&(r=r.map(e=>Math.floor(t*e))),!l)for(let t in u.push("Receives inputs"),o=[],e.nodesByDepth)o.push(...e.nodesByDepth[t]);i("_".repeat(t)),s(u,r,i),i("=".repeat(t));let h=e.layers;for(let e=0;e<h.length;++e)l?function(e,t,r){let n,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){a="multiple"}try{n=JSON.stringify(e.outputShape)}catch(e){n="multiple"}let i=e.name,o=e.getClassName();s([`${i} (${o})`,a,n,e.countParams().toString()],t,r)}(h[e],r,i):function(e,t,r,n){let a,i;try{i=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){i="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let o=[];for(let t of e.inboundNodes)if(null==r||!(r.length>0)||-1!==r.indexOf(t))for(let e=0;e<t.inboundLayers.length;++e){let r=t.inboundLayers[e].name,n=t.nodeIndices[e],a=t.tensorIndices[e];o.push(`${r}[${n}][${a}]`)}let l=e.name,u=e.getClassName(),h=0===o.length?"":o[0];s([`${l} (${u})`,i,a,e.countParams().toString(),h],t,n);for(let e=1;e<o.length;++e)s(["","","","",o[e]],t,n)}(h[e],r,o,i),i((e===h.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let p=null!=e.collectedTrainableWeights?(0,n.Y)(e.collectedTrainableWeights):(0,n.Y)(e.trainableWeights),d=(0,n.Y)(e.nonTrainableWeights);i(`Total params: ${p+d}`),i(`Trainable params: ${p}`),i(`Non-trainable params: ${d}`),i("_".repeat(t))}function s(e,t,r=console.log){let n="";for(let r=0;r<e.length;++r)r>0&&(n=n.slice(0,n.length-1)+" "),n+=e[r],n=n.slice(0,t[r]),n+=" ".repeat(t[r]-n.length);r(n)}},34158:(e,t,r)=>{"use strict";r.d(t,{Fq:()=>a,T9:()=>o,jk:()=>i,no:()=>s,y1:()=>l});var n=r(33651);function a(e){return e===parseInt(e.toString(),10)}function s(e,t,r){null==t&&(t=0),null==r&&(r=e.length);let n=1;for(let a=t;a<r;++a)n*=e[a];return n}function i(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n<t&&(t=n)}return t}function o(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n>t&&(t=n)}return t}function l(e,t){if(t<e)throw new n.Qp(`end (${t}) < begin (${e}) is forbidden.`);let r=[];for(let n=e;n<t;++n)r.push(n);return r}},69824:(e,t,r)=>{"use strict";r.d(t,{M:()=>function e(t,r){if(null==t)return null;if("string"==typeof t)return n.uc(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let n=[],s=t.length;for(let i=0;i<s;++i){let s=t[i];a(r,i,s)?n.push(s):n.push(e(s,r))}return n}{let r={};for(let a of Object.keys(t)){let s=t[a],i=n.uc(a);("name"===a||"className"===a)&&"string"==typeof s?r[i]=s:r[i]=e(s,a)}return r}},w:()=>function e(t,r){if(null===t)return null;if("string"==typeof t)return n.Cb(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let n=[],s=t.length;for(let i=0;i<s;++i){let s=t[i];a(r,i,s)?n.push(s):n.push(e(s,r))}return n}{let r={};for(let a of Object.keys(t)){let s=t[a];if("name"===a&&"string"==typeof s)r[a]=s;else{let t=n.Cb(a);r[t]=e(s,t)}}return r}}});var n=r(96253);function a(e,t,r){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof r}},12809:(e,t,r)=>{"use strict";r.d(t,{FS:()=>s,TT:()=>a,U$:()=>o,un:()=>i});var n=r(33651);function a(e){return Array.isArray(e)&&Array.isArray(e[0])}function s(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function i(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new n.Qp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function o(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))return e;if(1===e.length)return e[0];throw new n.Qp(`Expected exactly 1 Shape; got ${e.length}`)}},8708:(e,t,r)=>{"use strict";function n(e){let t=0;for(let r of e)0===r.shape.length?t+=1:t+=r.shape.reduce((e,t)=>e*t);return t}r.d(t,{Y:()=>n})},98505:(e,t,r)=>{"use strict";r.d(t,{UM:()=>u,eR:()=>o,ex:()=>l});var n=r(92289),a=r(31246),s=r(42389);r(33651);let i="Variable";class o{constructor(e,t="float32",r=i,o=!0,l=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=(0,a.j)(),r=null==r?i:r,this.originalName=(0,s.BC)(r),this.name=(0,s.Uc)(this.originalName),this.trainable_=o,this.constraint=l,this.val=n.bvq(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function l(e){return e.map(e=>e.read())}function u(e){e.forEach(e=>{e[0].write(e[1])})}},7692:(e,t,r)=>{"use strict";r.d(t,{r:()=>n});let n="4.22.0"},31850:(e,t,r)=>{"use strict";let n;r.d(t,{TaL:()=>E.TaL,Slp:()=>E.Slp,ox:()=>st,Vs9:()=>E.Vs9,OEK:()=>E.OEK,DZQ:()=>E.DZQ});var a,s,i,o,l={};r.r(l),r.d(l,{json:()=>nq});var u={};r.r(u),r.d(u,{json:()=>nX});var h={};r.r(h),r.d(h,{json:()=>nJ});var p={};r.r(p),r.d(p,{json:()=>n0});var d={};r.r(d),r.d(d,{json:()=>n1});var c={};r.r(c),r.d(c,{json:()=>n2});var f={};r.r(f),r.d(f,{json:()=>n3});var m={};r.r(m),r.d(m,{json:()=>n4});var g={};r.r(g),r.d(g,{json:()=>n9});var y={};r.r(y),r.d(y,{json:()=>n5});var b={};r.r(b),r.d(b,{json:()=>n6});var x={};r.r(x),r.d(x,{json:()=>n8});var v={};r.r(v),r.d(v,{json:()=>n7});var w={};r.r(w),r.d(w,{json:()=>ae});var T={};r.r(T),r.d(T,{json:()=>at});var S={};r.r(S),r.d(S,{json:()=>ar});var N={};r.r(N),r.d(N,{json:()=>an});var k={};r.r(k),r.d(k,{json:()=>aa});var I={};r.r(I),r.d(I,{json:()=>as});var C={};r.r(C),r.d(C,{OP_SCOPE_SUFFIX:()=>aS.BTT,abs:()=>aS.tnl,acos:()=>aS.HQu,acosh:()=>aS.FqL,add:()=>aS.WQq,addN:()=>aS.QiD,all:()=>aS.Q7R,any:()=>aS.bzn,argMax:()=>aS.FLi,argMin:()=>aS.XRg,asin:()=>aS.qRo,asinh:()=>aS.yHs,atan:()=>aS.rYl,atan2:()=>aS.FPz,atanh:()=>aS.rfv,avgPool:()=>aS.$jT,avgPool3d:()=>aS.sub,basicLSTMCell:()=>aS.lZX,batchNorm:()=>aS.$v7,batchNorm2d:()=>aS.BFc,batchNorm3d:()=>aS.kSi,batchNorm4d:()=>aS.T5N,batchToSpaceND:()=>aS.GTe,bincount:()=>aS.HbZ,bitwiseAnd:()=>aS.vjT,booleanMaskAsync:()=>aS.ftb,broadcastArgs:()=>aS.ROE,broadcastTo:()=>aS.hOW,buffer:()=>aS.ra8,cast:()=>aS.wgE,ceil:()=>aS.mkO,clipByValue:()=>aS.zQh,clone:()=>aS.o8B,complex:()=>aS.faB,concat:()=>aS.xWs,concat1d:()=>aS.I1m,concat2d:()=>aS.RPU,concat3d:()=>aS.O5O,concat4d:()=>aS.P1l,conv1d:()=>aS.kA9,conv2d:()=>aS.Xtf,conv2dTranspose:()=>aS.wX9,conv3d:()=>aS.IPL,conv3dTranspose:()=>aS.jIJ,cos:()=>aS.gnS,cosh:()=>aS.yIG,cosineWindow:()=>aS._jP,cumprod:()=>aS.Lp0,cumsum:()=>aS.rCv,denseBincount:()=>aS.aOp,depthToSpace:()=>aS.Rj8,depthwiseConv2d:()=>aS.Gl3,diag:()=>aS.smy,dilation2d:()=>aS.X7t,div:()=>aS.y4m,divNoNan:()=>aS.ek5,dot:()=>aS.Omf,dropout:()=>aS.EZY,einsum:()=>aS._3C,elu:()=>aS.Pqc,enclosingPowerOfTwo:()=>aS.FJY,ensureShape:()=>aS.QP2,equal:()=>aS.LCg,erf:()=>aS.Y12,euclideanNorm:()=>aS.p4S,exp:()=>aS.oNF,expandDims:()=>aS.UG6,expm1:()=>aS.IYd,eye:()=>aS.y5U,fft:()=>aS.hVP,fill:()=>aS.GSj,floor:()=>aS.RIf,floorDiv:()=>aS.wh_,fused:()=>aS.cZk,gather:()=>aS.kgh,gatherND:()=>aS.SY9,greater:()=>aS.rhj,greaterEqual:()=>aS.DQN,ifft:()=>aS.KGM,imag:()=>aS.ngS,image:()=>aS.Slp,inTopKAsync:()=>aS.U4u,irfft:()=>aS.ggX,isFinite:()=>aS.MIs,isInf:()=>aS.EN4,isNaN:()=>aS.yrW,leakyRelu:()=>aS.H8d,less:()=>aS.M7h,lessEqual:()=>aS.InN,linalg:()=>aS.mPL,linspace:()=>aS.mT8,localResponseNormalization:()=>aS.Kgs,log:()=>aS.Rm2,log1p:()=>aS.Kko,logSigmoid:()=>aS.nqI,logSoftmax:()=>aS.HPB,logSumExp:()=>aS.VZ,logicalAnd:()=>aS.n76,logicalNot:()=>aS.NSZ,logicalOr:()=>aS.ztW,logicalXor:()=>aS.rxB,losses:()=>aS.YYh,lowerBound:()=>aS.yzS,matMul:()=>aS.NoW,max:()=>aS.T9B,maxPool:()=>aS.jgi,maxPool3d:()=>aS.NYV,maxPoolWithArgmax:()=>aS.RO,maximum:()=>aS.PhQ,mean:()=>aS.i2o,meshgrid:()=>aS.OYQ,min:()=>aS.jkA,minimum:()=>aS.BpO,mirrorPad:()=>aS.FFZ,mod:()=>aS.ziu,moments:()=>aS.Clk,movingAverage:()=>aS.CRk,mul:()=>aS.lKK,multiRNNCell:()=>aS.YDF,multinomial:()=>aS.OjQ,neg:()=>aS.HZy,norm:()=>aS.xbf,notEqual:()=>aS.Ec,oneHot:()=>aS.Mw0,ones:()=>aS.SaS,onesLike:()=>aS.P61,op:()=>aS.op,outerProduct:()=>aS.X4o,pad:()=>aS.eVF,pad1d:()=>aS.BZs,pad2d:()=>aS.grY,pad3d:()=>aS.XHu,pad4d:()=>aS.WLX,pool:()=>aS.dzn,pow:()=>aS.n7C,prelu:()=>aS.NsG,print:()=>aS.yyV,prod:()=>aS._eU,raggedGather:()=>aS.whe,raggedRange:()=>aS.iyU,raggedTensorToTensor:()=>aS.Q0_,rand:()=>aS._9M,randomGamma:()=>aS.pR9,randomNormal:()=>aS.FE$,randomStandardNormal:()=>aS.m0H,randomUniform:()=>aS.YeY,randomUniformInt:()=>aS.HYA,range:()=>aS.y17,real:()=>aS.xav,reciprocal:()=>aS.VOZ,relu:()=>aS.VVh,relu6:()=>aS.j__,reshape:()=>aS.tQQ,reverse:()=>aS.BEg,reverse1d:()=>aS.QD2,reverse2d:()=>aS.LMr,reverse3d:()=>aS.I2l,reverse4d:()=>aS.JYU,rfft:()=>aS.z8$,round:()=>aS.LIG,rsqrt:()=>aS.Z$r,scalar:()=>aS.d_2,scatterND:()=>aS.NFr,searchSorted:()=>aS.sZg,selu:()=>aS.WfX,separableConv2d:()=>aS.wdz,setdiff1dAsync:()=>aS.F12,sigmoid:()=>aS.ry7,sign:()=>aS._SZ,signal:()=>aS.vPA,sin:()=>aS.F8e,sinh:()=>aS.L0l,slice:()=>aS.dik,slice1d:()=>aS.Q$M,slice2d:()=>aS.zAd,slice3d:()=>aS.wck,slice4d:()=>aS.R0O,softmax:()=>aS.Vs9,softplus:()=>aS.lw0,spaceToBatchND:()=>aS.eDJ,sparse:()=>aS.lMo,sparseToDense:()=>aS.Zhr,spectral:()=>aS.lOn,split:()=>aS.lDo,sqrt:()=>aS.RZD,square:()=>aS.EwI,squaredDifference:()=>aS.Pbu,squeeze:()=>aS.r2V,stack:()=>aS.t$z,step:()=>aS.PMw,stridedSlice:()=>aS.Ym9,string:()=>aS.YjP,sub:()=>aS.jbE,sum:()=>aS.czq,tan:()=>aS.Mlm,tanh:()=>aS.ymU,tensor:()=>aS.OEK,tensor1d:()=>aS.tGX,tensor2d:()=>aS.KtR,tensor3d:()=>aS.$_$,tensor4d:()=>aS.g9W,tensor5d:()=>aS.Lpo,tensor6d:()=>aS.yxw,tensorScatterUpdate:()=>aS.NNh,tile:()=>aS.Vsq,topk:()=>aS.rfw,transpose:()=>aS.mgz,truncatedNormal:()=>aS.efE,unique:()=>aS.AmM,unsortedSegmentSum:()=>aS.zAU,unstack:()=>aS.K$i,upperBound:()=>aS.rni,variable:()=>aS.bvq,where:()=>aS._M9,whereAsync:()=>aS.YJN,zeros:()=>aS.Ul9,zerosLike:()=>aS.POl});var E=r(92289),A=r(71699),$=r(16747),R=r(87698),F=r(41518);let _={kernelName:A.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,(0,F.P)((0,$.w)(r,"float32"),-1))}}};var D=r(15575),O=r(69970),L=r(89860),M=r(83574),P=r(17771),z=r(10958);let B={kernelName:A.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,P.E)((0,$.w)(r,"float32")),n=(0,M.R)((0,z.j)((0,L.d)(1),t));return(0,O.H)((0,D.y)(e,n))}}}},W={kernelName:A.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,M.R)((0,z.j)((0,P.E)((0,$.w)(r,"float32")),1));return(0,D.y)(e,t)}}}};var V=r(46012),U=r(97094),G=r(84575);let Z={kernelName:A.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=V.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=e,n=V.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,G.c)(t,n)),(0,U.t)(t,r.shape)},b:()=>{let t=e,r=V.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,G.c)(t,r)),(0,U.t)(t,n.shape)}}}},j={kernelName:A.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{let r={};return t.forEach((t,n)=>{r[n]=()=>e.clone()}),r}};var K=r(12435);let H={kernelName:A.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,K.P)(r)}}},Y={kernelName:A.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,K.P)(r)}}},Q={kernelName:A.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,M.R)((0,z.j)((0,L.d)(1),(0,P.E)((0,$.w)(r,"float32")))))}}};var q=r(23219);let X={kernelName:A.epO,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,M.R)((0,q.W)((0,L.d)(1),(0,P.E)((0,$.w)(r,"float32"))));return(0,D.y)(e,t)}}}},J={kernelName:A.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,V.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,q.W)((0,P.E)(r),(0,P.E)(n)),s=(0,R.l)(e,(0,D.y)(n,t)),i=(0,V.getReductionAxes)(r.shape,a);return i.length>0&&(s=(0,G.c)(s,i)),(0,U.t)(s,r.shape)},b:()=>{let t=(0,q.W)((0,P.E)(r),(0,P.E)(n)),s=(0,O.H)((0,R.l)(e,(0,D.y)(r,t))),i=(0,V.getReductionAxes)(n.shape,a);return i.length>0&&(s=(0,G.c)(s,i)),(0,U.t)(s,n.shape)}}}},ee={kernelName:A.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,q.W)((0,P.E)((0,$.w)(r,"float32")),1))}}},et={kernelName:A.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,z.j)((0,L.d)(1),(0,P.E)((0,$.w)(r,"float32"))))}}};var er=r(54685),en=r(16381),ea=r(23299),es=r(14227),ei=r(59429);let eo=(0,ei.op)({avgPool3dGrad_:function(e,t,r,n,a,s){let i=(0,en.YT)(e,"dy","avgPool3dGrad"),o=(0,en.YT)(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=(0,U.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,U.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ea.vA(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),ea.vA(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),(0,es.s_)("avgPool3dGrad",a,s);let p={dy:l,input:u},d=er.T2.runKernel(A.wwC,p,{filterSize:r,strides:n,pad:a,dimRoundingMode:s});return h?(0,U.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),el={kernelName:A.cS,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=r;return{x:()=>eo(e,n,a,s,i,o)}}},eu=(0,ei.op)({avgPoolGrad_:function(e,t,r,n,a){let s=(0,en.YT)(e,"dy","avgPoolGrad"),i=(0,en.YT)(t,"input","avgPoolGrad");ea.vA(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=(0,U.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,U.t)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ea.vA(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),ea.vA(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let h={dy:l,input:o},p=er.T2.runKernel(A.VCH,h,{filterSize:r,strides:n,pad:a});return u?(0,U.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),eh={kernelName:A.ho8,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i}=r;return{x:()=>eu(e,n,a,s,i)}}};var ep=r(1075);let ed={kernelName:A.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,r)=>{let[n,a]=t,{transposeA:s,transposeB:i}=r;return s||i?!s&&i?{a:()=>(0,ep.N)(e,a,!1,!1),b:()=>(0,ep.N)(e,n,!0,!1)}:s&&!i?{a:()=>(0,ep.N)(a,e,!1,!0),b:()=>(0,ep.N)(n,e,!1,!1)}:{a:()=>(0,ep.N)(a,e,!0,!0),b:()=>(0,ep.N)(e,n,!0,!0)}:{a:()=>(0,ep.N)(e,a,!1,!0),b:()=>(0,ep.N)(n,e,!0,!1)}}};var ec=r(1840);let ef={kernelName:A.Ik2,gradFunc:(e,t,r)=>{let{blockShape:n,crops:a}=r;return{x:()=>(0,ec.e)(e,n,a)}}},em={kernelName:A.LB5,gradFunc:(e,t,r)=>{let n=r.inputShape,a=r.shape,s=Array.from(a);for(let e=n.length-1;e>=0;e--)if(n[e]===a[e])s[e]=1;else if(1!==n[e])throw Error(`broadcastTo(): [${n}] cannot be broadcast to [${a}].`);let i=[];for(let e=0;e<s.length;e++)s[e]>1&&i.push(e);return{x:()=>(0,G.c)(e,i,!0)}}},eg={kernelName:A.KXH,gradFunc:e=>({x:()=>e.clone()})},ey={kernelName:A.QDP,gradFunc:e=>({x:()=>(0,K.P)(e)})};var eb=r(83909),ex=r(47706),ev=r(94157),ew=r(20131);let eT={kernelName:A.vaV,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{clipValueMin:a,clipValueMax:s}=r;return{x:()=>(0,ew._)((0,ev.n)((0,eb.D)(n,a),(0,ex.I)(n,s)),e,(0,K.P)(e))}}},eS={kernelName:A.$zE,inputsToSave:["x"],gradFunc:_.gradFunc};var eN=r(5156);let ek={kernelName:A.$dB,saveAllInputs:!0,gradFunc:(e,t,r)=>{let n=t.map(e=>e.shape),{axis:a}=r,s=(0,ea.Y6)(a,t[0].shape)[0],i=n.map(e=>e[s]);return(0,eN.l)(e,i,s).map(e=>()=>e)}};var eI=r(71990),eC=r(34932);let eE={kernelName:A.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=r;return ea.vA(es.Dh(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>(0,eC.v)(n.shape,e,a,i,o,l),filter:()=>(0,eI.H)(n,e,a.shape,i,o,l)}}};var eA=r(18120);let e$={kernelName:A.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=r;return{dy:()=>(0,eA.X)(e,a,s,i,o,1,l),filter:()=>(0,eI.H)(e,n,a.shape,s,i,o,l)}}},eR=(0,ei.op)({conv3DBackpropFilter_:function(e,t,r,n,a){let s=e;4===e.rank&&(s=(0,U.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,U.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ea.vA(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),ea.vA(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),ea.vA(5===r.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${r}.`),ea.vA(s.shape[4]===r[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${r[3]}.`),ea.vA(i.shape[4]===r[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${r[4]}).`);let o={x:s,dy:i};return er.T2.runKernel(A.iGz,o,{strides:n,pad:a,filterShape:r})}});var eF=r(5459);let e_={kernelName:A.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s}=r;ea.vA((0,es.Dh)(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,o]=t;return{x:()=>(0,eF.c)(i.shape,e,o,a,s),filter:()=>eR(i,e,o.shape,a,s)}}};var eD=r(29630);let eO={kernelName:A.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)((0,O.H)((0,eD.F)((0,$.w)(r,"float32"))),e)}}};var eL=r(45782);let eM={kernelName:A.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)((0,eL.L)((0,$.w)(r,"float32")),e)}}};var eP=r(93370),ez=r(36478),eB=r(60419);let eW={kernelName:A.nY8,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a,exclusive:s,reverse:i}=r;return{x:()=>{let t=(0,eP.Em)([a],n.rank),r=(0,ez.r)(e,a,s,!i);return null!=t&&(r=(0,eB.m)(r,t)),r}}}};var eV=r(89022),eU=r(24556);let eG={kernelName:A.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s,dimRoundingMode:i}=r,o=null==n?[1,1]:n;ea.vA(es.Dh(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return ea.vA(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),ea.vA(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),ea.vA(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),ea.vA(es.G0(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),es.s_("depthwiseConv2d",s,i),{x:()=>(0,eU.l)(l.shape,e,u,a,s,o,i),filter:()=>(0,eV.x)(l,e,u.shape,a,s,o,i)}}},eZ={kernelName:A.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,s={x:n,filter:a,dy:e},i={x:n,filter:a,dy:e};return{x:()=>er.T2.runKernel(A.bP9,s,r),filter:()=>er.T2.runKernel(A.pk0,i,r)}}},ej={kernelName:A.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t,n={dy:e,y:r};return{x:()=>er.T2.runKernel(A.rsH,n)}}};var eK=r(47831);let eH={kernelName:A._s9,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=(0,R.l)((0,eK.o)((0,O.H)((0,P.E)(r))),2/Math.sqrt(Math.PI));return{x:()=>(0,R.l)(e,n)}}},eY={kernelName:A.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,r)}}},eQ={kernelName:A.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{let[r]=t;return{input:()=>(0,U.t)(e,r.shape)}}},eq={kernelName:A.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,(0,eK.o)(r))}}},eX={kernelName:A.ZgB,gradFunc:e=>({x:()=>(0,K.P)(e)})},eJ={kernelName:A.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,V.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,D.y)(e,(0,$.w)(n,"float32")),s=(0,V.getReductionAxes)(r.shape,a);return s.length>0?(0,U.t)((0,G.c)(t,s),r.shape):t},b:()=>{let t=(0,R.l)(e,(0,$.w)(r,"float32")),s=(0,V.getReductionAxes)(n.shape,a);s.length>0&&(t=(0,U.t)((0,G.c)(t,s),n.shape));let i=(0,P.E)(n);return(0,O.H)((0,D.y)(t,(0,$.w)(i,"float32")))}}}};var e0=r(75592),e1=r(18704);let e2={kernelName:A.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,r)=>{let{varianceEpsilon:n}=r,[a,s,i,o]=t,l=null==o?(0,L.d)(1):o,u=(0,V.getReductionAxes)(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=(0,z.j)(a,s),d=(0,R.l)(e,l),c=(0,e0.Z)((0,q.W)(i,(0,L.d)(n))),f=(0,R.l)((0,R.l)((0,R.l)(c,c),c),(0,L.d)(-.5));return{x:()=>1===s.rank?(0,U.t)((0,R.l)((0,R.l)(e,(0,e1.V)((0,U.t)(c,[1,1,1,s.shape[0]]),h)),l),a.shape):(0,U.t)((0,R.l)((0,R.l)(e,c),l),a.shape),mean:()=>{let e=(0,R.l)((0,R.l)(c,(0,L.d)(-1)),d);return 1===s.rank&&(e=(0,G.c)(e,u)),(0,U.t)(e,s.shape)},variance:()=>{let e=(0,R.l)((0,R.l)(f,p),d);return 1===s.rank&&(e=(0,G.c)(e,u)),(0,U.t)(e,s.shape)},scale:()=>{let t=(0,R.l)(p,c),r=(0,R.l)(e,t);return 1===s.rank&&(r=(0,G.c)(r,u)),(0,U.t)(r,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,G.c)(t,u)),(0,U.t)(t,s.shape)}}}};var e3=r(7636),e4=r(40700);let e9={kernelName:A.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,r)=>{let[n,a]=t,{axis:s,batchDims:i}=r,o=(0,ea.Y6)(s,n.shape)[0],l=(e,t,r)=>()=>{let n=e.shape,a=t.size,i=n.slice(0,o),l=i.length,u=n.slice(s,n.length).slice(1),h=u.length,p=e5(0,l),d=e5(l+1,l+1+h),c=e6([i,[a],u]),f=(0,U.t)(r,c),m=(0,U.t)(t,[a]),g=e6([[l],p,d]),y=(0,eB.m)(f,g),b=(0,e4.z)(y,m,e.shape[o]),x=(0,eP.gx)(g);return(0,eB.m)(b,x)};if(1!==i)return{x:l(n,a,e),indices:()=>a};{let t=n.shape[0],r=n.split(t,0);return{x:()=>(0,e3.t)(r.map((t,r)=>l(t,a.slice(r,1),e.slice(r,1))())).reshape(n.shape),indices:()=>a}}}};function e5(e,t){let r=[];for(let n=e;n<t;++n)r.push(n);return r}function e6(e){let t=[];for(let r=0;r<e.length;++r)for(let n=0;n<e[r].length;++n)t.push(e[r][n]);return t}let e8={kernelName:A.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>(0,K.P)(r),b:()=>(0,K.P)(n)}}},e7={kernelName:A.lzr,gradFunc:e=>({x:()=>(0,$.w)(e,"float32")})},te={kernelName:A.gIW,gradFunc:e=>({x:()=>(0,K.P)(e)})},tt={kernelName:A.E3$,gradFunc:e=>({x:()=>(0,K.P)(e)})},tr={kernelName:A.iPs,gradFunc:e=>({x:()=>(0,K.P)(e)})};var tn=r(77214);let ta={kernelName:A.X0$,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{alpha:a}=r,s=(0,tn.r)(n,0);return{x:()=>(0,ew._)(s,e,(0,R.l)(e,a))}}},ts={kernelName:A.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,q.W)(r,1))}}},ti={kernelName:A.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,$.w)(r,"float32"))}}},to={kernelName:A.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r;return{logits:()=>{let t=(0,eK.o)(n);return(0,z.j)(e,(0,R.l)((0,G.c)(e,a,!0),t))}}}},tl=(0,ei.op)({localResponseNormalizationBackprop_:function(e,t,r,n=5,a=1,s=1,i=.5){return er.T2.runKernel(A.ToN,{x:e,y:t,dy:r},{depthRadius:n,bias:a,alpha:s,beta:i})}}),tu={kernelName:A.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;return{x:()=>tl(n,a,e,s,i,o,l)}}};var th=r(31648);function tp(e,t,r,n){return t.rank<r.rank&&(t=(0,U.t)(t,eP.SM(t.shape,n))),e.rank<r.rank&&(e=(0,U.t)(e,eP.SM(e.shape,n))),{x:()=>(0,R.l)(e,(0,$.w)((0,th.L)(r,t),e.dtype))}}let td={kernelName:A.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let{reductionIndices:n}=r,a=t[0],s=t[1],i=ea.Y6(n,a.shape),o=tp(e,s,a,i);return{x:()=>o.x()}}};var tc=r(54513);let tf={kernelName:A.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>(0,R.l)(e,(0,$.w)((0,eb.D)(r,n),"float32")),b:()=>(0,R.l)(e,(0,$.w)((0,tc.M)(r,n),"float32"))}}},tm=(0,ei.op)({maxPool3dGrad_:function(e,t,r,n,a,s,i){let o=(0,en.YT)(e,"dy","maxPool3dGrad"),l=(0,en.YT)(t,"input","maxPool3dGrad"),u=(0,en.YT)(r,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=(0,U.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=(0,U.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=(0,U.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ea.vA(5===h.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),ea.vA(5===p.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),ea.vA(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),(0,es.s_)("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m=er.T2.runKernel(A.cHb,f,{filterSize:n,strides:a,pad:s,dimRoundingMode:i});return c?(0,U.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),tg={kernelName:A.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;return{x:()=>tm(e,n,a,s,i,o,l)}}},ty=(0,ei.op)({maxPoolGrad_:function(e,t,r,n,a,s,i){let o=(0,en.YT)(e,"dy","maxPoolGrad"),l=(0,en.YT)(t,"input","maxPoolGrad"),u=(0,en.YT)(r,"output","maxPoolGrad");return ea.vA(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),ea.vA(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),ea.vA(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),es.s_("maxPoolGrad",s,i),er.T2.runKernel(A.RXX,{dy:o,input:l,output:u},{filterSize:n,strides:a,pad:s,dimRoundingMode:i})}}),tb={kernelName:A.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o}=r;return{x:()=>ty(e,n,a,s,i,o)}}};var tx=r(84513);let tv={kernelName:A.g5A,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=ea.Y6(a,n.shape),i=(0,eP.lb)(n.shape,s)[1],o=ea.Ze(i);return{x:()=>{let t=n.shape.slice();s.forEach(e=>{t[e]=1});let r=(0,U.t)(e,t);return(0,D.y)((0,R.l)(r,(0,tx.S)(n.shape,"float32")),o)}}}},tw={kernelName:A.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let{axis:n}=r,[a,s]=t,i=ea.Y6(n,a.shape),o=tp(e,s,a,i);return{x:()=>o.x()}}},tT={kernelName:A.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>(0,R.l)(e,(0,$.w)((0,ex.I)(r,n),"float32")),b:()=>(0,R.l)(e,(0,$.w)((0,tn.r)(r,n),"float32"))}}};var tS=r(27366);let tN={kernelName:A.x7F,inputsToSave:["x"],gradFunc:(e,t,r)=>{let n=t[0],{paddings:a}=r,s=a.map(e=>e[0]);return{x:()=>(0,tS.d)(e,s,n.shape)}}};var tk=r(88322);let tI={kernelName:A.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,V.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,V.getReductionAxes)(r.shape,a);return t.length>0?(0,U.t)((0,G.c)(e,t),r.shape):e},b:()=>{let t=(0,R.l)(e,(0,O.H)((0,tk.R)((0,D.y)(r,n)))),s=(0,V.getReductionAxes)(n.shape,a);return s.length>0?(0,U.t)((0,G.c)(t,s),n.shape):t}}}},tC={kernelName:A.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,V.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,R.l)(e,(0,$.w)(n,"float32")),s=(0,V.getReductionAxes)(r.shape,a);return s.length>0?(0,U.t)((0,G.c)(t,s),r.shape):t},b:()=>{let t=(0,R.l)(e,(0,$.w)(r,"float32")),s=(0,V.getReductionAxes)(n.shape,a);return s.length>0?(0,U.t)((0,G.c)(t,s),n.shape):t}}}},tE={kernelName:A.l0G,gradFunc:e=>({x:()=>(0,O.H)(e)})};var tA=r(69011);let t$={kernelName:A.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{let r=t[0];return{indices:()=>(0,tA.U)(r.shape,"float32")}}},tR={kernelName:A.LWX,gradFunc:e=>({x:()=>(0,K.P)(e)})};var tF=r(12721);let t_={kernelName:A.mM$,saveAllInputs:!0,gradFunc:(e,t,r)=>{let{axis:n}=r;return(0,tF.K)(e,n).map(e=>()=>e)}},tD={kernelName:A.ODT,inputsToSave:["x"],gradFunc:(e,t,r)=>{let n=t[0],{paddings:a}=r,s=a.map(e=>e[0]);return{x:()=>(0,tS.d)(e,s,n.shape)}}};var tO=r(55958),tL=r(80154);let tM={kernelName:A.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[r,n,a]=t,s=V.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=(0,$.w)(n,"float32"),a=(0,R.l)(e,(0,R.l)(t,(0,tL.n)(r,(0,z.j)(t,(0,L.d)(1))))),i=V.getReductionAxes(r.shape,s);return i.length>0&&(a=(0,G.c)(a,i)),(0,U.t)(a,r.shape)},b:()=>{let t=(0,tn.r)(r,0),i=(0,ew._)(t,(0,tO.R)(r),(0,K.P)(r)),o=(0,R.l)(e,(0,R.l)(a,i)),l=V.getReductionAxes(n.shape,s);return l.length>0&&(o=(0,G.c)(o,l)),(0,U.t)(o,n.shape)}}}},tP={kernelName:A.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,tn.r)(r,0);return{x:()=>(0,ew._)(a,e,(0,R.l)(e,n)),alpha:()=>{let t=(0,ew._)(a,(0,K.P)(e),(0,R.l)(e,r)),s=(0,V.getReductionAxes)(n.shape,e.shape);return s.length>0&&(t=(0,G.c)(t,s)),(0,U.t)(t,n.shape)}}}};var tz=r(73442);let tB={kernelName:A.kdj,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=[];return s=null==a?n.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>(function(e,t,r){let n=e.shape.length,a=n-r.length,s=eP.Em(r,n),i=e;null!=s&&(i=(0,eB.m)(e,s));let o=i.shape.slice(),l=o.splice(n-r.length,r.length).reduce((e,t)=>e*t,1);o.push(l);let u=function(e,t,r){let n=e.shape.slice();n[r]=1;let a=(0,U.t)(t,n),s=(0,tz.L)(e,r,!0,!1),i=(0,tz.L)(e,r,!0,!0),o=(0,R.l)(s,i);return(0,R.l)(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){let e=eP.gx(s);u=(0,eB.m)(u,e)}return u})(n,e,s)}}},tW={kernelName:A.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=V.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=(0,D.y)(e,(0,$.w)(n,"float32")),s=V.getReductionAxes(r.shape,a);return s.length>0?(0,U.t)((0,G.c)(t,s),r.shape):t},b:()=>{let t=(0,R.l)(e,(0,$.w)(r,"float32")),s=V.getReductionAxes(n.shape,a);s.length>0&&(t=(0,U.t)((0,G.c)(t,s),n.shape));let i=(0,P.E)(n);return(0,O.H)((0,D.y)(t,(0,$.w)(i,"float32")))}}}},tV={kernelName:A.huO,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,O.H)((0,P.E)(r)))}}},tU={kernelName:A.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=(0,R.l)((0,ex.I)(r,6),(0,F.P)(r));return{x:()=>(0,R.l)(e,(0,$.w)(n,"float32"))}}},tG={kernelName:A.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,(0,$.w)((0,F.P)(r),"float32"))}}},tZ={kernelName:A.R23,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,U.t)(e,r.shape)}}},tj={kernelName:A.hgw,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>er.T2.runKernel(A.FCQ,a,r)}}},tK={kernelName:A.jOE,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>er.T2.runKernel(A.XQy,a,r)}}};var tH=r(99186);let tY={kernelName:A.D7i,gradFunc:(e,t,r)=>{let{dims:n}=r,a=(0,ea.Y6)(n,e.shape);return{x:()=>(0,tH.B)(e,a)}}},tQ={kernelName:A.hVg,gradFunc:e=>({x:()=>(0,K.P)(e)})},tq={kernelName:A.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,O.H)((0,D.y)(e,(0,R.l)((0,tL.n)(r,1.5),2)))}}};var tX=r(937);let tJ={kernelName:A.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{let[r]=t;return{condition:()=>(0,$.w)((0,K.P)(r),"float32"),t:()=>(0,R.l)(e,(0,$.w)(r,e.dtype)),e:()=>(0,R.l)(e,(0,$.w)((0,tX.N)(r),e.dtype))}}};var t0=r(7412);let t1={kernelName:A.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,tn.r)(r,(0,L.d)(0)),n=(0,L.d)(t0.j),a=(0,L.d)(t0.X),s=(0,R.l)(e,a),i=(0,R.l)((0,R.l)(e,n),(0,eK.o)((0,$.w)(r,"float32")));return(0,ew._)(t,s,i)}}}},t2={kernelName:A.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,(0,R.l)(r,(0,z.j)((0,L.d)(1),r)))}}},t3={kernelName:A.YVe,gradFunc:e=>({x:()=>(0,K.P)(e)})};var t4=r(71623);let t9={kernelName:A.hql,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)((0,t4.g)((0,$.w)(r,"float32")),e)}}};var t5=r(15349);let t6={kernelName:A.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)((0,t5.y)((0,$.w)(r,"float32")),e)}}};var t8=r(85145),t7=r(41763);let re={kernelName:A.JiE,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{begin:a,size:s}=r,i=n.shape,[o,l]=(0,t7.parseSliceParams)(n,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>(0,t8.e)(e,u)}}},rt={kernelName:A.rFG,outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{dim:a}=r,s=(0,R.l)(e,n);return{logits:()=>(0,z.j)(s,(0,R.l)((0,G.c)(s,[a],!0),n))}}};var rr=r(51068);let rn={kernelName:A.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,(0,rr.r)(r))}}};var ra=r(9756);let rs={kernelName:A.A8B,gradFunc:(e,t,r)=>{let{blockShape:n,paddings:a}=r;return{x:()=>(0,ra.G)(e,n,a)}}};var ri=r(77668);let ro={kernelName:A.Blb,gradFunc:(e,t,r)=>{let{axis:n}=r;return{x:()=>(0,ri.x)(e,n)}}},rl={kernelName:A.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,R.l)((0,M.R)((0,$.w)(r,"float32")),2))}}},ru={kernelName:A.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)(e,(0,R.l)((0,$.w)(r,"float32"),2))}}},rh={kernelName:A.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,L.d)(2);return{a:()=>(0,R.l)(e,(0,R.l)(a,(0,z.j)(r,n))),b:()=>(0,R.l)(e,(0,R.l)(a,(0,z.j)(n,r)))}}},rp={kernelName:A.pnw,gradFunc:e=>({x:()=>(0,K.P)(e)})},rd={kernelName:A.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=V.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=e,n=V.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,G.c)(t,n)),(0,U.t)(t,r.shape)},b:()=>{let t=e,r=V.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,G.c)(t,r)),(0,U.t)((0,O.H)(t),n.shape)}}}},rc={kernelName:A.WuN,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,a=n.shape.slice(),{axis:s}=r;(0,ea.Y6)(s,n.shape).forEach(e=>{a[e]=1});let i=(0,U.t)(e,a),o=(0,R.l)(i,(0,tx.S)(n.shape,"float32"));return{x:()=>o}}},rf={kernelName:A.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,D.y)(e,(0,P.E)((0,t4.g)(r)))}}},rm={kernelName:A.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,R.l)((0,z.j)((0,L.d)(1),(0,P.E)(r)),e)}}},rg={kernelName:A.FAs,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{reps:a}=r;return{x:()=>{let t=(0,K.P)(n);if(1===n.rank)for(let r=0;r<a[0];++r)t=(0,q.W)(t,(0,tS.d)(e,[r*n.shape[0]],[n.shape[0]]));else if(2===n.rank)for(let r=0;r<a[0];++r)for(let s=0;s<a[1];++s)t=(0,q.W)(t,(0,tS.d)(e,[r*n.shape[0],s*n.shape[1]],[n.shape[0],n.shape[1]]));else if(3===n.rank)for(let r=0;r<a[0];++r)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,q.W)(t,(0,tS.d)(e,[r*n.shape[0],s*n.shape[1],i*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(4===n.rank)for(let r=0;r<a[0];++r)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,q.W)(t,(0,tS.d)(e,[r*n.shape[0],s*n.shape[1],i*n.shape[2],o*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return t}}}},ry={kernelName:A.wx0,gradFunc:(e,t,r)=>{let{perm:n}=r,a=eP.gx(n);return{x:()=>(0,eB.m)(e,a)}}},rb={kernelName:A.dXR,gradFunc:(e,t,r)=>{let{axis:n}=r;return{value:()=>(0,e3.t)(e,n)}}};var rx=r(34238),rv=r(61675),rw=r(89402);let rT={kernelName:A.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(function(e,t){let r=(0,rw.P)(t,(0,K.P)(t)),n=(0,rv.k)(e,r),a=(0,eb.D)(t,(0,L.d)(0,"int32")),s=n.rank-a.rank;for(let e=0;e<s;++e)a=(0,rx.U)(a,e+1);a=(0,ev.n)(a,(0,tx.S)(n.shape,"bool"));let i=(0,K.P)(n);return(0,ew._)(a,n,i)})(e,r)}}},rS={kernelName:A.xJ3,gradFunc:e=>({x:()=>(0,K.P)(e)})};var rN=r(54338);for(let e of[_,B,W,Z,j,H,Y,Q,X,J,ee,et,el,eh,ed,ef,em,eg,ey,eT,eS,ek,e$,eE,e_,eO,eM,eW,eG,eZ,tW,ej,eH,eY,eQ,eq,eJ,eX,e2,e9,e8,e7,te,tt,tr,ta,ts,ti,to,tu,td,td,tf,tg,tb,tv,tw,tT,tN,tI,tC,tE,t$,tR,t_,tD,tD,tM,tP,tB,tV,tU,tG,tZ,tj,tK,tY,tQ,tq,tJ,t1,t2,t3,t9,t6,re,rt,rn,rs,rs,ro,ro,rl,rh,ru,rp,rd,rc,rf,rm,rg,ry,rb,rT,rS])(0,rN.kr)(e);var rk=r(86080),rI=r(3449);(0,rI.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,rk.t)(this)};var rC=r(44718);(0,rI.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,rC.H)(this)};var rE=r(75814);(0,rI.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,rE.F)(this)},(0,rI.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,q.W)(this,e)};var rA=r(97715);(0,rI.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,rA.Q)(this,e,t)};var r$=r(82746);(0,rI.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,r$.b)(this,e,t)};var rR=r(8397);(0,rI.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,rR.F)(this,e)};var rF=r(38363);(0,rI.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,rF.X)(this,e)},(0,rI.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,ea.vA)(1===this.size,()=>"The array must have only 1 element."),(0,U.t)(this,[])},(0,rI.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,$.w)(this,e)},(0,rI.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,U.t)(this,[this.size])},(0,rI.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,U.t)(this,[e,t])},(0,rI.tp)().prototype.as3D=function(e,t,r){return this.throwIfDisposed(),(0,U.t)(this,[e,t,r])},(0,rI.tp)().prototype.as4D=function(e,t,r,n){return this.throwIfDisposed(),(0,U.t)(this,[e,t,r,n])},(0,rI.tp)().prototype.as5D=function(e,t,r,n,a){return this.throwIfDisposed(),(0,U.t)(this,[e,t,r,n,a])};var r_=r(64187);(0,rI.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,r_.q)(this)};var rD=r(89313);(0,rI.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,rD.y)(this)};var rO=r(31258);(0,rI.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,rO.r)(this)};var rL=r(14308);(0,rI.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,rL.F)(this,e)};var rM=r(4282);(0,rI.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,rM.r)(this)};var rP=r(98283);(0,rI.tp)().prototype.avgPool=function(e,t,r,n){return this.throwIfDisposed(),(0,rP.$)(this,e,t,r,n)},(0,rI.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,ra.G)(this,e,t)};var rz=r(54720);(0,rI.tp)().prototype.batchNorm=function(e,t,r,n,a){return this.throwIfDisposed(),(0,rz.$)(this,e,t,r,n,a)};var rB=r(98313);(0,rI.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,rB.h)(this,e)},(0,rI.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,$.w)(this,e)};var rW=r(50885);(0,rI.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,rW.m)(this)};var rV=r(98084);(0,rI.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,rV.z)(this,e,t)},(0,rI.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof rI.qY&&(e=[e]),(0,ri.x)([this,...e],t)};var rU=r(12975);(0,rI.tp)().prototype.conv1d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,rU.k)(this,e,t,r,n,a,s)};var rG=r(16664);(0,rI.tp)().prototype.conv2dTranspose=function(e,t,r,n,a){return this.throwIfDisposed(),(0,rG.w)(this,e,t,r,n,a)},(0,rI.tp)().prototype.conv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,eA.X)(this,e,t,r,n,a,s)},(0,rI.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,t4.g)(this)},(0,rI.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,t5.y)(this)},(0,rI.tp)().prototype.cumprod=function(e,t,r){return this.throwIfDisposed(),(0,tz.L)(this,e,t,r)},(0,rI.tp)().prototype.cumsum=function(e,t,r){return this.throwIfDisposed(),(0,ez.r)(this,e,t,r)};var rZ=r(87302);(0,rI.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,rZ.R)(this,e,t)};var rj=r(45594);(0,rI.tp)().prototype.depthwiseConv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,rj.G)(this,e,t,r,n,a,s)};var rK=r(73164);(0,rI.tp)().prototype.dilation2d=function(e,t,r,n,a){return this.throwIfDisposed(),(0,rK.X)(this,e,t,r,n,a)};var rH=r(77949);(0,rI.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,rH.e)(this,e)},(0,rI.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,D.y)(this,e)};var rY=r(20355);(0,rI.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,rY.O)(this,e)};var rQ=r(25724);(0,rI.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,rQ.P)(this)},(0,rI.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,th.L)(this,e)};var rq=r(48867);(0,rI.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,rq.Y)(this)};var rX=r(17931);(0,rI.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,rX.p)(this,e,t)},(0,rI.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,eK.o)(this)},(0,rI.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,rx.U)(this,e)};var rJ=r(27121);(0,rI.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,rJ.I)(this)};var r0=r(36255);(0,rI.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,r0.h)(this)},(0,rI.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,U.t)(this,[this.size])},(0,rI.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,tk.R)(this)};var r1=r(75533);(0,rI.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,r1.w)(this,e)},(0,rI.tp)().prototype.gather=function(e,t,r){return this.throwIfDisposed(),(0,rv.k)(this,e,t,r)},(0,rI.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,eb.D)(this,e)},(0,rI.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,tn.r)(this,e)};var r2=r(62556);(0,rI.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,r2.K)(this)};var r3=r(68082);(0,rI.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,r3.g)(this)};var r4=r(74962);(0,rI.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,r4.M)(this)};var r9=r(88204);(0,rI.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,r9.E)(this)};var r5=r(13346);(0,rI.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,r5.y)(this)};var r6=r(36957);(0,rI.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,r6.H)(this,e)},(0,rI.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,ex.I)(this,e)},(0,rI.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,tc.M)(this,e)};var r8=r(19801);(0,rI.tp)().prototype.localResponseNormalization=function(e,t,r,n){return this.throwIfDisposed(),(0,r8.K)(this,e,t,r,n)};var r7=r(71985);(0,rI.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,r7.n)(this)};var ne=r(96211);(0,rI.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ne.H)(this,e)};var nt=r(98326);(0,rI.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,nt.V)(this,e,t)},(0,rI.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,tO.R)(this)};var nr=r(17515);(0,rI.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,nr.K)(this)},(0,rI.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,ev.n)(this,e)},(0,rI.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,tX.N)(this)};var nn=r(56017);(0,rI.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,nn.z)(this,e)};var na=r(86725);(0,rI.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,na.r)(this,e)},(0,rI.tp)().prototype.matMul=function(e,t,r){return this.throwIfDisposed(),(0,ep.N)(this,e,t,r)};var ns=r(87749);(0,rI.tp)().prototype.maxPool=function(e,t,r,n){return this.throwIfDisposed(),(0,ns.j)(this,e,t,r,n)};var ni=r(18394);(0,rI.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,ni.T)(this,e,t)},(0,rI.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,rw.P)(this,e)};var no=r(40061);(0,rI.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,no.i)(this,e,t)};var nl=r(5600);(0,rI.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,nl.j)(this,e,t)};var nu=r(22704);(0,rI.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,nu.B)(this,e)};var nh=r(3181);(0,rI.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,nh.F)(this,e,t)};var np=r(41760);(0,rI.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,np.z)(this,e)},(0,rI.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,R.l)(this,e)},(0,rI.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,O.H)(this)};var nd=r(89874);(0,rI.tp)().prototype.norm=function(e,t,r){return this.throwIfDisposed(),(0,nd.x)(this,e,t,r)};var nc=r(16614);(0,rI.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,nc.E)(this,e)};var nf=r(27576);(0,rI.tp)().prototype.oneHot=function(e,t=1,r=0){return this.throwIfDisposed(),(0,nf.M)(this,e,t,r)};var nm=r(41389);(0,rI.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,nm.P)(this)},(0,rI.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,t8.e)(this,e,t)};var ng=r(6174);(0,rI.tp)().prototype.pool=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,ng.d)(this,e,t,r,n,a,s)},(0,rI.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,tL.n)(this,e)};var ny=r(66174);(0,rI.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,ny.N)(this,e)};var nb=r(3781);(0,rI.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,nb._)(this,e,t)};var nx=r(44268);(0,rI.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,nx.V)(this)};var nv=r(19834);(0,rI.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,nv.V)(this)};var nw=r(16032);(0,rI.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,nw.j)(this)},(0,rI.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,U.t)(this,e.shape)},(0,rI.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,U.t)(this,e)};var nT=r(40063);(0,rI.tp)().prototype.resizeBilinear=function(e,t,r){return this.throwIfDisposed(),(0,nT.v)(this,e,t,r)};var nS=r(38974);(0,rI.tp)().prototype.resizeNearestNeighbor=function(e,t,r){return this.throwIfDisposed(),(0,nS.b)(this,e,t,r)},(0,rI.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,tH.B)(this,e)};var nN=r(34495);(0,rI.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,nN.z)(this)};var nk=r(34820);(0,rI.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,nk.L)(this)},(0,rI.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,e0.Z)(this)};var nI=r(24639);(0,rI.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,nI.W)(this)};var nC=r(27964);(0,rI.tp)().prototype.separableConv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,nC.w)(this,e,t,r,n,a,s)},(0,rI.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,rr.r)(this)};var nE=r(61069);(0,rI.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,nE._)(this)},(0,rI.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,eD.F)(this)},(0,rI.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,eL.L)(this)},(0,rI.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,tS.d)(this,e,t)};var nA=r(76214);(0,rI.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,nA.V)(this,e)};var n$=r(95916);(0,rI.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,n$.l)(this)},(0,rI.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,ec.e)(this,e,t)},(0,rI.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,eN.l)(this,e,t)},(0,rI.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,M.R)(this)},(0,rI.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,P.E)(this)};var nR=r(18425);(0,rI.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,nR.P)(this,e)};var nF=r(64412);(0,rI.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,nF.r)(this,e)},(0,rI.tp)().prototype.stack=function(e,t){this.throwIfDisposed();let r=e instanceof rI.qY?[this,e]:[this,...e];return(0,e3.t)(r,t)},(0,rI.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,F.P)(this,e)};var n_=r(73454);(0,rI.tp)().prototype.stridedSlice=function(e,t,r,n,a,s,i,o){return this.throwIfDisposed(),(0,n_.Y)(this,e,t,r,n,a,s,i,o)},(0,rI.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,z.j)(this,e)},(0,rI.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,G.c)(this,e,t)};var nD=r(11735);(0,rI.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,nD.M)(this)};var nO=r(49445);(0,rI.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,nO.y)(this)},(0,rI.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,e1.V)(this,e)},(0,rI.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,$.w)(this,"bool")},(0,rI.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,$.w)(this,"float32")},(0,rI.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,$.w)(this,"int32")};var nL=r(35916);(0,rI.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,nL.r)(this,e,t)},(0,rI.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,eB.m)(this,e)};var nM=r(48207);(0,rI.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,nM.A)(this,e)},(0,rI.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,e4.z)(this,e,t)},(0,rI.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,tF.K)(this,e)},(0,rI.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ew._)(e,this,t)},(0,rI.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,K.P)(this)};var nP=r(17860);(0,E._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,nP.oR),r(51884),r(22662),r(25798),r(18695),r(23481),r(88334),r(95825);var nz=r(79874),nB=r(49881);r(33651),r(82255),nz.J5;r(61022),r(85295),r(38615),r(98505);var nW=r(7692);(0,E._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(a||(a={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(s||(s={}));let nV={};function nU(e,t,r,n,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return nG(t.inputNames[o],r,n,a);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter((e,t)=>{var r;return(null===(r=s[t])||void 0===r?void 0:r.op)!=="NoOp"}).map(e=>nG(e,r,n,a))}let l=nG(t.inputNames[o],r,n,a),u=l.dataSync();return"number"===s.type?u[0]:E.ZSL.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function nG(e,t,r,n){let[a,s]=nH(e,r);if(null!=n){let e=n.getHashTableHandleByName(a);if(null!=e)return e}let i=r.currentContextIds.find(e=>!!t[nK(a,e)]);return void 0!==i?t[nK(a,i)][s]:void 0}function nZ(e,t,r){return t[nK(e,r.currentContextId)]}function nj(e,t){let[r,n,a]=nH(e,t);return[nK(r,t&&t.currentContextId),n,a]}function nK(e,t){return t?`${e}-${t}`:e}function nH(e,t){let r;if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let r=t.parseNodeNameCache.get(e);if(null!=r)return r}let a=e.split(":");if(1===a.length)r=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function nY(e,t,r){let n=nU("pad",e,t,r);if("explicit"===n){n=nU("explicitPaddings",e,t,r);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=n[2*e],a[e][1]=n[2*e+1];return a}return n}function nQ(e){return e.kept?e:(0,E.o8B)(e)}let nq=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nX=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],n0=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],n1=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],n2=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],n3=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],n4=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],n9=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],n5=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],n6=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],n8=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],n7=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],ae=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],at=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],ar=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],an=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],aa=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],as=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var ai=r(95714).Buffer;class ao{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[l,u,h,p,d,c,f,m,g,y,b,x,v,w,T,S,N,k,I].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let r=e.node,n=[],a=[],s=[],i=r.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(e=>{let t=i[e];t.inputNames.forEach((e,r)=>{let[n,,a]=nj(e),s=i[n];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${n}:${e}`;t.inputNames[r]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(h).length?p.forEach(e=>{let t=i[e];0===t.children.length&&l.push(t)}):Object.keys(h).forEach(e=>{let[t]=nj(e),r=i[t];null!=r&&(r.signatureKey=h[e],l.push(r))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{let[t]=nj(e),r=i[t];r&&(r.signatureKey=u[e],o.push(r))}):o=n;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:n,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){let t=nV[e.op]||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(r.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(r.attrParams=t.attrs.reduce((t,r)=>{let n;let a=r.type;switch(r.type){case"string":void 0===(n=au(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=au(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":void 0===(n=ax(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=ax(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":void 0===(n=ap(e.attr,r.tfName,r.defaultValue||0))&&r.tfDeprecatedName&&(n=ap(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":void 0===(n=ab(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=ab(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":void 0===(n=ah(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=ah(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":void 0===(n=aw(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=aw(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":void 0===(n=ay(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=ay(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":void 0===(n=av(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=av(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":void 0===(n=af(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=af(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":void 0===(n=am(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=am(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":void 0===(n=ac(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=ac(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return t[r.name]={value:n,type:a},t},{})),r}mapFunction(e){let t=e.nodeDef,r=[],n={};null!=t&&(n=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));let a=[],s=[];e.signature.inputArg.forEach(e=>{let[t]=nj(e.name),r={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ad(e.type),type:"dtype"}},children:[]};r.signatureKey=e.name,a.push(r),n[t]=r}),Object.keys(n).forEach(e=>{let t=n[e];t.inputNames.forEach((e,r)=>{let[a,,s]=nj(e),i=n[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let n=`${a}:${e}`;t.inputNames[r]=n}}t.inputs.push(i),i.children.push(t)})});let i=e.ret;e.signature.outputArg.forEach(e=>{let[t,r]=nj(i[e.name]),a=n[t];null!=a&&(a.defaultOutput=r,s.push(a))});let o=this.mapArgsToSignature(e);return{nodes:n,inputs:a,outputs:s,weights:r,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return null!=t&&(r=t[r]),{name:r,dtype:e.type}}}function al(e,t){let r=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=(0,E._K2)().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==ai)return new ai(e,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?r:r.toLowerCase()}function au(e,t,r,n=!1){let a=e[t];return null!=a?al(a.s,n):r}function ah(e,t,r){let n=e[t];return n?n.b:r}function ap(e,t,r){let n=e[t]||{},a=null!=n.i?n.i:null!=n.f?n.f:r;return"number"==typeof a?a:parseInt(a,10)}function ad(e){switch("string"==typeof e&&(e=a[e]),e){case a.DT_FLOAT:case a.DT_HALF:return"float32";case a.DT_INT32:case a.DT_INT64:case a.DT_INT8:case a.DT_UINT8:return"int32";case a.DT_BOOL:return"bool";case a.DT_DOUBLE:return"float32";case a.DT_STRING:return"string";case a.DT_COMPLEX64:case a.DT_COMPLEX128:return"complex64";default:return null}}function ac(e,t,r){let n=e[t];return n&&n.func?n.func.name:r}function af(e,t,r){let n=e[t];return n&&n.type?ad(n.type):r}function am(e,t,r){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(e=>ad(e)):r}function ag(e){return e.unknownRank?void 0:null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function ay(e,t,r){let n=e[t];return n&&n.shape?ag(n.shape):r}function ab(e,t,r){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):r}function ax(e,t,r,n=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>al(e,n)):r}function av(e,t,r){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(e=>ag(e)):r}function aw(e,t,r){let n=e[t];return n&&n.list&&n.list.b?n.list.b:r}class aT{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return nG(e,this.tensorMap,this.context)}getAttr(e,t){let r=this.node.rawAttrs[e];if(null!=r.tensor)return nG(e,this.tensorMap,this.context);if(null!=r.i||null!=r.f)return ap(this.node.rawAttrs,e,t);if(null!=r.s)return au(this.node.rawAttrs,e,t);if(null!=r.b)return ah(this.node.rawAttrs,e,t);if(null!=r.shape)return ay(this.node.rawAttrs,e,t);if(null!=r.type)return af(this.node.rawAttrs,e,t);if(null!=r.list){if(null!=r.list.i||null!=r.list.f)return ab(this.node.rawAttrs,e,t);if(null!=r.list.s)return ax(this.node.rawAttrs,e,t);if(null!=r.list.shape)return av(this.node.rawAttrs,e,t);if(null!=r.list.b)return aw(this.node.rawAttrs,e,t);if(null!=r.list.type)return am(this.node.rawAttrs,e,t)}return t}}var aS=r(64098);let aN=(e,t,r,n=C)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(nU("a",e,t,r),nU("b",e,t,r))];case"AddN":return[n.addN(nU("tensors",e,t,r))];case"FloorMod":case"Mod":return[n.mod(nU("a",e,t,r),nU("b",e,t,r))];case"Mul":return[n.mul(nU("a",e,t,r),nU("b",e,t,r))];case"RealDiv":case"Div":return[n.div(nU("a",e,t,r),nU("b",e,t,r))];case"DivNoNan":return[n.divNoNan(nU("a",e,t,r),nU("b",e,t,r))];case"FloorDiv":return[n.floorDiv(nU("a",e,t,r),nU("b",e,t,r))];case"Sub":return[n.sub(nU("a",e,t,r),nU("b",e,t,r))];case"Minimum":return[n.minimum(nU("a",e,t,r),nU("b",e,t,r))];case"Maximum":return[n.maximum(nU("a",e,t,r),nU("b",e,t,r))];case"Pow":return[n.pow(nU("a",e,t,r),nU("b",e,t,r))];case"SquaredDifference":return[n.squaredDifference(nU("a",e,t,r),nU("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ak=(e,t,r,n=C)=>{switch(e.op){case"Abs":case"ComplexAbs":return[n.abs(nU("x",e,t,r))];case"Acos":return[n.acos(nU("x",e,t,r))];case"Acosh":return[n.acosh(nU("x",e,t,r))];case"Asin":return[n.asin(nU("x",e,t,r))];case"Asinh":return[n.asinh(nU("x",e,t,r))];case"Atan":return[n.atan(nU("x",e,t,r))];case"Atan2":return[n.atan2(nU("x",e,t,r),nU("y",e,t,r))];case"Atanh":return[n.atanh(nU("x",e,t,r))];case"Ceil":return[n.ceil(nU("x",e,t,r))];case"Complex":return[n.complex(nU("real",e,t,r),nU("imag",e,t,r))];case"Cos":return[n.cos(nU("x",e,t,r))];case"Cosh":return[n.cosh(nU("x",e,t,r))];case"Elu":return[n.elu(nU("x",e,t,r))];case"Erf":return[n.erf(nU("x",e,t,r))];case"Exp":return[n.exp(nU("x",e,t,r))];case"Expm1":return[n.expm1(nU("x",e,t,r))];case"Floor":return[n.floor(nU("x",e,t,r))];case"Log":return[n.log(nU("x",e,t,r))];case"Log1p":return[n.log1p(nU("x",e,t,r))];case"Imag":return[n.imag(nU("x",e,t,r))];case"Neg":return[n.neg(nU("x",e,t,r))];case"Reciprocal":return[n.reciprocal(nU("x",e,t,r))];case"Real":return[n.real(nU("x",e,t,r))];case"Relu":return[n.relu(nU("x",e,t,r))];case"Round":return[n.round(nU("x",e,t,r))];case"Selu":return[n.selu(nU("x",e,t,r))];case"Sigmoid":return[n.sigmoid(nU("x",e,t,r))];case"Sin":return[n.sin(nU("x",e,t,r))];case"Sign":return[n.sign(nU("x",e,t,r))];case"Sinh":return[n.sinh(nU("x",e,t,r))];case"Softplus":return[n.softplus(nU("x",e,t,r))];case"Sqrt":return[n.sqrt(nU("x",e,t,r))];case"Square":return[n.square(nU("x",e,t,r))];case"Tanh":return[n.tanh(nU("x",e,t,r))];case"Tan":return[n.tan(nU("x",e,t,r))];case"ClipByValue":return[n.clipByValue(nU("x",e,t,r),nU("clipValueMin",e,t,r),nU("clipValueMax",e,t,r))];case"Relu6":return[n.relu6(nU("x",e,t,r))];case"Rsqrt":return[n.rsqrt(nG(e.inputNames[0],t,r))];case"LeakyRelu":return[n.leakyRelu(nU("x",e,t,r),nU("alpha",e,t,r))];case"Prelu":return[n.prelu(nU("x",e,t,r),nU("alpha",e,t,r))];case"IsNan":return[n.isNaN(nG(e.inputNames[0],t,r))];case"IsInf":return[n.isInf(nG(e.inputNames[0],t,r))];case"IsFinite":return[n.isFinite(nG(e.inputNames[0],t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function aI(e,t,r=""){if("number"!=typeof e&&"number"!=typeof t){E.ZSL.assert(e.length===t.length,()=>r+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let a=e[n],s=t[n];E.ZSL.assert(a<0||s<0||a===s,()=>r+` Shapes ${e} and ${t} must match`)}}}function aC(e){return!("number"==typeof e||e.some(e=>e<0))}function aE(e,t,r){let n=aA(e,r),a=!aC(n);if(a&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(a&&t.forEach(e=>{n=aA(e.shape,n)}),!aC(n))throw Error(`Non-fully-defined elementShape: ${n}`);return n}function aA(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let r=[];for(let n=0;n<e.length;++n){let a=e[n],s=t[n];if(a>=0&&s>=0&&a!==s)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);r[n]=a>=0?a:s}return r}class a${constructor(e,t,r,n,a,s,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=n,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,E.d_2)(0),(0,E.aCs)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),aI(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,(0,E.aCs)(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,r)=>this.write(e,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,E.OEK)([],[0].concat(this.elementShape));let r=this.readMany(e);return aI(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),(0,E.t$z)(r,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,E.OEK)([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let r=this.readMany(t);return aI(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),(0,E.xWs)(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,(0,E.K$i)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0,n=e.map(e=>r+=e);if(r!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===r?0:t.size/r,s=[];(0,E.DZQ)(()=>{t=(0,E.tQQ)(t,[1,r,a]);for(let r=0;r<e.length;++r){let i=[0,0===r?0:n[r-1],0],o=[1,e[r],a];s[r]=(0,E.tQQ)((0,E.dik)(t,i,o),this.elementShape)}return s});let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class aR{get id(){return this.idTensor.id}constructor(e,t,r,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,null!=e&&e.forEach(e=>{if(r!==e.dtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${e.dtype}`);aI(t,e.shape,"TensorList shape mismatch: "),(0,E.aCs)(e)}),this.idTensor=(0,E.d_2)(0),this.maxNumElements=n,(0,E.aCs)(this.idTensor)}copy(){return new aR([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==r&&this.tensors.length!==r)throw Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);aI(e,this.elementShape,"TensorList shape mismatch: ");let n=aE(this.elementShape,this.tensors,e);return(0,E.DZQ)(()=>{let e=this.tensors.map(e=>(0,E.tQQ)(e,n));return(0,E.t$z)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let r=aE(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,aI(n.shape,e,"TensorList shape mismatch: "),(0,E.tQQ)(n,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(aI(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");(0,E.aCs)(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new aR([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);aI(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=aE(this.elementShape,this.tensors,t);return(0,E.tQQ)(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);aI(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,E.aCs)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);aI(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=aE(this.elementShape,this.tensors,r);return 0===e.length?(0,E.OEK)([],[0].concat(n)):(0,E.DZQ)(()=>{let t=e.map(e=>(0,E.tQQ)(this.tensors[e],n));return(0,E.t$z)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);aI(this.elementShape,t,"TensorList shape mismatch: ");let r=aE(this.elementShape,this.tensors,t);return 0===this.size()?(0,E.OEK)([],[0].concat(r)):(0,E.DZQ)(()=>{let e=this.tensors.map(e=>(0,E.tQQ)(e,r));return(0,E.xWs)(e,0)})}}let aF=async(e,t,r)=>{switch(e.op){case"If":case"StatelessIf":{let n=nU("thenBranch",e,t,r),a=nU("elseBranch",e,t,r),s=nU("cond",e,t,r),i=nU("args",e,t,r);if((await s.data())[0])return r.functionMap[n].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap);return r.functionMap[a].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{let n=nU("body",e,t,r),a=nU("cond",e,t,r),s=nU("args",e,t,r),i=await r.functionMap[a].executeFunctionAsync(s,r.tensorArrayMap,r.tensorListMap),o=s.map(e=>e.id),l=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let u=s;for(;l[0];){let e=u,t=(u=await r.functionMap[n].executeFunctionAsync(u,r.tensorArrayMap,r.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let s=await r.functionMap[a].executeFunctionAsync(u,r.tensorArrayMap,r.tensorListMap);l=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return u}case"LoopCond":return[nQ(nU("pred",e,t,r))];case"Switch":{let n=nU("pred",e,t,r),a=nU("data",e,t,r);return a.kept||(a=nQ(a)),(await n.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let n=e.inputNames.find(e=>void 0!==nG(e,t,r));if(n)return[nQ(nG(n,t,r))];return}case"Enter":{let n=nU("frameName",e,t,r),a=nU("tensor",e,t,r);return r.enterFrame(n),[nQ(a)]}case"Exit":{let n=nU("tensor",e,t,r);return r.exitFrame(),[nQ(n)]}case"NextIteration":{let n=nU("tensor",e,t,r);return r.nextIteration(),[nQ(n)]}case"TensorArrayV3":{let n=nU("size",e,t,r),a=nU("dtype",e,t,r),s=nU("elementShape",e,t,r),i=nU("dynamicSize",e,t,r),o=nU("clearAfterRead",e,t,r),l=nU("identicalElementShapes",e,t,r),u=new a$(nU("name",e,t,r),a,n,s,l,i,o);return r.addTensorArray(u),[u.idTensor,(0,E.d_2)(1)]}case"TensorArrayWriteV3":{let n=nU("tensorArrayId",e,t,r),a=nU("index",e,t,r),s=nU("tensor",e,t,r),i=r.getTensorArray(n.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let n=nU("tensorArrayId",e,t,r),a=nU("index",e,t,r);return[r.getTensorArray(n.id).read(a)]}case"TensorArrayGatherV3":{let n=nU("tensorArrayId",e,t,r),a=nU("indices",e,t,r),s=nU("dtype",e,t,r);return[r.getTensorArray(n.id).gather(a,s)]}case"TensorArrayScatterV3":{let n=nU("tensorArrayId",e,t,r),a=nU("indices",e,t,r),s=nU("tensor",e,t,r),i=r.getTensorArray(n.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=nU("tensorArrayId",e,t,r),a=r.getTensorArray(n.id),s=nU("dtype",e,t,r);return[a.concat(s)]}case"TensorArraySplitV3":{let n=nU("tensorArrayId",e,t,r),a=nU("tensor",e,t,r),s=nU("lengths",e,t,r),i=r.getTensorArray(n.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let n=nU("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return[(0,E.d_2)(a.size(),"int32")]}case"TensorArrayCloseV3":{let n=nU("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let n=nU("tensorListId",e,t,r),a=nU("index",e,t,r),s=nU("tensor",e,t,r),i=r.getTensorList(n.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let n=nU("tensorListId",e,t,r),a=nU("index",e,t,r),s=nU("elementShape",e,t,r),i=nU("elementDType",e,t,r);return[r.getTensorList(n.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=nU("indices",e,t,r),a=function(e,t,r,n){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=n&&-1!==n&&a>=n)throw Error(`Max index must be < array size (${a}  vs. ${n})`);let s=new aR([],r,e.dtype,n),i=(0,E.K$i)(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(nU("tensor",e,t,r),n,nU("elementShape",e,t,r),nU("numElements",e,t,r));return r.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=nU("elementShape",e,t,r),a=nU("elementDType",e,t,r),s=nU("TensorListReserve"===e.op?"numElements":"maxNumElements",e,t,r),i=new aR([],n,a,"TensorListReserve"===e.op?-1:s);return r.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=nU("tensorListId",e,t,r),a=nU("indices",e,t,r),s=nU("elementShape",e,t,r),i=nU("elementDType",e,t,r);return[r.getTensorList(n.id).gather(a,i,s)]}case"TensorListStack":{let n=nU("tensorListId",e,t,r),a=nU("elementShape",e,t,r),s=nU("elementDType",e,t,r),i=nU("numElements",e,t,r);return[r.getTensorList(n.id).stack(a,s,i)]}case"TensorListFromTensor":{let n=function(e,t,r){let n=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==r)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${r}`);return aI(e.shape.slice(1),t,"TensorList shape mismatch: "),new aR((0,E.K$i)(e),t,n)}(nU("tensor",e,t,r),nU("elementShape",e,t,r),nU("elementDType",e,t,r));return r.addTensorList(n),[n.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=nU("tensorListId",e,t,r),a=r.getTensorList(n.id),s=nU("dtype",e,t,r),i=nU("elementShape",e,t,r);return[a.concat(s,i)]}case"TensorListPushBack":{let n=nU("tensorListId",e,t,r),a=nU("tensor",e,t,r),s=r.getTensorList(n.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let n=nU("tensorListId",e,t,r),a=nU("elementShape",e,t,r),s=nU("elementDType",e,t,r);return[r.getTensorList(n.id).popBack(a,s)]}case"TensorListSplit":{let n=nU("tensor",e,t,r),a=nU("elementShape",e,t,r),s=function(e,t,r){let n=0,a=t.map(e=>n+=e);if(n!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);let s=aA(e.shape.slice(1),r),i=0===n?0:e.size/n,o=(0,E.DZQ)(()=>{let r=[];e=(0,E.tQQ)(e,[1,n,i]);for(let n=0;n<t.length;++n){let o=[0,0===n?0:a[n-1],0],l=[1,t[n],i];r[n]=(0,E.tQQ)((0,E.dik)(e,o,l),s)}return e.dispose(),r}),l=new aR([],r,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(n,nU("lengths",e,t,r),a);return r.addTensorList(s),[s.idTensor]}case"TensorListLength":{let n=nU("tensorListId",e,t,r),a=r.getTensorList(n.id);return[(0,E.d_2)(a.size(),"int32")]}case"TensorListResize":{let n=nU("tensorListId",e,t,r),a=nU("size",e,t,r),s=r.getTensorList(n.id).resize(a);return r.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function a_(e,t,r){let[n,a]=nU("fusedOps",e,t,r),s="biasadd"===n,i="prelu"===a,o=nU("numArgs",e,t,r);if(s){if(i&&2!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===n)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=nU("strides",e,t,r),u=nY(e,t,r),h=nU("dataFormat",e,t,r).toUpperCase(),p=nU("dilations",e,t,r),[d,c]=nU("args",e,t,r);return s||(c=d,d=void 0),{stride:l,pad:u,dataFormat:h,dilations:p,biasArg:d,preluArg:c,activationFunc:a,leakyreluAlpha:nU("leakyreluAlpha",e,t,r)}}let aD=(e,t,r,n=C)=>{switch(e.op){case"Conv1D":{let a=nU("stride",e,t,r),s=nU("pad",e,t,r),i=nU("dataFormat",e,t,r).toUpperCase(),o=nU("dilation",e,t,r);return[n.conv1d(nU("x",e,t,r),nU("filter",e,t,r),a,s,i,o)]}case"Conv2D":{let a=nU("strides",e,t,r),s=nY(e,t,r),i=nU("dataFormat",e,t,r).toUpperCase(),o=nU("dilations",e,t,r);return[n.conv2d(nU("x",e,t,r),nU("filter",e,t,r),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=a_(e,t,r);return[n.fused.conv2d({x:nU("x",e,t,r),filter:nU("filter",e,t,r),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=a_(e,t,r);return[n.fused.depthwiseConv2d({x:nU("x",e,t,r),filter:nU("filter",e,t,r),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=nU("outputShape",e,t,r),s=nU("strides",e,t,r),i=nY(e,t,r);return[n.conv2dTranspose(nU("x",e,t,r),nU("filter",e,t,r),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=nU("strides",e,t,r),s=nY(e,t,r),i=nU("dilations",e,t,r),o=nU("dataFormat",e,t,r).toUpperCase();return[n.depthwiseConv2d(nU("input",e,t,r),nU("filter",e,t,r),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("dataFormat",e,t,r).toUpperCase(),o=nU("dilations",e,t,r);return[n.conv3d(nU("x",e,t,r),nU("filter",e,t,r),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("kernelSize",e,t,r);return[n.avgPool(nU("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("kernelSize",e,t,r);return[n.maxPool(nU("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("kernelSize",e,t,r),o=nU("includeBatchInIndex",e,t,r),{result:l,indexes:u}=n.maxPoolWithArgmax(nU("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("kernelSize",e,t,r);return[n.avgPool3d(nU("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("kernelSize",e,t,r);return[n.maxPool3d(nU("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=nU("strides",e,t,r),s=nU("pad",e,t,r),i=nU("dilations",e,t,r),o=a[1],l=a[2],u=i[1],h=i[2];return[n.dilation2d(nU("x",e,t,r),nU("filter",e,t,r),[o,l],s,[u,h],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aO=(e,t,r,n=C)=>{switch(e.op){case"Fill":{let a=nU("shape",e,t,r),s=nU("dtype",e,t,r),i=nU("value",e,t,r);return[n.fill(a,i,s)]}case"LinSpace":{let a=nU("start",e,t,r),s=nU("stop",e,t,r),i=nU("num",e,t,r);return[n.linspace(a,s,i)]}case"Multinomial":{let a=nU("logits",e,t,r),s=nU("numSamples",e,t,r),i=nU("seed",e,t,r);return[n.multinomial(a,s,i)]}case"OneHot":{let a=nU("indices",e,t,r),s=nU("depth",e,t,r),i=nU("onValue",e,t,r),o=nU("offValue",e,t,r),l=nU("dtype",e,t,r);return[n.oneHot(a,s,i,o,l)]}case"Ones":return[n.ones(nU("shape",e,t,r),nU("dtype",e,t,r))];case"OnesLike":return[n.onesLike(nU("x",e,t,r))];case"RandomStandardNormal":return[n.randomStandardNormal(nU("shape",e,t,r),nU("dtype",e,t,r),nU("seed",e,t,r))];case"RandomUniform":return[n.randomUniform(nU("shape",e,t,r),nU("minval",e,t,r),nU("maxval",e,t,r),nU("dtype",e,t,r))];case"RandomUniformInt":return[n.randomUniformInt(nU("shape",e,t,r),nU("minval",e,t,r),nU("maxval",e,t,r),nU("seed",e,t,r))];case"Range":{let a=nU("start",e,t,r),s=nU("stop",e,t,r),i=nU("step",e,t,r);return[n.range(a,s,i,nU("dtype",e,t,r))]}case"TruncatedNormal":{let a=nU("shape",e,t,r),s=nU("mean",e,t,r),i=nU("stdDev",e,t,r),o=nU("seed",e,t,r);return[n.truncatedNormal(a,s,i,nU("dtype",e,t,r),o)]}case"Zeros":return[n.zeros(nU("shape",e,t,r),nU("dtype",e,t,r))];case"ZerosLike":return[n.zerosLike(nU("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function aL(e,t,r){let n=nU("boxes",e,t,r),a=nU("scores",e,t,r),s=nU("maxOutputSize",e,t,r);return{boxes:n,scores:a,maxOutputSize:s,iouThreshold:nU("iouThreshold",e,t,r),scoreThreshold:nU("scoreThreshold",e,t,r),softNmsSigma:nU("softNmsSigma",e,t,r)}}let aM=async(e,t,r,n,a=C)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=aL(e,t,r),h=await a.image.nonMaxSuppressionWithScoreAsync(n,s,i,o,l,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=aL(e,t,r),u=nU("padToMaxOutputSize",e,t,r),h=await a.image.nonMaxSuppressionPaddedAsync(n,s,i,o,l,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=aL(e,t,r);return[await a.image.nonMaxSuppressionAsync(n,s,i,o,l)]}case"Where":{let n=a.cast(nU("condition",e,t,r),"bool"),s=[await a.whereAsync(n)];return n.dispose(),s}case"ListDiff":return a.setdiff1dAsync(nU("x",e,t,r),nU("y",e,t,r));default:throw TypeError(`Node type ${e.op} is not implemented`)}},aP=(e,t,r,n=C)=>{switch(e.op){case"LowerBound":{let a=nU("sortedSequence",e,t,r),s=nU("values",e,t,r);return[n.lowerBound(a,s)]}case"TopKV2":{let a=nU("x",e,t,r),s=nU("k",e,t,r),i=nU("sorted",e,t,r),o=n.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=nU("sortedSequence",e,t,r),s=nU("values",e,t,r);return[n.upperBound(a,s)]}case"Unique":{let a=nU("x",e,t,r),s=n.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=nU("x",e,t,r),s=nU("axis",e,t,r),i=n.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},az=(e,t,r,n=C)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=nU("default",e,t,r);return[nG(e.name,t,r)||a];case"Placeholder":return[nG(e.name,t,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[nQ(nU("x",e,t,r))];case"IdentityN":return nU("x",e,t,r).map(e=>nQ(e));case"Shape":return[n.tensor1d(nU("x",e,t,r).shape,"int32")];case"ShapeN":return nU("x",e,t,r).map(e=>n.tensor1d(e.shape));case"Size":return[n.scalar(nU("x",e,t,r).size,"int32")];case"Rank":return[n.scalar(nU("x",e,t,r).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let s=nU("x",e,t,r),i=nU("data",e,t,r),o=nU("message",e,t,r),l=nU("summarize",e,t,r);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class aB{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,E.d_2)(0),this.tensorMap=new Map,(0,E.aCs)(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return L.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),(0,E.DZQ)(()=>{let e=(0,E.K$i)(t),n=r.length,a=e.length;E.ZSL.assert(n===a,()=>`The number of elements doesn't match, keys has ${n} elements, the values has ${a} elements.`);for(let t=0;t<n;t++){let n=r[t],a=e[t];(0,E.aCs)(a),this.tensorMap.set(n,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return(0,E.DZQ)(()=>{let e=[];for(let n=0;n<r.length;n++){let a=r[n],s=this.findWithDefault(a,t);e.push(s)}return(0,E.t$z)(e)})}findWithDefault(e,t){let r=this.tensorMap.get(e);return null!=r?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}let aW=async(e,t,r,n)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=n.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=new aB(nU("keyDType",e,t,r),nU("valueDType",e,t,r));return n.addHashTable(e.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=nU("tableHandle",e,t,r,n),s=nU("keys",e,t,r),i=nU("values",e,t,r),o=n.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=nU("tableHandle",e,t,r,n),s=nU("keys",e,t,r),i=nU("defaultValue",e,t,r),o=n.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=nU("tableHandle",e,t,r,n);return[n.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aV=(e,t,r,n=C)=>{switch(e.op){case"ResizeBilinear":{let a=nU("images",e,t,r),s=nU("size",e,t,r),i=nU("alignCorners",e,t,r),o=nU("halfPixelCenters",e,t,r);return[n.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=nU("images",e,t,r),s=nU("size",e,t,r),i=nU("alignCorners",e,t,r),o=nU("halfPixelCenters",e,t,r);return[n.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=nU("image",e,t,r),s=nU("boxes",e,t,r),i=nU("boxInd",e,t,r),o=nU("cropSize",e,t,r),l=nU("method",e,t,r),u=nU("extrapolationValue",e,t,r);return[n.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=nU("images",e,t,r),s=nU("transforms",e,t,r),i=nU("outputShape",e,t,r),o=nU("fillValue",e,t,r),l=nU("interpolation",e,t,r),u=nU("fillMode",e,t,r);return[n.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aU=(e,t,r,n=C)=>{switch(e.op){case"Equal":return[n.equal(nU("a",e,t,r),nU("b",e,t,r))];case"NotEqual":return[n.notEqual(nU("a",e,t,r),nU("b",e,t,r))];case"Greater":return[n.greater(nU("a",e,t,r),nU("b",e,t,r))];case"GreaterEqual":return[n.greaterEqual(nU("a",e,t,r),nU("b",e,t,r))];case"Less":return[n.less(nU("a",e,t,r),nU("b",e,t,r))];case"LessEqual":return[n.lessEqual(nU("a",e,t,r),nU("b",e,t,r))];case"LogicalAnd":return[n.logicalAnd(nU("a",e,t,r),nU("b",e,t,r))];case"LogicalNot":return[n.logicalNot(nU("a",e,t,r))];case"LogicalOr":return[n.logicalOr(nU("a",e,t,r),nU("b",e,t,r))];case"Select":case"SelectV2":return[n.where(nU("condition",e,t,r),nU("a",e,t,r),nU("b",e,t,r))];case"BitwiseAnd":return[n.bitwiseAnd(nU("a",e,t,r),nU("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aG=(e,t,r,n=C)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(nU("a",e,t,r),nU("b",e,t,r),nU("transposeA",e,t,r),nU("transposeB",e,t,r))];case"Einsum":return[n.einsum(nU("equation",e,t,r),...nU("tensors",e,t,r))];case"Transpose":return[n.transpose(nU("x",e,t,r),nU("perm",e,t,r))];case"_FusedMatMul":let[a,s]=nU("fusedOps",e,t,r),i="prelu"===s,o=nU("numArgs",e,t,r),l=nU("leakyreluAlpha",e,t,r);if("biasadd"===a){if(i&&2!==o)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=nU("args",e,t,r);return[n.fused.matMul({a:nU("a",e,t,r),b:nU("b",e,t,r),transposeA:nU("transposeA",e,t,r),transposeB:nU("transposeB",e,t,r),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[n.linalg.bandPart(nU("a",e,t,r),nU("numLower",e,t,r),nU("numUpper",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aZ=(e,t,r,n=C)=>{switch(e.op){case"EuclideanNorm":return[n.euclideanNorm(nU("x",e,t,r),nU("axis",e,t,r),nU("keepDims",e,t,r))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[n.batchNorm(nU("x",e,t,r),nU("mean",e,t,r),nU("variance",e,t,r),nU("offset",e,t,r),nU("scale",e,t,r),nU("epsilon",e,t,r))];case"LRN":return[n.localResponseNormalization(nU("x",e,t,r),nU("radius",e,t,r),nU("bias",e,t,r),nU("alpha",e,t,r),nU("beta",e,t,r))];case"Softmax":return[n.softmax(nU("x",e,t,r))];case"LogSoftmax":return[n.logSoftmax(nU("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aj=(e,t,r,n=C)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=n.raggedGather(nU("paramsNestedSplits",e,t,r),nU("paramsDenseValues",e,t,r),nU("indices",e,t,r),nU("outputRaggedRank",e,t,r));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=n.raggedRange(nU("starts",e,t,r),nU("limits",e,t,r),nU("splits",e,t,r));return[a,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(nU("shape",e,t,r),nU("values",e,t,r),nU("defaultValue",e,t,r),nU("rowPartitionTensors",e,t,r),nU("rowPartitionTypes",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aK=(e,t,r,n=C)=>{switch(e.op){case"Max":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.max(nU("x",e,t,r),a,s)]}case"Mean":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.mean(nU("x",e,t,r),a,s)]}case"Min":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.min(nU("x",e,t,r),a,s)]}case"Sum":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.sum(nU("x",e,t,r),a,s)]}case"All":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.all(nU("x",e,t,r),a,s)]}case"Any":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.any(nU("x",e,t,r),a,s)]}case"ArgMax":{let a=nU("axis",e,t,r);return[n.argMax(nU("x",e,t,r),a)]}case"ArgMin":{let a=nU("axis",e,t,r);return[n.argMin(nU("x",e,t,r),a)]}case"Prod":{let a=nU("axis",e,t,r),s=nU("keepDims",e,t,r);return[n.prod(nU("x",e,t,r),a,s)]}case"Cumprod":{let a=nU("axis",e,t,r),s=nU("exclusive",e,t,r),i=nU("reverse",e,t,r);return[n.cumprod(nU("x",e,t,r),a,s,i)]}case"Cumsum":{let a=nU("axis",e,t,r),s=nU("exclusive",e,t,r),i=nU("reverse",e,t,r);return[n.cumsum(nU("x",e,t,r),a,s,i)]}case"Bincount":let a=nU("x",e,t,r),s=nU("weights",e,t,r),i=nU("size",e,t,r);return[n.bincount(a,s,i)];case"DenseBincount":{let a=nU("x",e,t,r),s=nU("weights",e,t,r),i=nU("size",e,t,r),o=nU("binaryOutput",e,t,r);return[n.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aH=(e,t,r,n=C)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=nU("n",e,t,r),s=nU("axis",e,t,r),i=nU("tensors",e,t,r);return i=i.slice(0,a),[n.concat(i,s)]}case"Gather":{let a=nU("x",e,t,r),s=nU("indices",e,t,r);return[n.gather(a,n.cast(s,"int32"),0)]}case"GatherV2":{let a=nU("axis",e,t,r),s=nU("batchDims",e,t,r),i=nU("x",e,t,r),o=nU("indices",e,t,r);return[n.gather(i,n.cast(o,"int32"),a,s)]}case"Reverse":{let a=nU("dims",e,t,r),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=nU("x",e,t,r);return[n.reverse(i,s)]}case"ReverseV2":{let a=nU("axis",e,t,r),s=nU("x",e,t,r);return[n.reverse(s,a)]}case"Slice":{let a=nU("begin",e,t,r),s=nU("size",e,t,r);return[n.slice(nU("x",e,t,r),a,s)]}case"StridedSlice":{let a=nU("begin",e,t,r),s=nU("end",e,t,r),i=nU("strides",e,t,r),o=nU("beginMask",e,t,r),l=nU("endMask",e,t,r),u=nU("ellipsisMask",e,t,r),h=nU("newAxisMask",e,t,r),p=nU("shrinkAxisMask",e,t,r),d=nU("x",e,t,r);return[n.stridedSlice(d,a,s,i,o,l,u,h,p)]}case"Pack":return(0,E.DZQ)(()=>{let a=nU("axis",e,t,r),s=nU("tensors",e,t,r),i=s[0].shape,o=n.squeeze(s[0]).shape,l=s.map(e=>{let t=E.ZSL.arraysEqual(e.shape,i);if(!t&&!E.ZSL.arraysEqual(n.squeeze(e).shape,o))throw Error("the input tensors shape does not match");return t?e:n.reshape(e,i)});return[n.stack(l,a)]});case"Unpack":{let a=nU("axis",e,t,r),s=nU("tensor",e,t,r);return n.unstack(s,a)}case"Tile":{let a=nU("reps",e,t,r);return[n.tile(nU("x",e,t,r),a)]}case"Split":case"SplitV":{let a=nU("axis",e,t,r),s=nU("numOrSizeSplits",e,t,r),i=nU("x",e,t,r);return n.split(i,s,a)}case"ScatterNd":{let a=nU("indices",e,t,r),s=nU("values",e,t,r),i=nU("shape",e,t,r);return[n.scatterND(a,s,i)]}case"GatherNd":{let a=nU("x",e,t,r),s=nU("indices",e,t,r);return[n.gatherND(a,s)]}case"SparseToDense":{let a=nU("sparseIndices",e,t,r),s=nU("outputShape",e,t,r),i=nU("sparseValues",e,t,r),o=nU("defaultValue",e,t,r);return[n.sparseToDense(a,i,s,i.dtype===o.dtype?o:n.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=nU("indices",e,t,r),s=nU("values",e,t,r),i=nU("tensor",e,t,r);return[n.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aY=(e,t,r,n=C)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=n.sparse.sparseFillEmptyRows(nU("indices",e,t,r),nU("values",e,t,r),nU("denseShape",e,t,r),nU("defaultValue",e,t,r));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=n.sparse.sparseReshape(nU("inputIndices",e,t,r),nU("inputShape",e,t,r),nU("newShape",e,t,r));return[a,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(nU("data",e,t,r),nU("indices",e,t,r),nU("segmentIds",e,t,r))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(nU("data",e,t,r),nU("indices",e,t,r),nU("segmentIds",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aQ=(e,t,r,n=C)=>{switch(e.op){case"FFT":return[n.fft(nU("x",e,t,r))];case"IFFT":return[n.ifft(nU("x",e,t,r))];case"RFFT":return[n.rfft(nU("x",e,t,r))];case"IRFFT":return[n.irfft(nU("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aq=(e,t,r,n=C)=>{switch(e.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(nU("input",e,t,r),nU("pattern",e,t,r),nU("rewrite",e,t,r),nU("replaceGlobal",e,t,r))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=n.string.stringNGrams(nU("data",e,t,r),nU("dataSplits",e,t,r),nU("separator",e,t,r),nU("nGramWidths",e,t,r),nU("leftPad",e,t,r),nU("rightPad",e,t,r),nU("padWidth",e,t,r),nU("preserveShortSequences",e,t,r));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=n.string.stringSplit(nU("input",e,t,r),nU("delimiter",e,t,r),nU("skipEmpty",e,t,r));return[a,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(nU("input",e,t,r),nU("numBuckets",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aX=(e,t,r,n=C)=>{switch(e.op){case"Cast":return[n.cast(nU("x",e,t,r),nU("dtype",e,t,r))];case"ExpandDims":{let a=nU("axis",e,t,r);return[n.expandDims(nU("x",e,t,r),a)]}case"Squeeze":{let a=nU("axis",e,t,r);return[n.squeeze(nU("x",e,t,r),a)]}case"Reshape":return[n.reshape(nU("x",e,t,r),nU("shape",e,t,r))];case"EnsureShape":return[n.ensureShape(nU("x",e,t,r),nU("shape",e,t,r))];case"MirrorPad":return[n.mirrorPad(nU("x",e,t,r),nU("padding",e,t,r),nU("mode",e,t,r))];case"PadV2":case"Pad":return[n.pad(nU("x",e,t,r),nU("padding",e,t,r),nU("constantValue",e,t,r))];case"SpaceToBatchND":{let a=nU("blockShape",e,t,r),s=nU("paddings",e,t,r);return[n.spaceToBatchND(nU("x",e,t,r),a,s)]}case"BatchToSpaceND":{let a=nU("blockShape",e,t,r),s=nU("crops",e,t,r);return[n.batchToSpaceND(nU("x",e,t,r),a,s)]}case"DepthToSpace":{let a=nU("blockSize",e,t,r),s=nU("dataFormat",e,t,r).toUpperCase();return[n.depthToSpace(nU("x",e,t,r),a,s)]}case"BroadcastTo":return[n.broadcastTo(nU("x",e,t,r),nU("shape",e,t,r))];case"BroadcastArgs":return[n.broadcastArgs(nU("s0",e,t,r),nU("s1",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function aJ(e,t,r,n,a=E.DZQ){let s=((e,t,r)=>{switch(e.category){case"arithmetic":return a(()=>aN(e,t,r));case"basic_math":return a(()=>ak(e,t,r));case"control":return aF(e,t,r);case"convolution":return a(()=>aD(e,t,r));case"creation":return a(()=>aO(e,t,r));case"dynamic":return aM(e,t,r);case"evaluation":return a(()=>aP(e,t,r));case"image":return a(()=>aV(e,t,r));case"graph":return a(()=>az(e,t,r));case"logical":return a(()=>aU(e,t,r));case"matrices":return a(()=>aG(e,t,r));case"normalization":return a(()=>aZ(e,t,r));case"ragged":return a(()=>aj(e,t,r));case"reduction":return a(()=>aK(e,t,r));case"slice_join":return a(()=>aH(e,t,r));case"sparse":return a(()=>aY(e,t,r));case"spectral":return a(()=>aQ(e,t,r));case"string":return a(()=>aq(e,t,r));case"transformation":return a(()=>aX(e,t,r));case"hash_table":return aW(e,t,r,n);case"custom":let s=nV[e.op];if(s&&s.customExecutor)return s.customExecutor(new aT(e,t,r));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,r);return E.ZSL.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}class a0{constructor(e={},t={},r={},n={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=n,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function a1(e,t,r,n){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(e=>nH(e)[0])),h=new Set((n=n||[]).map(e=>nH(e.name)[0])),p=[...t];for(;p.length>0;){let e=p.pop();if((a5(e)||a4.has(e.op)||a9.has(e.op))&&null==i&&(o=(i=e).children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),!(null!=r[e.name]||u.has(e.name)||h.has(e.name))){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),p.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}class a2 extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}let a3=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),a4=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),a9=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function a5(e){return a3.has(e.op)}class a6{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new a6(e.functions[t],this)})}getCompilationKey(e,t){let r=e.map(e=>e.name).sort(),n=t.map(e=>e.name).sort();return r.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(e,t){let r=a1(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:a,syncInputs:s}=r;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let r=t.map(e=>e.name),a=Object.keys(e);throw Error(`Cannot compute the outputs [${r}] from the provided inputs [${a}]. Missing the following inputs: [${n}]`)}let i=function(e,t){let{usedNodes:r,inputs:n}=t,a=Object.keys(n).map(e=>nH(e)[0]).map(t=>e.nodes[t]),s=e.initNodes||[],i=e=>r.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),h=new Map(u.map(e=>[e.name,e])),p={};for(let e of u)for(let t of(p[e.name]=p[e.name]||0,e.children))i(t)||(p[t.name]=Number.POSITIVE_INFINITY),p[t.name]=(p[t.name]||0)+1;let d=Object.entries(p).filter(([,e])=>0===e).map(([e])=>e),c=[...d];for(;d.length>0;){let e=d.pop();for(let t of h.get(e).children.filter(i))0==--p[t.name]&&(c.push(t.name),d.push(t.name))}let f=function(e,t){let r=new Map(e.map(e=>[e.name,e])),n=t.map(e=>e.name),a=new Set(n);for(;n.length>0;){let e=n.pop();for(let t of r.get(e).children)!r.has(t.name)||a.has(t.name)||(a.add(t.name),n.push(t.name))}return e.filter(e=>a.has(e.name))}(c.map(e=>h.get(e)),l);return function(e,t){let r=new Map(e.map((e,t)=>[e.name,t])),n=new Set(t.map(e=>e.name)),a=e=>n.has("string"==typeof e?e:e.name),s=new Set(e.map(e=>e.name)),i=e=>s.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(i)){if(!r.has(e.name))throw new a2(`Child ${e.name} of node ${t.name} is unreachable.`);if(r.get(t.name)>r.get(e.name))throw new a2(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!r.has(e.name))throw new a2(`Input ${e.name} of node ${t.name} is unreachable.`);if(r.get(e.name)>r.get(t.name))throw new a2(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,r),o=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),r=Number.MAX_SAFE_INTEGER,n=e.map((e,t)=>a5(e)?r:t),a=e=>{let r=n[t.get(e.name)];return null==r?-1:r},s=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),n[t])),i=new Map;for(let t=0;t<e.length;++t){let n=s[t];if(n===r)continue;let a=e[t],o=e[n];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(a)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return(0,E.aCs)(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let r=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=r.map(e=>this.graph.nodes[nH(e)[0]]),a=t.map(e=>nH(e)[0]),s=new Set(a),i=a.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);let o=this.getCompilationKey(n,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=(0,E._K2)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let u={},h={};return(0,E.DZQ)(()=>{let r=new a0(this.weightMap,u,h,this.functionExecutorMap,this.parseNodeNameCache),n=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,s]=nH(t,r),i=[];i[s]=e[t],n[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))});let a=this.getFrozenTensorIds(n),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(n[e.name])continue;let t=aJ(e,n,r,this._resourceManager);if(E.ZSL.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);n[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,n,r,a,s,o.get(e.name))}return null==this.parent&&r.dispose(a),t.map(e=>nG(e,n,r))})}getFrozenTensorIds(e){return new Set([].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id))))}checkTensorForDisposal(e,t,r,n,a,s,i){if(!(a5(t)||s.has(e))){for(let n of r[e])null!=n&&(i[n.id]=(i[n.id]||0)+t.children.length);for(let e of t.inputs){if(a5(e))continue;let t=nZ(e.name,r,n);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,n,a,s){if(!a5(e)&&null!=s){for(let e of s)if(!(a5(e)||a.has(e.name)))for(let a of nZ(e.name,t,r))!a||a.kept||n.has(a.id)||a.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,n={},a={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,E._K2)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let s=new a0(this.weightMap,n,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,r),o=t.map(e=>nG(e,i,s)),l=new Set([...o.map(e=>e.id),...Object.keys(e).map(t=>e[t].id),...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(e,t,r){let n=e.reduce((e,t,r)=>(e[this.inputs[r].name]=t,e),{});return this._executeAsync(n,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,n){let a=Object.keys(e),s=a.map(e=>this.graph.nodes[nH(e)[0]]),i=r.map(e=>nH(e)[0]),o=new Set(i),l=i.map(e=>this.graph.nodes[e]);0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:h,dynamicNode:p,syncInputs:d}=a1(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[r,n]=nH(t),a=[];a[n]=e[t],f[r]=a});let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(s,c,t,f,y,g,o,m,u);await Promise.all(e)}null!=p||n||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(e=>!a5(e)&&!nG(e.name,f,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${h}]. ${e}`)}return f}processStack(e,t,r,n,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();r.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&nU("isConstant",e.node,n,r)&&([h]=nj(e.node.name,r)),null==n[e.node.name]){let p=aJ(e.node,n,r,this._resourceManager);h||([h]=nj(e.node.name,r));let d=r.currentContext;E.ZSL.isPromise(p)?u.push(p.then(u=>(n[h]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(u)),r.currentContext=d,this.checkTensorForDisposal(h,e.node,n,r,s,i,o),this.processChildNodes(e.node,t,r,n,a,l),u))):(n[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,e.node,n,r,s,i,o),this.processChildNodes(e.node,t,r,n,a,l))}else this.processChildNodes(e.node,t,r,n,a,l)}return u}processChildNodes(e,t,r,n,a,s){e.children.forEach(e=>{let[i]=nj(e.name,r);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!nG(e,n,r))&&(a[i]=!0,t.push({contexts:r.currentContext,node:e})):e.inputNames.every(e=>!!nG(e,n,r))&&(a[i]=!0,t.push({contexts:r.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let r=e[t],[n]=nH(t),a=this.graph.nodes[n];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===r.shape.length&&r.shape.every((t,r)=>-1===e[r]||e[r]===t);E.ZSL.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&E.ZSL.assert(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;let n={};for(let a in e){let s=null===(r=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===r?void 0:r[a];null!=s?n[s.name]=e[a]:n[a]=e[a]}return n}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=nH(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,r;let n=null===(r=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===r?void 0:r[e];return null!=n?n.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=nH(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}}class a8{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var a7=r(77388);class se{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=E.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,null==t&&(this.loadOptions={}),this.resourceManager=new a8}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return E.ZSL.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await (0,a7.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let r=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=n,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new a6(ao.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=ao.Instance.transformGraph(e.modelInitializer);this.initializer=new a6(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof E.qYS?[e]:e,r={};return t.forEach((e,t)=>r[this.structuredOutputKeys[t]]=e),r}return e}predict(e,t){let r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){let r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof E.qYS)&&!Array.isArray(e)){let r=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=r)for(let t in r){let n=r[t];null!=n.resourceId&&(e[t]=this.resourceIdToCapturedInput[n.resourceId])}return e}e=Array.isArray(e)?e:[e];let r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((t,r)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[r])||void 0===i?void 0:i.resourceId;return null!=o?t[r]=this.resourceIdToCapturedInput[o]:t[r]=e[n++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,r=Object.keys(t);for(let n=0;n<r.length;n++){let a=t[r[n]];this.resourceIdToCapturedInput[a.resourceId]=e[n]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,E.ASo)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function st(e,t={},r=E.io){var n;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((n=e).endsWith("/")||(n+="/"),e=`${n}model.json?tfjs-format=file`);let a=new se(e,t,r);return await a.load(),a}var sr=r(39567);function sn(e,t,r=new Map,n=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(n.has(e))throw Error("Circular references are not supported.");if(r.has(e))return r.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw Error("A deep map function may not return both a value and recurse=true.");if(!a.recurse)return r.set(e,a.value),a.value;if(ss(e)){let a=Array.isArray(e)?[]:{};for(let s in n.add(e),e){let i=sn(e[s],t,r,n);a[s]=i}return n.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw Error(`Can't recurse into non-iterable type: ${e}`)}function sa(e){return null===e?null:ss(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function ss(e){let t=!1;if(E._K2().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=r(80551);t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof E.qYS)&&!(e instanceof Promise)&&!t)}function si(e){return e instanceof E.qYS?{value:e.clone(),recurse:!1}:ss(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class so{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw RangeError("Can't create ring buffer of capacity < 1.");this.data=Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),r=this.get(t);return this.set(t,this.pop()),r}}class sl extends so{constructor(){super(sl.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=Array(e),r=this.length();for(let e=0;e<r;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}sl.INITIAL_CAPACITY=32;class su{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],r=await e.next();for(;!r.done;)t.push(r.value),r=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),r=e(t.value);for(;!t.done&&r;)r=e((t=await this.next()).value)}handleErrors(e){return new sb(this,e)}filter(e){return new sg(this,e)}map(e){return new sy(this,e)}mapAsync(e){return new sx(this,e)}serialMapAsync(e){return new sx(this,e).serial()}flatmap(e){return new sw(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new sm(this,e,t)}columnMajorBatch(e,t=!0,r=sa){return this.rowMajorBatch(e,t).map(e=>(function(e,t=sa){return function e(t,r,n=new Set){let a=t[0];if(n.has(a))throw Error("Circular references are not supported.");let s=r(t);if(s.recurse&&null!==s.value)throw Error("A deep zip function may not return both a value and recurse=true.");if(!s.recurse)return s.value;if(ss(a)){let s=Array.isArray(a)?[]:{};for(let i in n.add(a),a){let a=e(t.map(e=>e[i]),r,n);s[i]=a}return n.delete(a),s}throw Error(`Can't recurse into non-iterable type: ${a}`)}(e,t)})(e,r))}concatenate(e,t){return new sT(new sh([this,e]),t)}take(e){return e<0||null==e?this:new sf(this,e)}skip(e){return e<0||null==e?this:new sc(this,e)}prefetch(e){return new sS(this,e)}shuffle(e,t){return new sN(this,e,t)}serial(){return new sd(this)}}class sh extends su{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:sn(e,si),done:!1}}}class sp extends su{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class sd extends su{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class sc extends su{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;E.ASo(e.value)}return this.upstream.next()}}class sf extends su{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class sm extends su{constructor(e,t,r=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done){if(this.enableSmallLastBatch&&e.length>0)return{value:e,done:!1};return{value:null,done:!0}}e.push(t.value)}return{value:e,done:!1}}}class sg extends su{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;E.ASo(e.value)}}}class sy extends su{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=E.d_S.getTensorsInContainer(e.value),r=this.transform(e.value),n=E.d_S.getTensorsInContainer(r);for(let e of t)E.d_S.isTensorInList(e,n)||e.dispose();return{value:r,done:!1}}}class sb extends su{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class sx extends su{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=E.d_S.getTensorsInContainer(e.value),r=await this.transform(e.value),n=E.d_S.getTensorsInContainer(r);for(let e of t)E.d_S.isTensorInList(e,n)||e.dispose();return{value:r,done:!1}}}class sv extends su{constructor(){super(),this.outputQueue=new sl,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class sw extends sv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=E.d_S.getTensorsInContainer(e.value),r=this.transform(e.value),n=E.d_S.getTensorsInContainer(r);for(let e of(this.outputQueue.pushAll(r),t))E.d_S.isTensorInList(e,n)||e.dispose();return!0}}class sT extends su{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(i||(i={}));class sS extends su{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new so(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class sN extends sS{constructor(e,t,r){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=sr.alea(r||E.ZSL.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class sk{constructor(){this.size=null}batch(e,t=!0){let r=this;return E.ZSL.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`),sI(async()=>(await r.iterator()).columnMajorBatch(e,t,sC),this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e))}concatenate(e){let t=this;return sI(async()=>(await t.iterator()).concatenate(await e.iterator()),this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null)}filter(e){let t=this;return sI(async()=>(await t.iterator()).filter(t=>E.DZQ(()=>e(t))),this.size===1/0?1/0:null)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return sI(async()=>(await t.iterator()).map(t=>E.DZQ(()=>e(t))),this.size)}mapAsync(e){let t=this;return sI(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return sI(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this;return sI(async()=>new sT(new sp(async()=>({value:await t.iterator(),done:!1})).take(e),void 0),null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null)}skip(e){let t=this;return sI(async()=>(await t.iterator()).skip(e),null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null)}shuffle(e,t,r=!0){if(null==e||e<0){if(null==this.size)throw RangeError("`Dataset.shuffle()` requires bufferSize to be specified.");throw RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`)}let n=this,a=sr.alea(t||E.ZSL.now().toString());return sI(async()=>{let t=a.int32();return r&&(t+=a.int32()),(await n.iterator()).shuffle(e,t.toString())},this.size)}take(e){let t=this;return sI(async()=>(await t.iterator()).take(e),null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null)}async toArray(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function sI(e,t=null){return new class extends sk{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function sC(e){var t,r;return null===e?null:null==(t=e[0])||null===(r=t)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(t)||"object"==typeof t&&t instanceof E.qYS||E.ZSL.isTypedArray(t)?{value:function(e){if(0===e.length)throw Error("Can't make a batch of zero elements.");return e[0]instanceof E.qYS?E.t$z(e):E.OEK(e)}(e),recurse:!1}:{value:null,recurse:!0}}sk.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");class sE extends su{split(e){return new sA(this,e)}}class sA extends sE{constructor(e,t){super(),this.upstream=e,this.impl=new s$(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class s$ extends sv{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);for(let e of(t[0]=this.carryover+t[0],t.slice(0,-1)))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}var sR=r(95714).Buffer;class sF extends sE{constructor(e){super(),this.upstream=e,this.impl=new s_(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class s_ extends sv{constructor(e){if(super(),this.upstream=e,(0,E._K2)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=r(4530);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t;let r=await this.upstream.next();return!r.done&&(e=r.value,t=(0,E._K2)().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(sR.from(e.buffer)),this.outputQueue.push(t),!0)}}var sD=r(28494);let sO=E.kpo.YO;class sL extends E.uI_{nextDataId(){return sL.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new E.GJx(this,(0,E.Hi9)())}write(e,t,r){this.firstUse&&(this.firstUse=!1,(0,E._K2)().get("IS_NODE")&&E.C0T.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:r,refCount:1}),n}makeTensorInfo(e,t,r){let n;if("string"===t&&null!=r&&r.length>0&&E.ZSL.isString(r[0])){let a=r.map(e=>E.ZSL.encodeString(e));n=this.write(a,e,t)}else n=this.write(r,e,t);return{dataId:n,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,r,n,a){this.data.set(e,{values:t,dtype:n,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:r}=this.data.get(e);if("complex64"===t){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);return E.C0T.mergeRealAndImagArrays(e,t)}return E.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let r=t.map(e=>E.ZSL.decodeString(e));return(0,E.ra8)(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return(0,E.ra8)(e.shape,e.dtype,t)}makeOutput(e,t,r){return(0,E.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=E.ZSL.now();return e(),{kernelMs:E.ZSL.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,sD.C)([e],"where");let t=this.readSync(e.dataId);return sO(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}sL.nextDataId=0,(0,E.gJX)("cpu",()=>new sL,1);var sM=r(25920);let sP=(0,sM.v)(E.Pah,e=>e>=0?e:Math.exp(e)-1),sz={kernelName:E.Pah,backendName:"cpu",kernelFunc:sP};var sB=r(34900);function sW(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n;(0,sD.C)([a],"leakyRelu");let i=E.ZSL.sizeFromShape(a.shape),o=r.data.get(a.dataId).values,l=E.ZSL.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return r.makeTensorInfo(a.shape,"float32",l)}let sV={kernelName:E.X0$,backendName:"cpu",kernelFunc:sW};var sU=r(51825);let sG=(0,sU.Z)((e,t)=>e<0?t*e:e);function sZ(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t;(0,sD.C)([n,a],"prelu");let s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,[o,l]=sG(n.shape,a.shape,s,i,"float32");return r.makeTensorInfo(l,"float32",o)}let sj={kernelName:E.Ncv,backendName:"cpu",kernelFunc:sZ},sK=(0,sM.v)(E.fUj,e=>Math.max(0,e)),sH={kernelName:E.fUj,backendName:"cpu",kernelFunc:sK},sY=(0,sM.v)(E.P_L,e=>Math.min(Math.max(0,e),6)),sQ={kernelName:E.P_L,backendName:"cpu",kernelFunc:sY};var sq=r(13646);function sX(e,t,r,n,a){if("linear"===r)return(0,sB.D)({inputs:{x:t},backend:e});if("relu"===r)return sK({inputs:{x:t},backend:e});if("elu"===r)return sP({inputs:{x:t},backend:e});if("relu6"===r)return sY({inputs:{x:t},backend:e});if("prelu"===r)return sZ({inputs:{x:t,alpha:n},backend:e});if("leakyrelu"===r)return sW({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===r)return(0,sq.ry)({inputs:{x:t},backend:e});throw Error(`Activation ${r} has not been implemented for the CPU backend.`)}var sJ=r(44457);function s0(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=E.ZSL.sizeFromShape(a.shape),o=E.ZSL.inferFromImplicitShape(s,i),l=E.ZSL.sizeFromShape(o);E.ZSL.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.incRef(a.dataId);let u=r.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}let s1={kernelName:E.R23,backendName:"cpu",kernelFunc:s0};function s2(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;(0,sD.C)([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=E.ZSL.sizeFromShape(f),y=E.ZSL.sizeFromShape(m),b=E.ZEY.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);E.ZSL.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=s0({inputs:{x:a},backend:r,attrs:{shape:i?[g,h,d]:[g,d,h]}}),v=s0({inputs:{x:s},backend:r,attrs:{shape:o?[y,c,p]:[y,p,c]}}),w=i?x.shape[1]:x.shape[2],T=i?x.shape[2]:x.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),k=r.data.get(x.dataId).values,I=r.data.get(v.dataId).values,C=E.ZSL.computeStrides(x.shape),A=E.ZSL.computeStrides(v.shape),[$,R,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[_,D,O]=o?[1,A[1],A[0]]:[A[1],1,A[0]],L=T*S,M=(0,E.ra8)([N,T,S],x.dtype),P=M.values,z=r.blockSize;for(let e=0;e<N;e++){let t=e%g,r=e%y;for(let n=0;n<T;n+=z){let a=Math.min(n+z,T);for(let s=0;s<S;s+=z){let i=Math.min(s+z,S);for(let o=0;o<w;o+=z){let l=Math.min(o+z,w);for(let u=n;u<a;u++)for(let n=s;n<i;n++){let a=0;for(let e=o;e<l;e++)a+=k[t*$+u*R+e*F]*I[e*_+n*D+r*O];P[e*L+(u*S+n)]+=a}}}}}return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.makeTensorInfo(b,M.dtype,M.values)}let s3={kernelName:E.jAQ,backendName:"cpu",kernelFunc:s2},s4={kernelName:E.Dr,backendName:"cpu",kernelFunc:function(e){let t,r,n;let{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];for(let e of(t=s2({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(r=(0,sJ.WQ)({inputs:{a:t,b:u},backend:s}),m.push(t),t=r),c&&(n=sX(s,t,c,h,f),m.push(t),t=n),m))s.disposeIntermediateTensorInfo(e);return t}};var s9=r(57774);let s5=(0,sM.v)(E.Vvy,e=>Math.acos(e)),s6={kernelName:E.Vvy,backendName:"cpu",kernelFunc:s5},s8=(0,sM.v)(E.PH8,e=>Math.acosh(e)),s7={kernelName:E.PH8,backendName:"cpu",kernelFunc:s8},ie={kernelName:E.EkD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e;(0,sD.C)(t,"addN");let n=t.map(e=>r.data.get(e.dataId).values),a=(0,E.ra8)(t[0].shape,t[0].dtype),s=a.values;for(let e=0;e<t.length;e++){let t=n[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return r.makeTensorInfo(a.shape,a.dtype,a.values)}};var it=r(4957);let ir={kernelName:E.u8Z,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;(0,sD.C)(a,"all");let o=E.ZSL.parseAxisParam(s,a.shape),l=o,u=E.C0T.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:u}}),l=E.C0T.getInnerMostAxes(l.length,a.shape.length)),E.C0T.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=E.C0T.computeOutAndReduceShapes(h.shape,l),c=E.ZSL.sizeFromShape(d),f=E.ZSL.makeZerosTypedArray(E.ZSL.sizeFromShape(p),h.dtype),m=r.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,r=m[t];for(let e=0;e<c;++e){let n=m[t+e];r=r&&n}f[e]=r}null!=u&&r.disposeIntermediateTensorInfo(h);let g=r.makeTensorInfo(p,h.dtype,f);if(i){let e=s0({inputs:{x:g},backend:r,attrs:{shape:E.C0T.expandShapeToKeepDim(p,o)}});return r.disposeIntermediateTensorInfo(g),e}return g}},ia={kernelName:E.FSt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;(0,sD.C)(a,"any");let o=E.ZSL.parseAxisParam(s,a.shape),l=o,u=E.C0T.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:u}}),l=E.C0T.getInnerMostAxes(l.length,a.shape.length)),E.C0T.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=E.C0T.computeOutAndReduceShapes(h.shape,l),c=E.ZSL.sizeFromShape(d),f=E.ZSL.makeZerosTypedArray(E.ZSL.sizeFromShape(p),h.dtype),m=r.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,r=m[t];for(let e=0;e<c;++e){let n=m[t+e];r=r||n}f[e]=r}null!=u&&r.disposeIntermediateTensorInfo(h);let g=r.makeTensorInfo(p,h.dtype,f);if(i){let e=s0({inputs:{x:g},backend:r,attrs:{shape:E.C0T.expandShapeToKeepDim(p,o)}});return r.disposeIntermediateTensorInfo(g),e}return g}},is={kernelName:E.Jp_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;(0,sD.C)(a,"argMax");let i=E.ZSL.parseAxisParam(s,a.shape),o=E.C0T.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:o}})),i=E.C0T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],E.C0T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=E.C0T.computeOutAndReduceShapes(l.shape,i),d=E.ZSL.sizeFromShape(h),c=E.ZSL.makeZerosTypedArray(d,"int32"),f=E.ZSL.sizeFromShape(p),m=r.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,r=m[t],n=0;for(let e=0;e<f;++e){let a=m[t+e];a>r&&(r=a,n=e)}c[e]=n}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(h,"int32",c)}},ii={kernelName:E.p_m,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;(0,sD.C)(a,"argMin");let i=E.ZSL.parseAxisParam(s,a.shape),o=E.C0T.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:o}})),i=E.C0T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],E.C0T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=E.C0T.computeOutAndReduceShapes(l.shape,i),d=E.ZSL.sizeFromShape(h),c=E.ZSL.makeZerosTypedArray(d,"int32"),f=E.ZSL.sizeFromShape(p),m=r.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,r=m[t],n=0;for(let e=0;e<f;++e){let a=m[t+e];a<r&&(r=a,n=e)}c[e]=n}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(h,"int32",c)}},io=(0,sM.v)(E.QKF,e=>Math.asin(e)),il={kernelName:E.QKF,backendName:"cpu",kernelFunc:io},iu=(0,sM.v)(E.epO,e=>Math.asinh(e)),ih={kernelName:E.epO,backendName:"cpu",kernelFunc:iu},ip=(0,sM.v)(E.TyE,e=>Math.atan(e)),id={kernelName:E.TyE,backendName:"cpu",kernelFunc:ip};var ic=r(54292);let im=(0,sU.Z)((e,t)=>Math.atan2(e,t)),ig=(0,ic.j)(E.lxb,im),iy={kernelName:E.lxb,backendName:"cpu",kernelFunc:ig},ib=(0,sM.v)(E.zP9,e=>Math.atanh(e)),ix={kernelName:E.zP9,backendName:"cpu",kernelFunc:ib};function iv(e,t,r,n,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,E.ra8)(a.outShape,r),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let r=t*y,m=t*n[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),T=Math.min(a.inHeight,h+v),S=r+y*b;for(let r=0;r<a.outWidth;++r){let i=r*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,v=0;for(let r=w;r<T;r+=l){let a=m+r*n[1];for(let r=h;r<d;r+=u){let i=e[a+r*n[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[S+r*x+t]="avg"===s?b/v:y}}}return m}function iw(e,t,r,n,a=!1,s=!1){let i=(0,E.ra8)(n.outShape,"int32"),o=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterHeight,d=n.effectiveFilterWidth,c=n.padInfo.top,f=n.padInfo.left,m=(0,E.ra8)(t,r,e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let r=0;r<n.outHeight;++r){let g=r*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(n.inHeight,p+g);for(let o=0;o<n.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(n.inWidth,d+p),v=Number.NEGATIVE_INFINITY,w=-1;for(let r=y;r<b;r+=u){let i=r-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,r,o,t);u>v&&(v=u,w=a?s?((e*n.inHeight+r)*n.inWidth+o)*n.inChannels+t:(r*n.inWidth+o)*n.inChannels+t:i*d+l)}}i.set(w,e,r,o,t)}}return i}function iT(e,t,r,n,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,E.ra8)(a.outShape,r),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],T=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){let r=t*w,x=t*n[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let k=w*i-m,I=k;for(;I<0;)I+=u;let C=Math.min(a.inDepth,d+k),E=r+w*T;for(let r=0;r<a.outHeight;++r){let i=r*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),w=E+r*S;for(let r=0;r<a.outWidth;++r){let i=r*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=w+r*N,T=b,S=0,k=0;for(let r=I;r<C;r+=u){let a=x+r*n[1];for(let r=d;r<m;r+=h){let i=a+r*n[2];for(let r=o;r<c;r+=p){let a=e[i+r*n[3]+t];if("max"===s&&a>T?T=a:"avg"===s&&(S+=a,k++),isNaN(T))break}if(isNaN(T))break}if(isNaN(T))break}v[g+t]="avg"===s?S/Math.max(k,1):T}}}}return x}let iS={kernelName:E.ho8,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r;(0,sD.C)(s,"avgPool");let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let h=E.C0T.computePool2DInfo(s.shape,i,o,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&E.ZSL.arraysEqual(h.inShape,h.outShape))t=(0,sB.D)({inputs:{x:s},backend:n});else{let e=n.data.get(s.dataId).values,r=E.ZSL.computeStrides(s.shape),a=iv(e,s.shape,s.dtype,r,h,"avg");t=n.makeTensorInfo(h.outShape,s.dtype,a.values)}return t}},iN={kernelName:E.cS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;(0,sD.C)(a,"avgPool3d");let h=E.C0T.computePool3DInfo(a.shape,s,i,1,o,l,u),p=iT(r.data.get(a.dataId).values,a.shape,a.dtype,E.ZSL.computeStrides(a.shape),h,"avg");return r.makeTensorInfo(p.shape,"float32",p.values)}},ik={kernelName:E.wwC,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;(0,sD.C)([a,s],"avgPool3DGrad");let h=E.C0T.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,T=h.effectiveFilterWidth,S=v-1-h.padInfo.front,N=T-1-h.padInfo.left,k=w-1-h.padInfo.top,I=(0,E.ra8)(s.shape,"float32"),C=1/(f*m*g),A=r.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let r=0;r<h.inDepth;++r)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){let s=r-S,i=n-k,o=a-N,l=0;for(let r=0;r<v;r+=y){let n=(s+r)/p;if(!(n<0)&&!(n>=h.outDepth)&&Math.floor(n)===n)for(let r=0;r<w;r+=b){let a=(i+r)/d;if(!(a<0)&&!(a>=h.outHeight)&&Math.floor(a)===a)for(let r=0;r<T;r+=x){let s=(o+r)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=A.get(e,n,a,s,t))}}}I.set(l*C,e,r,n,a,t)}return r.makeTensorInfo(I.shape,I.dtype,I.values)}},iI={kernelName:E.VCH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t;(0,sD.C)([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=n,u=E.C0T.computePool2DInfo(s.shape,i,o,1,l),h=u.strideHeight,p=u.strideWidth,d=u.filterHeight,c=u.filterWidth,f=u.dilationHeight,m=u.dilationWidth,g=u.effectiveFilterHeight,y=u.effectiveFilterWidth,b=y-1-u.padInfo.left,x=g-1-u.padInfo.top,v=(0,E.ra8)(s.shape,"float32"),w=1/(d*c),T=r.data.get(a.dataId).values,S=(0,E.ra8)(a.shape,"float32",T);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let r=0;r<u.inHeight;++r)for(let n=0;n<u.inWidth;++n){let a=r-x,s=n-b,i=0;for(let r=0;r<g;r+=f){let n=(a+r)/h;if(!(n<0)&&!(n>=u.outHeight)&&Math.floor(n)===n)for(let r=0;r<y;r+=m){let a=(s+r)/p;a<0||a>=u.outWidth||Math.floor(a)!==a||(i+=S.get(e,n,a,t))}}v.set(i*w,e,r,n,t)}return r.makeTensorInfo(v.shape,v.dtype,v.values)}},iC={kernelName:E.i5R,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;E.ZSL.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E.ZSL.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E.ZSL.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),(0,sD.C)([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=n;null==u&&(u=.001);let h=r.data.get(a.dataId).values,p=r.data.get(o.dataId).values,d=r.data.get(l.dataId).values,c=s?r.data.get(s.dataId).values:new Float32Array([1]),f=i?r.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,v=0,w=0,T=0,S=0;for(let e=0;e<h.length;++e)m[e]=f[v++]+(h[e]-p[w++])*c[T++]/Math.sqrt(d[S++]+u),v>=g&&(v=0),w>=x&&(w=0),T>=y&&(T=0),S>=b&&(S=0);return r.makeTensorInfo(a.shape,a.dtype,m)}};var iE=r(95988);let iA={kernelName:E.Ik2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;(0,sD.C)([a],"batchToSpaceND");let o=s.reduce((e,t)=>e*t),l=E.C0T.getReshaped(a.shape,s,o),u=E.C0T.getPermuted(l.length,s.length),h=E.C0T.getReshapedPermuted(a.shape,s,o),p=E.C0T.getSliceBeginCoords(i,s.length),d=E.C0T.getSliceSize(h,i,s.length),c=s0({inputs:{x:a},backend:r,attrs:{shape:l}}),f=(0,it.m)({inputs:{x:c},backend:r,attrs:{perm:u}}),m=s0({inputs:{x:f},backend:r,attrs:{shape:h}}),g=(0,iE.di)({inputs:{x:m},backend:r,attrs:{begin:p,size:d}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}};var i$=r(46893);let iR={kernelName:E.N4F,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=(0,i$.X)(o,l,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,u)}};var iF=r(68018);let i_={kernelName:E.vj7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=E.C0T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}};var iD=r(23613),iO=r(26779);let iL=(0,sM.v)(E.vaV,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),iM={kernelName:E.vaV,backendName:"cpu",kernelFunc:iL};var iP=r(10338);let iz={kernelName:E.$zE,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,r=e.backend,n=new Float32Array(E.ZSL.sizeFromShape(t.shape)),a=r.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],r=l[e];n[e]=Math.hypot(t,r)}return r.makeOutput(n,t.shape,"float32")}};var iB=r(59317);function iW(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.imag,s=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,s)}let iV={kernelName:E.dv8,backendName:"cpu",kernelFunc:iW};var iU=r(90082);function iG(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=E.ZSL.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);E.C0T.assertParamsConsistent(i,s);let o=E.C0T.computeOutShape(t.map(e=>e.shape),s);if(0===E.ZSL.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>E.ZSL.sizeFromShape(e.shape)>0);if(1===l.length)return(0,sB.D)({inputs:{x:l[0]},backend:r});if("complex64"===l[0].dtype){let e=l.map(e=>(0,iU.x)({inputs:{input:e},backend:r})),t=l.map(e=>iW({inputs:{input:e},backend:r})),n=iG({inputs:e,backend:r,attrs:{axis:s}}),a=iG({inputs:t,backend:r,attrs:{axis:s}}),i=(0,iP.f)({inputs:{real:n,imag:a},backend:r});return e.forEach(e=>r.disposeIntermediateTensorInfo(e)),t.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),i}let u=l.map(e=>{let t=E.ZSL.sizeFromShape(e.shape.slice(s));return s0({inputs:{x:e},backend:r,attrs:{shape:[-1,t]}})}),h=u.map(e=>({vals:r.data.get(e.dataId).values,shape:e.shape}));o=E.C0T.computeOutShape(u.map(e=>e.shape),1);let p=1===u[0].shape[0],d=(0,iB.h)(h,o,t[0].dtype,p),c=E.C0T.computeOutShape(l.map(e=>e.shape),s),f=r.makeTensorInfo(c,t[0].dtype,d);return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),f}let iZ={kernelName:E.$dB,backendName:"cpu",kernelFunc:iG};function ij(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=n;(0,sD.C)([a,s],"conv2d");let p=E.C0T.convertConv2DDataFormat(l),d=E.C0T.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new E.ylz(d.outShape,a.dtype),w=E.ZSL.computeStrides(a.shape),T=E.ZSL.computeStrides(s.shape),S=w[0],N=x?w[1]:w[2],k=x?w[2]:1,I=x?1:w[1],C=v.strides[0],A=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,R=x?1:v.strides[1],F=r.data.get(a.dataId).values,_=r.data.get(s.dataId).values,D=v.values;for(let e=0;e<d.batchSize;++e){let t=e*S,r=e*C;for(let e=0;e<d.outHeight;++e){let n=r+e*A,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let r=a+e*m;if(r<0||r>=d.inHeight)continue;let s=e*T[0],i=t+r*N;for(let e=0;e<d.outWidth;++e){let t=n+e*$,r=e*d.strideWidth-y;for(let e=0;e<f;++e){let n=r+e*g;if(n<0||n>=d.inWidth)continue;let a=s+e*T[1],o=i+n*k,l=a;for(let e=0;e<d.inChannels;++e){let r=F[o+e*I];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=r*_[l+e];l+=d.outChannels}}}}}}return r.makeTensorInfo(v.shape,v.dtype,D)}let iK={kernelName:E.p2J,backendName:"cpu",kernelFunc:ij},iH={kernelName:E.rFm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=n;(0,sD.C)([a,s],"conv2dBackpropFilter");let p=E.C0T.convertConv2DDataFormat(l),d=E.C0T.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new E.ylz(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=r.data.get(a.dataId).values,T=r.data.get(s.dataId).values,S=new E.ylz(a.shape,a.dtype,w),N=new E.ylz(s.shape,s.dtype,T);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),r=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let n=0;n<g;++n){let a=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<r;++h){let t=e+h*c-v;for(let e=a;e<s;++e){let r=n+e*f-x;y?l+=S.get(u,t,r,i)*N.get(u,h,e,o):l+=S.get(u,i,t,r)*N.get(u,o,h,e)}}b.set(l,e,n,i,o)}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}},iY={kernelName:E.jfg,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=n;(0,sD.C)([a,s],"conv2dBackpropInput");let p=E.ZSL.computeStrides(s.shape),d=E.ZSL.computeStrides(a.shape),c=E.C0T.convertConv2DDataFormat(u),f=E.C0T.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new E.ylz(f.inShape,"float32"),g=m.values,y=r.data.get(a.dataId).values,b=r.data.get(s.dataId).values,[x,v,w]=p,{batchSize:T,filterHeight:S,filterWidth:N,inChannels:k,inHeight:I,inWidth:C,outChannels:A,outHeight:$,outWidth:R,strideHeight:F,strideWidth:_}=f;c=f.dataFormat;let D=S-1-f.padInfo.top,O=N-1-f.padInfo.left,L="channelsLast"===c,M=m.strides[0],P=L?m.strides[1]:m.strides[2],z=L?m.strides[2]:1,B=L?1:m.strides[1],W=d[0],V=L?d[1]:d[2],U=L?d[2]:1,G=L?1:d[1];for(let e=0;e<T;++e)for(let t=0;t<k;++t)for(let r=0;r<I;++r){let n=r-D,a=Math.max(0,Math.ceil(n/F)),s=Math.min($,(S+n)/F);for(let i=0;i<C;++i){let o=i-O,l=Math.max(0,Math.ceil(o/_)),u=Math.min(R,(N+o)/_),h=0;for(let r=a;r<s;++r){let a=r*F-n;for(let n=l;n<u;++n){let s=n*_-o,i=W*e+V*r+U*n,l=x*(S-1-a)+v*(N-1-s)+w*t;for(let e=0;e<A;++e)h+=y[i+G*e]*b[l+e]}}g[M*e+P*r+z*i+B*t]=h}}return r.makeTensorInfo(m.shape,m.dtype,m.values)}},iQ={kernelName:E.A1h,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n;(0,sD.C)([a,s],"conv3d");let u=E.C0T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new E.ylz(u.outShape,a.dtype),w=r.data.get(a.dataId).values,T=r.data.get(s.dataId).values,S=v.values,N=E.ZSL.computeStrides(a.shape),k=E.ZSL.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*N[0],r=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let n=r+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let r=a+e*c;if(r<0||r>=u.inDepth)continue;let s=e*k[0],i=t+r*N[1];for(let e=0;e<u.outHeight;++e){let t=n+e*v.strides[2],r=e*u.strideHeight-x;for(let e=0;e<p;++e){let n=r+e*f;if(n<0||n>=u.inHeight)continue;let a=s+e*k[1],o=i+n*N[2];for(let e=0;e<u.outWidth;++e){let r=t+e*u.outChannels,n=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=n+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*k[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)S[r+e]+=t*T[l+e];l+=u.outChannels}}}}}}}}return r.makeTensorInfo(v.shape,v.dtype,v.values)}},iq={kernelName:E.iGz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=n;(0,sD.C)([a,s],"conv3dBackpropFilterV2");let u=E.ZSL.computeStrides(a.shape),h=E.ZSL.computeStrides(s.shape),p=E.C0T.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new E.ylz(p.filterShape,"float32"),x=b.values,[v,w,T,S]=b.strides,N=r.data.get(s.dataId).values,[k,I,C,A]=h,$=r.data.get(a.dataId).values,[R,F,_,D]=u,O=p.padInfo.front,L=p.padInfo.left,M=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((O-e)/d)),r=Math.min(p.outDepth,(p.inDepth+O-e)/d),n=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((M-a)/c)),i=Math.min(p.outHeight,(p.inHeight+M-a)/c),o=a*w+n;for(let n=0;n<y;++n){let l=Math.max(0,Math.ceil((L-n)/f)),u=Math.min(p.outWidth,(p.inWidth+L-n)/f),h=n*T+o;for(let o=0;o<p.inChannels;++o){let m=o*S+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*R,y=m*k;for(let m=t;m<r;++m){let t=(e+m*d-O)*F+p,r=m*I+y;for(let e=s;e<i;++e){let s=(a+e*c-M)*_+t,i=e*C+r;for(let e=l;e<u;++e){let t=(n+e*f-L)*D+s,r=e*A+i;g+=$[t+o]*N[r+h]}}}}x[m+h]=g}}}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}},iX={kernelName:E.gC7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=n;(0,sD.C)([a],"conv3dBackpropInputV2");let u=E.ZSL.computeStrides(a.shape),h=E.ZSL.computeStrides(s.shape),p=E.C0T.computeConv3DInfo(l,s.shape,o,1,i),d=new E.ylz(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=r.data.get(a.dataId).values,[x,v,w,T]=u,S=r.data.get(s.dataId).values,[N,k,I,C]=h,{batchSize:A,filterDepth:$,filterHeight:R,filterWidth:F,inChannels:_,inDepth:D,inHeight:O,inWidth:L,outChannels:M,outDepth:P,outHeight:z,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=p,G=$-1-p.padInfo.front,Z=R-1-p.padInfo.top,j=F-1-p.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<_;++t)for(let r=0;r<D;++r){let n=r-G,a=Math.max(0,Math.ceil(n/W)),s=Math.min(P,($+n)/W);for(let i=0;i<O;++i){let o=i-Z,l=Math.max(0,Math.ceil(o/V)),u=Math.min(z,(R+o)/V);for(let h=0;h<L;++h){let p=h-j,d=Math.max(0,Math.ceil(p/U)),E=Math.min(B,(F+p)/U),A=0;for(let r=a;r<s;++r){let a=r*W-n;for(let n=l;n<u;++n){let s=n*V-o;for(let i=d;i<E;++i){let o=i*U-p,l=x*e+v*r+w*n+T*i,u=N*($-1-a)+k*(R-1-s)+I*(F-1-o)+C*t;for(let e=0;e<M;++e)A+=b[l+e]*S[u+e]}}}c[f*e+m*r+g*i+y*h+t]=A}}}return r.makeTensorInfo(d.shape,d.dtype,d.values)}},iJ=(0,sM.v)(E.Mn0,e=>Math.cos(e)),i0={kernelName:E.Mn0,backendName:"cpu",kernelFunc:iJ},i1=(0,sM.v)(E.MnK,e=>Math.cosh(e)),i2={kernelName:E.MnK,backendName:"cpu",kernelFunc:i1},i3={kernelName:E.MRQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=(0,E.ra8)([f,m,g,c],"float32"),b=r.data.get(s.dataId).values,x=r.data.get(i.dataId).values,v=r.data.get(a.dataId).values,w=E.ZSL.computeStrides(a.shape),T=E.ZSL.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,r=b[t],n=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-r)*(p-1)/(m-1):0,f=g>1?(s-n)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?r*(p-1)+t*o:.5*(r+a)*(p-1);if(h<0||h>p-1){for(let r=0;r<g;r++)for(let n=0;n<c;n++){let a=n+r*T[2]+t*T[1]+e*T[0];y.values[a]=u}continue}if("bilinear"===l){let r=Math.floor(h),a=Math.ceil(h),o=h-r;for(let l=0;l<g;l++){let h=g>1?n*(d-1)+l*f:.5*(n+s)*(d-1);if(h<0||h>d-1){for(let r=0;r<c;r++){let n=r+l*T[2]+t*T[1]+e*T[0];y.values[n]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let n=0;n<c;n++){let s=n+p*w[2]+r*w[1]+i*w[0],u=v[s],h=v[s=n+m*w[2]+r*w[1]+i*w[0]],d=v[s=n+p*w[2]+a*w[1]+i*w[0]],c=v[s=n+m*w[2]+a*w[1]+i*w[0]],f=u+(h-u)*b,g=d+(c-d)*b;s=n+l*T[2]+t*T[1]+e*T[0],y.values[s]=f+(g-f)*o}}}else for(let r=0;r<g;++r){let a=g>1?n*(d-1)+r*f:.5*(n+s)*(d-1);if(a<0||a>d-1){for(let n=0;n<c;n++){let a=n+r*T[2]+t*T[1]+e*T[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let n=0;n<c;n++){let a=n+o*w[2]+l*w[1]+i*w[0],s=n+r*T[2]+t*T[1]+e*T[0];y.values[s]=v[a]}}}}return r.makeTensorInfo(y.shape,y.dtype,y.values)}},i4={kernelName:E.jj_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;(0,sD.C)(a,"cumprod");let l=E.C0T.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:l}}));let h=E.C0T.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=(0,E.TuY)(u.dtype,"int32"),d=E.ZSL.makeOnesTypedArray(E.ZSL.sizeFromShape(u.shape),p),c=r.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let r=m(e,t);if(0===t)d[r]=i?1:c[r];else{let n=m(e,t-1);d[r]=i?c[n]*d[n]:c[r]*d[n]}}let g=r.makeTensorInfo(u.shape,p,d);if(null!=l){let e=E.C0T.getUndoAxesPermutation(l),t=(0,it.m)({inputs:{x:g},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(u),t}return g}},i9={kernelName:E.nY8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;(0,sD.C)(a,"cumsum");let l=E.C0T.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:l}}));let h=E.C0T.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=(0,E.TuY)(u.dtype,"int32"),d=E.ZSL.makeZerosTypedArray(E.ZSL.sizeFromShape(u.shape),p),c=r.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let r=m(e,t);if(0===t)d[r]=i?0:c[r];else{let n=m(e,t-1);d[r]=i?c[n]+d[n]:c[r]+d[n]}}let g=r.makeTensorInfo(u.shape,p,d);if(null!=l){let e=E.C0T.getUndoAxesPermutation(l),t=(0,it.m)({inputs:{x:g},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(u),t}return g}},i5={kernelName:E.wNW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(1===a.shape.length){let e=r.data.get(a.dataId).values,t=r.data.get(s.dataId).values,n=(0,i$.X)(e,t,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,n)}if(2===a.shape.length){let e=r.bufferSync(a),t=r.bufferSync(s),n=(0,i$.N)(e,t,i,o);return r.makeTensorInfo(n.shape,s.dtype,n.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},i6={kernelName:E.TMz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n;E.ZSL.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=r.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let r=Math.floor(t/s),n=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=t%s,o=(n*s+i)*c;for(let t=0;t<c;++t){let n=t+o+h*(a+u*(r+l*e));m[g++]=f[n]}}}return r.makeTensorInfo([o,p,d,c],a.dtype,m)}};function i8(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=n;(0,sD.C)([a,s],"depthwiseConv2DNative");let h=E.ZSL.computeStrides(a.shape),p=E.ZSL.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=E.C0T.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,T=new E.ylz(c.outShape,a.dtype),S=r.data.get(a.dataId).values,N=r.data.get(s.dataId).values,k=T.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],r=e*T.strides[0];for(let e=0;e<c.outHeight;++e){let n=r+e*T.strides[1],a=e*c.strideHeight-v;for(let e=0;e<f;++e){let r=a+e*g;if(r<0||r>=c.inHeight)continue;let s=e*p[0],i=t+r*h[1];for(let e=0;e<c.outWidth;++e){let t=n+e*T.strides[2],r=e*c.strideWidth-x;for(let e=0;e<m;++e){let n=r+e*y;if(n<0||n>=c.inWidth)continue;let a=s+e*p[1],o=i+n*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=S[o+e];for(let e=0;e<w;++e)k[l+e]+=t*N[u+e];l+=w,u+=w}}}}}}return r.makeTensorInfo(T.shape,T.dtype,T.values)}let i7={kernelName:E.tGH,backendName:"cpu",kernelFunc:i8},oe={kernelName:E.X$8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=n;(0,sD.C)([a,s],"depthwiseConv2dNativeBackpropFilter");let p=E.C0T.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new E.ylz(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=r.data.get(a.dataId).values,w=new E.ylz(a.shape,a.dtype,v),T=r.data.get(s.dataId).values,S=new E.ylz(s.shape,s.dtype,T);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),r=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let n=0;n<m;++n){let a=Math.max(0,Math.ceil((y-n)/c)),s=Math.min(p.outWidth,(p.inWidth+y-n)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<r;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let r=n+e*c-y;u+=w.get(l,t,r,o)*S.get(l,h,e,i)}}g.set(u,e,n,o,l)}}}return r.makeTensorInfo(g.shape,g.dtype,g.values)}},ot={kernelName:E.nVu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=n;(0,sD.C)([a,s],"depthwiseConv2DNativeBackpropInput");let p=E.ZSL.computeStrides(a.shape),d=E.ZSL.computeStrides(s.shape),c=E.C0T.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new E.ylz(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=r.data.get(a.dataId).values,[v,w,T]=p,S=r.data.get(s.dataId).values,[N,k,I]=d,{batchSize:C,filterHeight:A,filterWidth:$,inChannels:R,inHeight:F,inWidth:_,outChannels:D,outHeight:O,outWidth:L,strideHeight:M,strideWidth:P}=c,z=A-1-c.padInfo.top,B=$-1-c.padInfo.left,W=D/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let r=0;r<F;++r){let n=r-z,a=Math.max(0,Math.ceil(n/M)),s=Math.min(O,(A+n)/M);for(let i=0;i<_;++i){let o=i-B,l=Math.max(0,Math.ceil(o/P)),u=Math.min(L,($+o)/P),h=0;for(let r=a;r<s;++r){let a=r*M-n;for(let n=l;n<u;++n){let s=n*P-o,i=v*e+w*r+T*n,l=N*(A-1-a)+k*($-1-s)+I*t;for(let e=0;e<W;++e)h+=x[i+(t*W+e)]*S[l+e]}}m[g*e+y*r+b*i+t]=h}}return r.makeTensorInfo(f.shape,f.dtype,f.values)}},or={kernelName:E.ORI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=E.ZSL.sizeFromShape(n.shape),s=r.data.get(n.dataId).values,i=(0,E.ra8)([a,a],n.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...n.shape,...n.shape];return r.makeTensorInfo(l,i.dtype,i.values)}},on={kernelName:E.jxD,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a}=e,{strides:s,pad:i,dilations:o}=r,l=t.data.get(n.dataId).values,u=n.shape.length,h=t.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:T,dilationHeight:S,dilationWidth:N,outShape:k}=E.C0T.computeDilation2DInfo(n.shape,a.shape,s,i,"NHWC",o),I=E.ZSL.sizeFromShape(k),C=k.length,A=E.ZSL.getArrayFromDType(n.dtype,I);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let r=t*x-b.top;for(let s=0;s<y;++s){let i=s*v-b.left;for(let o=0;o<m;++o){let d=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){let s=r+t*S;if(s>=0&&s<c)for(let r=0;r<T;++r){let c=i+r*N;if(c>=0&&c<f){let i=E.ZSL.locToIndex([e,s,c,o],u,E.ZSL.computeStrides(n.shape)),f=E.ZSL.locToIndex([t,r,o],p,E.ZSL.computeStrides(a.shape)),m=l[i]+h[f];m>d&&(d=m)}}}A[E.ZSL.locToIndex([e,t,s,o],C,E.ZSL.computeStrides(k))]=d}}}return{dataId:t.write(E.ZSL.toTypedArray(A,n.dtype),k,n.dtype),shape:k,dtype:n.dtype}}},oa={kernelName:E.pk0,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=r,u=E.ZSL.toNestedArray(n.shape,t.data.get(n.dataId).values),h=E.ZSL.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:c,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:v,filterWidth:w,dilationHeight:T,dilationWidth:S,outShape:N}=E.C0T.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC",l);E.ZSL.assert(s.rank===N.length,()=>`Error in ${E.pk0}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let k=E.ZSL.toNestedArray(N,t.data.get(s.dataId).values),I=E.ZSL.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<m;++t){let r=t*b-y.top;for(let n=0;n<g;++n){let a=n*x-y.left;for(let s=0;s<f;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){let n=r+t*T;if(n>=0&&n<d)for(let r=0;r<w;++r){let p=a+r*S;if(p>=0&&p<c){let a=u[e][n][p][s]+h[t][r][s];a>i&&(i=a,o=t,l=r)}}}I[o][l][s]+=k[e][t][n][s]}}}return{dataId:t.write(E.ZSL.toTypedArray(I,n.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},os={kernelName:E.bP9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=r,u=E.ZSL.toNestedArray(n.shape,t.data.get(n.dataId).values),h=E.ZSL.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:c,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:v,filterWidth:w,dilationHeight:T,dilationWidth:S,outShape:N}=E.C0T.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC",l);E.ZSL.assert(s.rank===N.length,()=>`Error in ${E.bP9}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let k=E.ZSL.toNestedArray(N,t.data.get(s.dataId).values),I=E.ZSL.makeZerosNestedTypedArray(n.shape,n.dtype);for(let e=0;e<p;++e)for(let t=0;t<m;++t){let r=t*b-y.top;for(let n=0;n<g;++n){let a=n*x-y.left;for(let s=0;s<f;++s){let i=Number.MIN_SAFE_INTEGER,o=r<0?0:r,l=a<0?0:a;for(let t=0;t<v;++t){let n=r+t*T;if(n>=0&&n<d)for(let r=0;r<w;++r){let p=a+r*S;if(p>=0&&p<c){let a=u[e][n][p][s]+h[t][r][s];a>i&&(i=a,o=n,l=p)}}}I[e][o][l][s]+=k[e][t][n][s]}}}return{dataId:t.write(E.ZSL.toTypedArray(I,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},oi={kernelName:E.XmO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a}=t,{canvas:s,options:i}=n,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,h=(null==o?void 0:o.contextType)||"2d";if("2d"!==h)throw Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let p=s.getContext(h,(null==o?void 0:o.contextAttributes)||{});if(null==p)throw Error(`Could not get the context with ${h} type.`);let[d,c]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=r.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*d*4);for(let e=0;e<d*c;++e){let t=[0,0,0,255*u];for(let r=0;r<f;r++){let n=m[e*f+r];if("float32"===a.dtype){if(n<0||n>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${n}.`)}else if("int32"===a.dtype&&(n<0||n>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${n}.`);1===f?(t[0]=n*g,t[1]=n*g,t[2]=n*g):t[r]=n*g}let r=4*e;y[r+0]=Math.round(t[0]),y[r+1]=Math.round(t[1]),y[r+2]=Math.round(t[2]),y[r+3]=Math.round(t[3])}s.width=c,s.height=d;let b=new ImageData(y,c,d);return p.putImageData(b,0,0),a}};var oo=r(24686),ol=r(93565);function ou(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a;(0,sD.C)(s,"sum");let l=(t="bool"===s.dtype?(0,iD.wg)({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):(0,sB.D)({inputs:{x:s},backend:n})).shape.length,u=E.ZSL.parseAxisParam(i,t.shape),h=E.C0T.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=(0,it.m)({inputs:{x:t},backend:n,attrs:{perm:h}}),p=E.C0T.getInnerMostAxes(p.length,l)),E.C0T.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=E.C0T.computeOutAndReduceShapes(d.shape,p),m=E.C0T.upcastType(d.dtype,"int32"),g=(0,ol.U)(n,c,m),y=E.ZSL.sizeFromShape(f),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){let t=e*y,r=0;for(let e=0;e<y;++e)r+=x[t+e];b[e]=r}if(o){let e=E.C0T.expandShapeToKeepDim(g.shape,u),t=g;g=s0({inputs:{x:g},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(t),null!=h&&n.disposeIntermediateTensorInfo(d),g}let oh={kernelName:E.WuN,backendName:"cpu",kernelFunc:ou},op={kernelName:E.Qgm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,{allDims:s,summedDims:i,idDims:o}=E.C0T.decodeEinsumEquation(a,t.length);E.C0T.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=E.C0T.getEinsumComputePath(i,o),h=u.length,p=null,d=s.length,c=[];for(let e=0;e<h;++e){for(let n of u[e]){let e;let{permutationIndices:a,expandDims:s}=E.C0T.getEinsumPermutation(d,o[n]);E.C0T.isIdentityPermutation(a)?e=t[n]:(e=(0,it.m)({inputs:{x:t[n]},backend:r,attrs:{perm:a}}),c.push(e));let i=e.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);E.ZSL.arraysEqual(e.shape,i)||(e=s0({inputs:{x:e},backend:r,attrs:{shape:i}}),c.push(e)),null===p?p=e:(p=(0,oo.lw)({inputs:{a:e,b:p},backend:r}),c.push(p))}e<h-1&&(l[e]>=0&&(p=ou({inputs:{x:p},backend:r,attrs:{axis:l[e]-(s.length-d),keepDims:!1}}),c.push(p)),d--)}for(let e of c)e!==p&&r.disposeIntermediateTensorInfo(e);return p}},od={kernelName:E.rsH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{dy:n,y:a}=t;(0,sD.C)([n,a],"eluGrad");let s=new Float32Array(E.ZSL.sizeFromShape(a.shape)),i=r.data.get(a.dataId).values,o=r.data.get(n.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];t>=0?s[e]=o[e]:s[e]=o[e]*(t+1)}return r.makeTensorInfo(a.shape,"float32",s)}};var oc=r(42486);let of=E.C0T.ERF_P,om=E.C0T.ERF_A1,og=E.C0T.ERF_A2,oy=E.C0T.ERF_A3,ob=E.C0T.ERF_A4,ox=E.C0T.ERF_A5,ov=(0,sM.v)(E._s9,e=>{let t=Math.sign(e),r=Math.abs(e),n=1/(1+of*r);return t*(1-((((ox*n+ob)*n+oy)*n+og)*n+om)*n*Math.exp(-r*r))}),ow={kernelName:E._s9,backendName:"cpu",kernelFunc:ov};var oT=r(65085);function oS(e){let{inputs:t,backend:r,attrs:n}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(E.ZSL.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),s0({inputs:{x:a},backend:r,attrs:{shape:o}})}let oN={kernelName:E.ybN,backendName:"cpu",kernelFunc:oS};var ok=r(60615);let oI=(0,sU.Z)((e,t)=>e/t),oC=(0,ic.j)(E.sDr,oI),oE={kernelName:E.sDr,backendName:"cpu",kernelFunc:oC};var oA=r(15444);function o$(e,t,r){let n=e.shape,a=n[0],s=n[1],i=r.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=E.ZSL.sizeFromShape(u),p=E.ZSL.getTypedArrayFromDType("float32",h),d=E.ZSL.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let n=(0,iE.di)({inputs:{x:o},backend:r,attrs:{begin:[e,0],size:[1,s]}}),a=(0,iE.di)({inputs:{x:l},backend:r,attrs:{begin:[e,0],size:[1,s]}}),i=(0,iP.f)({inputs:{real:n,imag:a},backend:r}),{real:u,imag:h}=function(e,t,r){let n=E.ZSL.sizeFromShape(e.shape),a=r.data.get(e.dataId),s=r.data.get(a.complexTensorInfos.real.dataId).values,i=r.data.get(a.complexTensorInfos.imag.dataId).values;if((n&n-1)==0){let a=function e(t,r,n,a,s){if(1===n)return{real:t,imag:r};let i=E.C0T.mergeRealAndImagArrays(t,r),o=n/2,l=E.C0T.complexWithEvenIndex(i),u=l.real,h=l.imag,p=[u.length],d=s.makeTensorInfo(p,"float32",u),c=s.makeTensorInfo(p,"float32",h),f=(0,iP.f)({inputs:{real:d,imag:c},backend:s}),m=E.C0T.complexWithOddIndex(i),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),w=(0,iP.f)({inputs:{real:x,imag:v},backend:s}),T=e(u,h,o,a,s),S=T.real,N=T.imag,k=[S.length],I=s.makeTensorInfo(k,"float32",S),C=s.makeTensorInfo(k,"float32",N),A=(0,iP.f)({inputs:{real:I,imag:C},backend:s}),$=e(g,y,o,a,s),R=$.real,F=$.imag,_=[R.length],D=s.makeTensorInfo(_,"float32",R),O=s.makeTensorInfo(_,"float32",F),L=(0,iP.f)({inputs:{real:D,imag:O},backend:s}),M=E.C0T.exponents(n,a),P=[M.real.length],z=s.makeTensorInfo(P,"float32",M.real),B=s.makeTensorInfo(P,"float32",M.imag),W=(0,iP.f)({inputs:{real:z,imag:B},backend:s}),V=(0,oo.lw)({inputs:{a:W,b:L},backend:s}),U=(0,sJ.WQ)({inputs:{a:A,b:V},backend:s}),G=(0,oA.jb)({inputs:{a:A,b:V},backend:s}),Z=(0,iU.x)({inputs:{input:U},backend:s}),j=(0,iU.x)({inputs:{input:G},backend:s}),K=iW({inputs:{input:U},backend:s}),H=iW({inputs:{input:G},backend:s}),Y=iG({inputs:[Z,j],backend:s,attrs:{axis:0}}),Q=iG({inputs:[K,H],backend:s,attrs:{axis:0}}),q=s.data.get(Y.dataId).values,X=s.data.get(Q.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(Q),{real:q,imag:X}}(s,i,n,t,r),o=[e.shape[0],e.shape[1]];if(t){let e=r.makeTensorInfo(o,"float32",a.real),t=r.makeTensorInfo(o,"float32",a.imag),s=r.makeTensorInfo([],"float32",E.ZSL.createScalarValue(n,"float32")),i=(0,sB.D)({inputs:{x:s},backend:r}),l=oE.kernelFunc({inputs:{a:e,b:s},backend:r}),u=oE.kernelFunc({inputs:{a:t,b:i},backend:r}),h=r.data.get(l.dataId).values,p=r.data.get(u.dataId).values;return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=function(e,t,r){let n=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let n=0;n<t;n++){let o=E.C0T.exponent(a*n,t,r),l=E.C0T.getComplexWithIndex(e,n);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}r&&(s/=t,i/=t),E.C0T.assignToTypedArray(n,s,i,a)}return n}(E.C0T.mergeRealAndImagArrays(s,i),n,t);return E.C0T.splitRealAndImagArrays(e)}}(i,t,r),c=E.C0T.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let r=E.C0T.getComplexWithIndex(c,t);p[e*s+t]=r.real,d[e*s+t]=r.imag}r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i)}let c=r.makeTensorInfo(u,"float32",p),f=r.makeTensorInfo(u,"float32",d),m=(0,iP.f)({inputs:{real:c,imag:f},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}let oR={kernelName:E.rGP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t,a=E.ZSL.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=s0({inputs:{x:n},backend:r,attrs:{shape:[a/s,s]}}),o=o$(i,!1,r),l=s0({inputs:{x:o},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}};function oF(e){let{backend:t,attrs:r}=e,{shape:n,value:a,dtype:s}=r,i=s||E.ZSL.inferDtype(a),o=E.ZSL.getArrayFromDType(i,E.ZSL.sizeFromShape(n));return function(e,t,r){e.fill(t)}(o,a,0),t.makeTensorInfo(n,i,o)}let o_={kernelName:E.SQl,backendName:"cpu",kernelFunc:oF},oD={kernelName:E.BxF,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,a=E.ZSL.getTypedArrayFromDType(n.dtype,E.ZSL.sizeFromShape(n.shape)),[s,i,o,l]=n.shape,u=r.data.get(n.dataId).values;for(let e=0;e<s;e++){let t=e*o*i*l;for(let e=0;e<i;e++){let r=o*l*e;for(let e=0;e<o;e++){let n=e*l;for(let s=0;s<l;s++){let i=Math.round(o-e-1),h=t+r+n+s,p=u[h];i>=0&&i<o&&(p=u[t+r+i*l+s]),a[h]=p}}}}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var oO=r(92464);let oL=(0,sU.Z)((e,t)=>Math.floor(e/t)),oM=(0,ic.j)(E.ElG,oL,null,"int32"),oP={kernelName:E.ElG,backendName:"cpu",kernelFunc:oM},oz={kernelName:E.aAr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=ij({inputs:{x:a,filter:s},backend:r,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===h&&1===i.shape.length&&1!==i.shape[0]){let e=s0({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}});m=(0,sJ.WQ)({inputs:{a:m,b:e},backend:r}),r.disposeIntermediateTensorInfo(e)}else m=(0,sJ.WQ)({inputs:{a:m,b:i},backend:r});r.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===h&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=s0({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}});m=sX(r,m,c,e,f),r.disposeIntermediateTensorInfo(e)}else m=sX(r,m,c,o,f);r.disposeIntermediateTensorInfo(e)}return m}},oB={kernelName:E.T7M,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=i8({inputs:{x:a,filter:s},backend:r,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=(0,sJ.WQ)({inputs:{a:m,b:i},backend:r}),r.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=sX(r,m,c,o,f),r.disposeIntermediateTensorInfo(e)}return m}};var oW=r(17370);let oV={kernelName:E.O4G,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=E.ZSL.sizeFromShape(n.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=E.C0T.prepareAndValidate(n,a);if(0===u)return r.makeTensorInfo(l,n.dtype,[]);let d=r.data.get(a.dataId).values,c=r.bufferSync(n),f=(0,oW.q)(d,c,n.dtype,u,o,h,p,n.shape,s);return r.makeTensorInfo(l,n.dtype,f.values)}};var oU=r(17108);let oG={kernelName:E.mxL,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n;(0,sD.C)([a,s],"gatherV2");let l=E.ZSL.parseAxisParam(i,a.shape)[0],u=r.data.get(s.dataId).values,h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];E.ZSL.assert(t<=h-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`)}let p=o;null==o&&(p=0);let d=E.ZSL.sizeFromShape(s.shape),c=E.C0T.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=s0({inputs:{x:a},backend:r,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=s0({inputs:{x:s},backend:r,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=r.bufferSync(m),b=r.bufferSync(f),x=(0,oU.G)(b,y,g);return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.makeTensorInfo(c.outputShape,x.dtype,x.values)}};var oZ=r(6080),oj=r(39772);let oK={kernelName:E.OAQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t,a=E.ZSL.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=s0({inputs:{x:n},backend:r,attrs:{shape:[a/s,s]}}),o=o$(i,!0,r),l=s0({inputs:{x:o},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}},oH=(0,sM.v)(E.gIW,e=>Number.isFinite(e)?1:0,"bool"),oY={kernelName:E.gIW,backendName:"cpu",kernelFunc:oH},oQ=(0,sM.v)(E.E3$,e=>Math.abs(e)===1/0?1:0,"bool"),oq={kernelName:E.E3$,backendName:"cpu",kernelFunc:oQ},oX=(0,sM.v)(E.iPs,e=>Number.isNaN(e)?1:0,"bool"),oJ={kernelName:E.iPs,backendName:"cpu",kernelFunc:oX};var o0=r(54739),o1=r(65225),o2=r(83360);let o3={kernelName:E.mnI,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=(0,o2.G)(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}};var o4=r(78036);let o9=(0,sM.v)(E.Cg$,e=>Math.log1p(e)),o5={kernelName:E.Cg$,backendName:"cpu",kernelFunc:o9},o6=(0,sU.Z)((e,t)=>e&&t),o8=(0,ic.j)(E.RUm,o6,null,"bool"),o7={kernelName:E.RUm,backendName:"cpu",kernelFunc:o8},le=(0,sM.v)(E.nZd,e=>e?0:1,"bool"),lt={kernelName:E.nZd,backendName:"cpu",kernelFunc:le},lr=(0,sU.Z)((e,t)=>e||t),ln=(0,ic.j)(E.LXA,lr,null,"bool"),la={kernelName:E.LXA,backendName:"cpu",kernelFunc:ln},ls={kernelName:E.jM4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;(0,sD.C)(a,"LRN");let u=a.shape[3],h=u-1,p=r.data.get(a.dataId).values,d=E.ZSL.sizeFromShape(a.shape),c=new Float32Array(d);for(let e=0;e<d;e++){let t=function(e){let t=e%u,r=e-t+Math.max(0,t-s),n=e-t+Math.min(t+s,h),a=0;for(;r<=n;r++){let e=p[r];a+=e*e}return a}(e),r=p[e]*Math.pow(i+o*t,-l);c[e]=r}return r.makeTensorInfo(a.shape,a.dtype,c)}},li={kernelName:E.ToN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=n;(0,sD.C)(i,"LRNGrad");let p=E.ZSL.sizeFromShape(i.shape),d=i.shape[3],c=r.data.get(i.dataId).values,f=r.data.get(a.dataId).values,m=r.data.get(s.dataId).values,g=new Float32Array(p);for(let e=0;e<p;e++){let t=e%d,r=e-t+Math.max(0,t-o),n=e-t+Math.min(d,t+o+1),a=0;for(let e=r;e<n;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=r;t<n;t++){let r=-2*u*h*f[t]*m[e]/a;e===t&&(r+=Math.pow(a,-h)),r*=c[e],g[t]+=r}}return r.makeTensorInfo(i.shape,a.dtype,g)}};var lo=r(9927),ll=r(59848);function lu(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n,o=a.shape,l=o.length,u=E.ZSL.parseAxisParam(s,o),h=u,p=E.C0T.getAxesPermutation(h,l),d=r.data.get(a.dataId).values;if(null!=p){let e=Array(l);for(let t=0;t<e.length;t++)e[t]=o[p[t]];d=(0,ll._)(d,o,a.dtype,p,e),h=E.C0T.getInnerMostAxes(h.length,l),o=e}(0,sD.C)(a,"max"),E.C0T.assertAxesAreInnerMostDims("max",h,l);let[c,f]=E.C0T.computeOutAndReduceShapes(o,h),m=E.ZSL.sizeFromShape(f),g=(0,lo.j)(d,m,c,a.dtype),y=r.write(g,c,a.dtype),b=c;return i&&(b=E.C0T.expandShapeToKeepDim(c,u)),{dataId:y,shape:b,dtype:a.dtype}}let lh={kernelName:E.VAI,backendName:"cpu",kernelFunc:lu};var lp=r(31144);let ld={kernelName:E.t3d,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r;(0,sD.C)(s,"maxPool");let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let h=E.C0T.computePool2DInfo(s.shape,i,o,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&E.ZSL.arraysEqual(h.inShape,h.outShape))t=(0,sB.D)({inputs:{x:s},backend:n});else{let e=n.data.get(s.dataId).values,r=E.ZSL.computeStrides(s.shape),a=iv(e,s.shape,s.dtype,r,h,"max");t=n.makeTensorInfo(h.outShape,s.dtype,a.values)}return t}},lc={kernelName:E.ySp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;(0,sD.C)(a,"maxPool3d");let h=E.C0T.computePool3DInfo(a.shape,s,i,1,o,l,u),p=iT(r.data.get(a.dataId).values,a.shape,a.dtype,E.ZSL.computeStrides(a.shape),h,"max");return r.makeTensorInfo(p.shape,"float32",p.values)}},lf={kernelName:E.cHb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;(0,sD.C)([a,s],"maxPool3DGrad");let h=E.C0T.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let r=(0,E.ra8)(t.outShape,"int32"),n=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*n-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let n=0;n<t.outHeight;++n){let u=n*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,T=c;for(;T<0;)T+=l;let S=Math.min(t.inWidth,p+c),N=Number.NEGATIVE_INFINITY,k=-1;for(let t=x;t<v;t+=i){let r=t-b;for(let n=d;n<w;n+=o){let a=n-u;for(let s=T;s<S;s+=l){let i=s-c,o=e.get(m,t,n,s,g);o>=N&&(N=o,k=r*h*p+a*h+i)}}}r.set(k,m,y,n,a,g)}}}return r}(r.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=b-1-h.padInfo.front,T=v-1-h.padInfo.left,S=x-1-h.padInfo.top,N=(0,E.ra8)(s.shape,"float32"),k=r.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let r=0;r<h.inDepth;++r)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){let s=r-w,i=n-S,o=a-T,l=0;for(let r=0;r<b;r+=m){let n=(s+r)/d;if(!(n<0)&&!(n>=h.outDepth)&&Math.floor(n)===n)for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0)&&!(s>=h.outHeight)&&Math.floor(s)===s)for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-p.get(e,n,s,u,t)===r*x*v+a*v+i?1:0;0!==d&&(l+=k.get(e,n,s,u,t)*d)}}}N.set(l,e,r,n,a,t)}return r.makeTensorInfo(N.shape,N.dtype,N.values)}},lm={kernelName:E.RXX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t;(0,sD.C)([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=n,p=E.C0T.computePool2DInfo(s.shape,o,l,1,u,h),d=r.data.get(s.dataId).values,c=(0,E.ra8)(p.outShape,s.dtype,iw(d,s.shape,s.dtype,p).values),f=p.strideHeight,m=p.strideWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,v=x-1-p.padInfo.left,w=b-1-p.padInfo.top,T=(0,E.ra8)(s.shape,"float32"),S=r.data.get(a.dataId).values,N=(0,E.ra8)(a.shape,"float32",S);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let r=0;r<p.inHeight;++r)for(let n=0;n<p.inWidth;++n){let a=r-w,s=n-v,i=0;for(let r=0;r<b;r+=g){let n=(a+r)/f;if(!(n<0)&&!(n>=p.outHeight)&&Math.floor(n)===n)for(let a=0;a<x;a+=y){let o=(s+a)/m;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;let l=b*x-1-c.get(e,n,o,t)===r*x+a?1:0;0!==l&&(i+=N.get(e,n,o,t)*l)}}T.set(i,e,r,n,t)}return r.makeTensorInfo(T.shape,T.dtype,T.values)}},lg={kernelName:E.TL8,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;(0,sD.C)(n,"MaxPoolWithArgmax");let l=r.data.get(n.dataId).values,u=E.C0T.computePool2DInfo(n.shape,a,s,[1,1],i),[h,p]=function(e,t,r,n,a){let s=E.ZSL.computeStrides(t),i=iv(e,t,r,s,a,"max"),o=iw(e,t,r,a,!0,n);return[i.values,o.values]}(l,n.shape,n.dtype,o,u),d=r.write(h,u.outShape,n.dtype),c=r.write(p,u.outShape,n.dtype);return[{dataId:d,shape:u.outShape,dtype:n.dtype},{dataId:c,shape:u.outShape,dtype:"int32"}]}},ly={kernelName:E.g5A,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=E.ZSL.parseAxisParam(s,a.shape),l=E.C0T.computeOutAndReduceShapes(a.shape,o)[1],u=E.ZSL.sizeFromShape(l),h=[],p=r.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=(0,iD.wg)({inputs:{x:a},backend:r,attrs:{dtype:"float32"}});h.push(d);let c=oC({inputs:{a:d,b:p},backend:r});h.push(c);let f=ou({inputs:{x:c},backend:r,attrs:{axis:s,keepDims:i}});return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),f}},lb={kernelName:E.lNG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;(0,sD.C)(a,"min");let o=E.ZSL.parseAxisParam(s,a.shape),l=o,u=E.C0T.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=(0,it.m)({inputs:{x:a},backend:r,attrs:{perm:u}}),l=E.C0T.getInnerMostAxes(l.length,a.shape.length)),E.C0T.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=E.C0T.computeOutAndReduceShapes(h.shape,l),c=E.ZSL.sizeFromShape(d),f=E.ZSL.makeZerosTypedArray(E.ZSL.sizeFromShape(p),h.dtype),m=r.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,r=m[t];for(let e=0;e<c;++e){let n=m[t+e];(Number.isNaN(n)||n<r)&&(r=n)}f[e]=r}null!=u&&r.disposeIntermediateTensorInfo(h);let g=r.makeTensorInfo(p,h.dtype,f);if(i){let e=s0({inputs:{x:g},backend:r,attrs:{shape:E.C0T.expandShapeToKeepDim(p,o)}});return r.disposeIntermediateTensorInfo(g),e}return g}};var lx=r(91122);let lv={kernelName:E.x7F,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,mode:i}=n;(0,sD.C)(a,"mirrorPad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+a.shape[t]),h="reflect"===i?0:1,p=r.data.get(a.dataId).values,d=a.shape.length,c=E.ZSL.computeStrides(a.shape),f=E.ZSL.sizeFromShape(o),m=o.length,g=E.ZSL.computeStrides(o),y=E.ZSL.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=E.ZSL.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=(u[e]-1)*2-t[e]+h);t=t.map((e,t)=>e-l[t]);let r=E.ZSL.locToIndex(t,d,c);y[e]=p[r]}return{dataId:r.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},lw=(0,sU.Z)((e,t)=>{let r=e%t;return e<0&&t<0||e>=0&&t>=0?r:(r+t)%t}),lT=(0,ic.j)(E.BLA,lw),lS={kernelName:E.BLA,backendName:"cpu",kernelFunc:lT};function lN(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=E.ZSL.parseAxisParam([o],a.shape),u=lu({inputs:{x:a},backend:r,attrs:{reductionIndices:l,keepDims:!1}}),h=E.C0T.expandShapeToKeepDim(u.shape,l),p=s0({inputs:{x:u},backend:r,attrs:{shape:h}}),d=(0,oA.jb)({inputs:{a:a,b:p},backend:r}),c=(0,oT.oN)({inputs:{x:d},backend:r}),f=ou({inputs:{x:c},backend:r,attrs:{axis:l,keepDims:!1}}),m=s0({inputs:{x:f},backend:r,attrs:{shape:h}}),g=oC({inputs:{a:c,b:m},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}let lk={kernelName:E.rFG,backendName:"cpu",kernelFunc:lN},lI={kernelName:E.WT3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n;(0,sD.C)(a,"multinomial");let l=o?a:lN({inputs:{logits:a},backend:r,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=r.data.get(l.dataId).values,d=[u,s],c=E.ZSL.makeZerosTypedArray(E.ZSL.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,r=new Float32Array(h-1);r[0]=p[t];for(let e=1;e<r.length;++e)r[e]=r[e-1]+p[t+e];let n=sr.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=n();c[a+e]=r.length;for(let n=0;n<r.length;n++)if(t<r[n]){c[a+e]=n;break}}}return o||r.disposeIntermediateTensorInfo(l),r.makeTensorInfo(d,"int32",c)}};var lC=r(88456);let lE=E.kpo.c7,lA={kernelName:E.SDM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n;(0,sD.C)(a,"NonMaxSuppression");let{selectedIndices:u}=lE(r.data.get(a.dataId).values,r.data.get(s.dataId).values,i,o,l);return r.makeTensorInfo([u.length],"int32",new Int32Array(u))}},l$=E.kpo.ZS,lR={kernelName:E.Zl4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n;(0,sD.C)(a,"NonMaxSuppressionPadded");let{selectedIndices:h,validOutputs:p}=l$(r.data.get(a.dataId).values,r.data.get(s.dataId).values,i,o,l,u);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([],"int32",new Int32Array([p]))]}},lF=E.kpo.ut,l_={kernelName:E.e0f,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n;(0,sD.C)(a,"NonMaxSuppressionWithScore");let{selectedIndices:h,selectedScores:p}=lF(r.data.get(a.dataId).values,r.data.get(s.dataId).values,i,o,l,u);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([p.length],"float32",new Float32Array(p))]}};var lD=r(17329);let lO={kernelName:E.urI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n;(0,sD.C)(a,"oneHot");let u=E.ZSL.sizeFromShape(a.shape),h=new Float32Array(u*i);h.fill(l);let p=r.data.get(a.dataId).values;for(let e=0;e<u;++e)p[e]>=0&&p[e]<i&&(h[e*i+p[e]]=o);return r.makeTensorInfo([...a.shape,i],s,h)}};function lL(e){let{inputs:t,backend:r}=e,{x:n}=t;if("string"===n.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==n.dtype)return oF({backend:r,attrs:{shape:n.shape,value:0,dtype:n.dtype}});{let e=(0,iU.x)({inputs:{input:n},backend:r}),t=lL({inputs:{x:e},backend:r}),a=iW({inputs:{input:n},backend:r}),s=lL({inputs:{x:a},backend:r}),i=(0,iP.f)({inputs:{real:t,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),i}}let lM={kernelName:E.xJ3,backendName:"cpu",kernelFunc:lL},lP={kernelName:E.LWX,backendName:"cpu",kernelFunc:function e(t){let{inputs:r,backend:n}=t,{x:a}=r;if("string"===a.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==a.dtype)return oF({backend:n,attrs:{shape:a.shape,value:1,dtype:a.dtype}});{let t=(0,iU.x)({inputs:{input:a},backend:n}),r=e({inputs:{x:t},backend:n}),s=iW({inputs:{input:a},backend:n}),i=lL({inputs:{x:s},backend:n}),o=(0,iP.f)({inputs:{real:r,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}}};function lz(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(1===t.length)return oS({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{E.ZSL.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),E.ZSL.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=iG({inputs:t.map(e=>{let t=oS({inputs:{input:e},backend:r,attrs:{dim:a}});return o.push(t),t}),backend:r,attrs:{axis:a}});return o.forEach(e=>r.disposeIntermediateTensorInfo(e)),l}let lB={kernelName:E.mM$,backendName:"cpu",kernelFunc:lz},lW={kernelName:E.ODT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;(0,sD.C)(a,"pad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=r.data.get(a.dataId).values,h=E.ZSL.sizeFromShape(a.shape),p=a.shape.length,d=E.ZSL.computeStrides(a.shape),c=E.ZSL.sizeFromShape(o),f=o.length,m=E.ZSL.computeStrides(o),g=E.ZSL.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=E.ZSL.indexToLoc(e,p,d).map((e,t)=>e+l[t]);g[E.ZSL.locToIndex(t,f,m)]=u[e]}return{dataId:r.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},lV=(0,sU.Z)((e,t)=>Math.pow(e,t)),lU=(0,ic.j)(E.pyJ,lV),lG={kernelName:E.pyJ,backendName:"cpu",kernelFunc:lU};var lZ=r(67055),lj=r(22966);let lK={kernelName:E.oJ2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,l=a.map(e=>r.data.get(e.dataId).values),u=a.map(e=>e.shape),h=r.data.get(s.dataId).values,p=r.data.get(i.dataId).values,[d,c,f]=(0,lj.u)(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map(e=>r.makeTensorInfo([e.length],"int32",e)),g=r.makeTensorInfo(f,s.dtype,c);return m.concat([g])}};var lH=r(48424);let lY={kernelName:E.CQC,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:s}=t,i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,h]=(0,lH._)(i,n.shape,n.dtype,o,a.shape,l,s.shape);return[r.makeTensorInfo([u.length],"int32",u),r.makeTensorInfo([h.length],n.dtype,h)]}};var lQ=r(85768);let lq={kernelName:E.mH5,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=n,u=r.data.get(a.dataId).values,h=r.data.get(s.dataId).values,p=r.data.get(i.dataId).values,d=o.map(e=>r.data.get(e.dataId).values),c=o.map(e=>e.shape),[f,m]=(0,lQ.K)(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return r.makeTensorInfo(f,s.dtype,m)}};var lX=r(77778);let lJ={kernelName:E.Q6t,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,dtype:s,step:i}=r,o=(0,lX.q)(n,a,i,s);return t.makeTensorInfo([o.length],s,o)}},l0=(0,sM.v)(E.huO,e=>1/e),l1={kernelName:E.huO,backendName:"cpu",kernelFunc:l0},l2={kernelName:E.hgw,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;(0,sD.C)(a,"resizeBilinear");let l=E.ZSL.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(E.ZSL.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let r;let n=Math.max(0,Math.floor(r=i?v*(t+.5)-.5:v*t)),a=r-n,s=Math.min(d-1,Math.ceil(r)),o=e*l[0]+n*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t;let r=Math.max(0,Math.floor(t=i?w*(e+.5)-.5:w*e)),n=t-r,s=Math.min(c-1,Math.ceil(t)),h=o+r*l[2],p=u+r*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],r=m[p+e],s=m[d+e],i=m[y+e],o=t+(s-t)*n,l=o+(r+(i-r)*n-o)*a;g[x++]=l}}}return r.makeTensorInfo([p,u,h,f],"float32",g)}},l3={kernelName:E.FCQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;(0,sD.C)([s,a],"resizeBilinearGrad");let o=E.ZSL.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=r.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let r=e*y,n=Math.floor(r),a=Math.min(Math.ceil(r),u-1),s=t+n*o[1],i=t+a*o[1],l=r-n,d=1-l;for(let e=0;e<c;e++){let t=e*b,r=Math.floor(t),n=Math.min(Math.ceil(t),h-1),a=t-r,u=1-a,c=s+r*o[2],m=s+n*o[2],g=i+r*o[2],y=i+n*o[2],w=d*u,T=d*a,S=l*u,N=l*a;for(let e=0;e<p;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*T,f[g+e]+=t*S,f[y+e]+=t*N}}}}return r.makeTensorInfo([l,h,u,p],"float32",f)}},l4={kernelName:E.jOE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;(0,sD.C)(a,"resizeNearestNeighbor");let l=E.ZSL.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let r=i?x*(e+.5):x*e,n=Math.min(d-1,s?Math.round(r):Math.floor(r));i&&(n=Math.max(0,n));let a=t+n*l[1];for(let e=0;e<h;e++){let t=i?v*(e+.5):v*e,r=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(r=Math.max(0,r));let n=a+r*l[2];for(let e=0;e<f;e++){let t=m[n+e];g[w++]=t}}}}return r.makeTensorInfo([p,u,h,f],a.dtype,g)}},l9={kernelName:E.XQy,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;(0,sD.C)([s,a],"resizeNearestNeighborGrad");let o=E.ZSL.computeStrides(a.shape),l=E.ZSL.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=r.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,T=1/v,S=2*Math.ceil(w)+2,N=2*Math.ceil(T)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let r=t+e*o[1],n=Math.floor(Math.floor(e*w)-S/2);for(let a=0;a<p;a++){let s=r+a*o[2],u=Math.floor(Math.floor(a*T)-N/2);for(let r=0;r<d;r++){let o=0;for(let s=0;s<S;s++){let d=s+n;if(d<0||d>=c)continue;let m=t+d*l[1],y=d*x;if(e===Math.min(h-1,i?Math.round(y):Math.floor(y)))for(let e=0;e<N;e++){let t=e+u;if(t<0||t>=f)continue;let n=m+t*l[2],s=t*v;a===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[n+r])}}m[s+r]=o}}}}return r.makeTensorInfo(a.shape,a.dtype,m)}},l5={kernelName:E.D7i,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n;(0,sD.C)(a,"reverse");let i=a.shape.length,o=E.ZSL.parseAxisParam(s,a.shape);if(0===i)return(0,sB.D)({inputs:{x:a},backend:r});let l=new E.ylz(a.shape,a.dtype),u=r.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),r=t.slice();o.forEach(e=>r[e]=a.shape[e]-1-r[e]),l.set(u.get(...r),...t)}return r.makeTensorInfo(l.shape,l.dtype,l.values)}},l6={kernelName:E.BK4,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=E.ZSL.getTypedArrayFromDType(n.dtype,E.ZSL.sizeFromShape(n.shape)),[l,u,h,p]=n.shape,[d,c]=E.C0T.getImageCenter(i,u,h),f=Math.sin(a),m=Math.cos(a),g=r.data.get(n.dataId).values;for(let e=0;e<l;e++){let t=e*h*u*p;for(let e=0;e<u;e++){let r=h*p*e;for(let n=0;n<h;n++){let a=n*p;for(let i=0;i<p;i++){let y=[l,e,n,i],b=y[2],x=y[1],v=(b-d)*m-(x-c)*f,w=(b-d)*f+(x-c)*m;v=Math.round(v+d),w=Math.round(w+c);let T=s;"number"!=typeof s&&(T=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<u&&(T=g[t+h*p*w+v*p+i]),o[t+r+a+i]=T}}}}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},l8=(0,sM.v)(E.hVg,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),l7={kernelName:E.hVg,backendName:"cpu",kernelFunc:l8};var ue=r(12634),ut=r(487);let ur={kernelName:E.pJc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=E.C0T.calculateShapes(s,a,i),d=r.bufferSync(a),c=r.bufferSync(s),f=(0,ut.b)(d,c,i,p,u,l,o,h,0,!0);return r.makeTensorInfo(i,f.dtype,f.values)}},un={kernelName:E.uWl,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=function(e,t,r,n,a,s){let i=E.ZSL.getArrayFromDType("int32",r*a);for(let o=0;o<r;++o){let r=e.slice(o*n,(o+1)*n),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?function(e,t){let r=0,n=e.length,a=0;for(;r<n;)e[a=Math.floor((r+n)/2)]<t?r=a+1:n=a;return n}(r,t[e+l]):function(e,t){let r=0,n=e.length,a=0;for(;r<n;)e[a=Math.floor((r+n)/2)]<=t?r=a+1:n=a;return n}(r,t[e+l])}return i}(r.data.get(a.dataId).values,r.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return r.makeTensorInfo(s.shape,"int32",o)}},ua={kernelName:E.l6P,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t;(0,sD.C)([n,a,s],"select");let i=n.shape.length,o=r.data.get(n.dataId).values,l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,h=(0,E.TuY)(a.dtype,s.dtype),p=E.ZSL.makeZerosTypedArray(E.ZSL.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:E.ZSL.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return r.makeTensorInfo(a.shape,h,p)}},us=E.C0T.SELU_SCALEALPHA,ui=E.C0T.SELU_SCALE,uo=(0,sM.v)(E.u$b,e=>e>=0?ui*e:us*(Math.exp(e)-1)),ul={kernelName:E.u$b,backendName:"cpu",kernelFunc:uo},uu=(0,sM.v)(E.YVe,e=>e<0?-1:e>0?1:0),uh={kernelName:E.YVe,backendName:"cpu",kernelFunc:uu},up=(0,sM.v)(E.hql,e=>Math.sin(e)),ud={kernelName:E.hql,backendName:"cpu",kernelFunc:up},uc=(0,sM.v)(E.J3C,e=>Math.sinh(e)),uf={kernelName:E.J3C,backendName:"cpu",kernelFunc:uc},um=Math.log(11920928955078125e-23)+2,ug=(0,sM.v)(E.Fin,e=>{let t=Math.exp(e);return e<um?t:e>-um?e:Math.log(1+t)}),uy={kernelName:E.Fin,backendName:"cpu",kernelFunc:ug},ub={kernelName:E.A8B,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;(0,sD.C)([a],"spaceToBatchND");let o=E.ZSL.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=lW.kernelFunc({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),h=E.C0T.getReshaped(u.shape,s,o,!1),p=E.C0T.getPermuted(h.length,s.length,!1),d=E.C0T.getReshapedPermuted(u.shape,s,o,!1),c=s0({inputs:{x:u},backend:r,attrs:{shape:h}}),f=(0,it.m)({inputs:{x:c},backend:r,attrs:{perm:p}}),m=s0({inputs:{x:f},backend:r,attrs:{shape:d}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}};var ux=r(77112);let uv={kernelName:E.C8s,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
        ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.data.get(n.dataId).values,l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,h=r.data.get(i.dataId).values[0],[p,d,c,f,m]=(0,ux.y)(o,n.shape,n.dtype,l,a.dtype,u,h);return[r.makeTensorInfo(d,n.dtype,p),r.makeTensorInfo([d[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}};var uw=r(40075);let uT={kernelName:E.BoJ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.data.get(a.dataId).values),o=r.data.get(n.dataId).values,l=Array.from(r.data.get(s.dataId).values),[u,h,p]=(0,uw.l)(o,n.shape,n.dtype,i,l);return[r.makeTensorInfo(h,n.dtype,u),r.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var uS=r(34719);let uN={kernelName:E.L6G,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
          ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,h]=(0,uS.z)(i,n.shape,n.dtype,o,l,!0);return r.makeTensorInfo(h,n.dtype,u)}},uk={kernelName:E.DvZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
         ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,h]=(0,uS.z)(i,n.shape,n.dtype,o,l);return r.makeTensorInfo(h,n.dtype,u)}},uI={kernelName:E.jgd,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=r,{outputShape:l}=a,{sliceRank:u,numUpdates:h,sliceSize:p,strides:d,outputSize:c}=E.C0T.calculateShapes(i,s,l),f=n.bufferSync(s);switch(i.dtype){case"bool":{let e=n.bufferSync(i),r=!!n.data.get(o.dataId).values[0];t=(0,ut.b)(f,e,l,c,p,h,u,d,r,!1);break}case"float32":{let e=n.bufferSync(i),r=n.data.get(o.dataId).values[0];t=(0,ut.b)(f,e,l,c,p,h,u,d,r,!1);break}case"int32":{let e=n.bufferSync(i),r=n.data.get(o.dataId).values[0];t=(0,ut.b)(f,e,l,c,p,h,u,d,r,!1);break}case"string":{let e=n.bufferSync(i),r=E.ZSL.decodeString(n.data.get(o.dataId).values[0]);t=(0,ut.b)(f,e,l,c,p,h,u,d,r,!1);break}default:throw Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(l,t.dtype,t.values)}},uC={kernelName:E.Blb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=E.ZSL.parseAxisParam(i,a.shape)[0],l=E.C0T.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let n=(0,iE.di)({inputs:{x:a},backend:r,attrs:{begin:u,size:t}});return u[o]+=e,n})}};var uE=r(16008);let uA={kernelName:E.M6A,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e;(0,sD.C)(r,"square");let n=t.data.get(r.dataId).values,a=new Float32Array(n.length);for(let e=0;e<n.length;++e){let t=n[e];a[e]=t*t}return{dataId:t.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},u$=(0,sU.Z)((e,t)=>{let r=e-t;return r*r}),uR=(0,ic.j)(E.Ddj,u$),uF={kernelName:E.Ddj,backendName:"cpu",kernelFunc:uR};var u_=r(11533);let uD=(0,sM.v)(E.pnw,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),uO={kernelName:E.pnw,backendName:"cpu",kernelFunc:uD};var uL=r(31180);let uM={kernelName:E.UcO,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a;(0,sD.C)(s,"stridedSlice");let{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=E.Kro.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=s0({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){E.ZSL.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let e=E.Kro.computeOutShape(x,v,w),r=(0,iE.di)({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=s0({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(r)}else{let e=n.bufferSync(s),r=(0,uL.e)(f,e,w,x);t=n.makeTensorInfo(m,r.dtype,r.values)}return t}};var uP=r(86656);let uz={kernelName:E.YAb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:h,dataSplits:p}=t,d=r.data.get(h.dataId).values,c=r.data.get(p.dataId).values,[f,m]=(0,uP.G)(d,c,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(p.shape,"int32",m)]}};var uB=r(74520);let uW={kernelName:E.iW0,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values[0],[u,h,p]=(0,uB.S)(o,l,a),d=h.length;return[r.makeTensorInfo([d,2],"int32",u),r.makeTensorInfo([d],"string",h),r.makeTensorInfo([2],"int32",new Int32Array(p))]}};var uV=r(49169);let uU={kernelName:E.$jE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=r.data.get(s.dataId).values,o=(0,uV.f)(i,a);return r.makeTensorInfo(s.shape,"int32",o)}},uG=(0,sM.v)(E.oFs,e=>Math.tan(e)),uZ={kernelName:E.oFs,backendName:"cpu",kernelFunc:uG},uj=(0,sM.v)(E.iuW,e=>Math.tanh(e)),uK={kernelName:E.iuW,backendName:"cpu",kernelFunc:uj},uH={kernelName:E.X4r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{tensor:n,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:h}=E.C0T.calculateShapes(s,a,n.shape),p=r.bufferSync(a),d=r.bufferSync(s),c=r.bufferSync(n),f=(0,ut.b)(p,d,n.shape,h,l,o,i,u,c,!1);return r.makeTensorInfo(n.shape,f.dtype,f.values)}};var uY=r(53609);let uQ={kernelName:E.FAs,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;(0,sD.C)(a,"tile");let i=(0,uY.D)(r.bufferSync(a),s);return r.makeTensorInfo(i.shape,i.dtype,i.values)}};var uq=r(71725);let uX={kernelName:E.TBb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n;(0,sD.C)(a,"topk");let o=r.data.get(a.dataId).values,[l,u]=(0,uq.x)(o,a.shape,a.dtype,s,i);return[r.makeTensorInfo(l.shape,l.dtype,l.values),r.makeTensorInfo(u.shape,u.dtype,u.values)]}},uJ={kernelName:E.dLy,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=E.ZSL.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=E.ZSL.computeStrides(g),T=w[0],S=w[1],N=w[2],k=E.ZSL.getTypedArrayFromDType(a.dtype,E.ZSL.sizeFromShape(g));k.fill(l);let I=n.data.get(a.dataId).values,C=n.data.get(s.dataId).values;for(let e=0;e<h;++e){let t=1===s.shape[0]?C:C.subarray(8*e,8*e+8);for(let r=0;r<f;++r)for(let n=0;n<m;++n)for(let a=0;a<c;++a){let s;let u=t[6]*n+t[7]*r+1;if(0===u)continue;let h=(t[0]*n+t[1]*r+t[2])/u,c=(t[3]*n+t[4]*r+t[5])/u,f=u0(h,d,o),m=u0(c,p,o);switch(i){case"nearest":s=u1(I,p,d,b,x,v,e,Math.round(m),Math.round(f),a,l);break;case"bilinear":s=function(e,t,r,n,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1,m=(f-l)*u1(e,t,r,n,a,s,i,p,d,u,h)+(l-d)*u1(e,t,r,n,a,s,i,p,f,u,h),g=(f-l)*u1(e,t,r,n,a,s,i,c,d,u,h)+(l-d)*u1(e,t,r,n,a,s,i,c,f,u,h);return(c-o)*m+(o-p)*g}(I,p,d,b,x,v,e,m,f,a,l);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}k[e*T+r*S+n*N+a]=s}return n.makeTensorInfo(g,a.dtype,k)}return{dataId:n.write(k,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function u0(e,t,r){switch(r){case"reflect":return function(e,t){let r=e;if(r<0){if(t<=1)r=0;else{let e=2*t;r<e&&(r=e*Math.trunc(-r/e)+r),r=r<-t?r+e:-r-1}}else if(r>t-1){if(t<=1)r=0;else{let e=2*t;(r-=e*Math.trunc(r/e))>=t&&(r=e-r-1)}}return E.ZSL.clamp(0,r,t-1)}(e,t);case"wrap":let n;return(n=e)<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),E.ZSL.clamp(0,n,t-1);case"nearest":return E.ZSL.clamp(0,e,t-1);default:return e}}function u1(e,t,r,n,a,s,i,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<r?e[i*n+o*a+l*s+u]:h}var u2=r(47456);let u3={kernelName:E.EwU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;(0,sD.C)(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=(0,u2.w)(i,a,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}},u4={kernelName:E.dXR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=(0,iE.di)({inputs:{x:a},backend:r,attrs:{begin:h,size:p}});d[e]=s0({inputs:{x:t},backend:r,attrs:{shape:l}}),r.disposeIntermediateTensorInfo(t)}return d}},u9={kernelName:E.pPe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n;(0,sD.C)(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],h=[],p=o-l,d=s;for(let e=0;e<p;++e){let t=oS({inputs:{input:d},backend:r,attrs:{dim:e+1}});d=t,h.push(t)}for(let e=0;e<i;++e){let t=E.ZSL.createScalarValue(e,"int32"),n=r.makeTensorInfo([],"int32",t),s=(0,oc.LC)({inputs:{a:n,b:d},backend:r}),i=(0,iD.wg)({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),o=(0,oo.lw)({inputs:{a:i,b:a},backend:r}),l=ou({inputs:{x:o},backend:r,attrs:{axis:0,keepDims:!1}});u.push(l),h.push(n),h.push(s),h.push(i),h.push(o),h.push(l)}let c=lz({inputs:u,backend:r,attrs:{axis:0}});return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}};for(let e of[s4,s9.lO,s6,s7,sJ.UK,ie,ir,ia,is,ii,il,ih,id,iy,ix,iS,iN,ik,iI,s3,iC,iA,iR,iF.LY,i_,iD.Ml,iO.uf,iM,iP.v,iz,iZ,iK,iH,iY,iQ,iq,iX,i0,i2,i3,i4,i9,i5,i6,i7,oe,ot,or,on,oa,os,oi,op,sz,od,oc.RY,ow,oT.AC,oN,ok.Yp,oR,o_,oD,oO.Hc,oP,oz,oB,oV,oG,oZ.xp,oj.VM,sB.F,oK,iV,oY,oq,oJ,sV,o0.YW,o1.Q,o3,o4.Fx,o5,o7,lt,la,ls,li,lh,lp.l9,ld,lc,lf,lm,lg,ly,lb,lx.Nu,lv,lS,lI,oo.tJ,lC.hd,lA,lR,l_,lD.AL,lO,lP,lB,lW,lG,sj,lZ.S3,lK,lY,lq,lJ,iU.r,oE,l1,sH,sQ,s1,l2,l3,l4,l9,l5,l6,l7,ue.Lt,ur,un,ua,ul,sq.X3,uh,ud,uf,iE.lv,lk,uy,ub,uv,uT,uN,uk,uI,uC,uE.Fu,uA,uF,u_.C,uO,uM,uz,uW,uU,oA.Zl,oh,uZ,uK,uH,uQ,uX,uJ,it.W,u3,u4,u9,lM])(0,E.tAK)(e);var u5=r(62136);E.eMq.isBrowser()&&(0,E.gJX)("webgl",()=>new u5.Q6,2);var u6=r(22900);let u8=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class u7{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=E.C0T.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}var he=r(69158),ht=r(57997);let hr=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class hn{constructor(e,t,r,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=E.C0T.assertAndGetBroadcastShape(t,r);let a=this.outputShape.length;this.enableShapeUniforms=(0,u6.ik)(a);let s="";if(n){if(0===a||1===E.ZSL.sizeFromShape(this.outputShape))s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let e=(0,ht.bf)(a);if(s=`
          ${e} coords = getOutputCoords();
        `,1===a)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=(0,he.Jp)("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}}function ha(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}let hs={kernelName:E.lzr,backendName:"webgl",kernelFunc:ha};function hi(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.makeTensorInfo(n.shape,"complex64"),i=r.texData.get(s.dataId),o=ha({inputs:{x:n},backend:r}),l=ha({inputs:{x:a},backend:r});return i.complexTensorInfos={real:o,imag:l},s}let ho={kernelName:E.pr3,backendName:"webgl",kernelFunc:hi},hl="return (a < 0.) ? b * a : a;",hu=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,hh={kernelName:E.X0$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n,i=r.makeTensorInfo([],"float32",E.ZSL.createScalarValue(s,"float32")),o=(0,E._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hn(hu,a.shape,i.shape):new u7(hl,a.shape,i.shape),l=r.runWebGLProgram(o,[a,i],"float32");return r.disposeIntermediateTensorInfo(i),l}},hp="return (a < 0.) ? b * a : a;",hd=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,hc={kernelName:E.Ncv,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=(0,E._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hn(hd,n.shape,a.shape):new u7(hp,n.shape,a.shape);return r.runWebGLProgram(s,[n,a],"float32")}};var hf=r(16587),hm=r(3362);let hg="if (isnan(x)) return x;";function hy({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:r,dtype:n}){return({inputs:a,backend:s})=>{let i;let{x:o}=a,l=n||o.dtype;if(s.shouldExecuteOnCPU([o])&&null!=r){let e=r(s.texData.get(o.dataId).values,l);return s.makeTensorInfo(o.shape,l,e)}return i=(0,E._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new hm.rf(o.shape,t):new hf.hE(o.shape,e),s.runWebGLProgram(i,[o],l)}}function hb({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:r=!1,supportsComplex:n=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let l;let{a:u,b:h}=i;if(n&&"complex64"===u.dtype){let t=o.texData.get(u.dataId),r=o.texData.get(h.dataId),[n,a]=[[t.complexTensorInfos.real,r.complexTensorInfos.real],[t.complexTensorInfos.imag,r.complexTensorInfos.imag]].map(t=>{let[r,n]=t,a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},s={dataId:n.dataId,dtype:n.dtype,shape:h.shape},i=new u7(e,u.shape,h.shape);return o.runWebGLProgram(i,[a,s],(0,E.TuY)(r.dtype,n.dtype))}),s=hi({inputs:{real:n,imag:a},backend:o});return o.disposeIntermediateTensorInfo(n),o.disposeIntermediateTensorInfo(a),s}let p=s||(0,E.TuY)(u.dtype,h.dtype);if(("string"===u.dtype||"string"===h.dtype||o.shouldExecuteOnCPU([u,h]))&&null!=a){let e=o.texData.get(u.dataId).values,t=o.texData.get(h.dataId).values,r="string"===u.dtype?E.C0T.fromUint8ToStringArray(e):e,n="string"===u.dtype?E.C0T.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,h.shape,r,n,p),l=o.makeTensorInfo(i,p);return o.texData.get(l.dataId).values=s,l}return l=(0,E._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new hn(t,u.shape,h.shape,r):new u7(e,u.shape,h.shape),o.runWebGLProgram(l,[u,h],p)}}function hx(e,t=!1){if("linear"===e)return t?hm._Q:hf._Q;if("relu"===e)return t?hm.X8:hf.X8;if("elu"===e)return t?hm.X0:hf.X0;if("relu6"===e)return t?hm.Nb:hf.Nb;if("prelu"===e)return t?hd:hp;if("leakyrelu"===e)return t?hu:hl;if("sigmoid"===e)return t?hm.Hq:hf.Hq;throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class hv{constructor(e,t,r,n=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length);let u=Math.ceil((n?e[1]:e[2])/2),h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],d="",c="";i&&(d=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,c="result = activation(result);"),s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let f="rc.x",m="rc.x";e[0]<t[0]?f=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(m=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${d}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${f};
        int batchB = ${m};
        for (int i = 0; i < ${u}; i++) {
          vec4 a = getMatrixA(batchA, ${n?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${a?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${p[0]});
          result += (${h[1]} * ${p[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${s?"result += getBiasAtOutCoords();":""}

        ${c}

        setOutput(result);
      }
    `}}let hw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class hT{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=E.C0T.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}var hS=r(17808);let hN="return a * b;";function hk(e){let t;let{inputs:r,backend:n}=e,{a,b:s}=r,i=E.C0T.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new hT(hw.REAL,a.shape,s.shape),i=new hT(hw.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(r,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),h=hi({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),h}if(n.shouldExecuteOnCPU([a,s])){let e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,o]=(0,hS.Xe)(a.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=r,l}return t=(0,E._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hn(hN,a.shape,s.shape):new u7(hN,a.shape,s.shape),n.runWebGLProgram(t,[a,s],i)}let hI={kernelName:E.xu7,backendName:"webgl",kernelFunc:hk};var hC=r(76408),hE=r(21256);function hA(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=E.ZSL.sizeFromShape(a.shape),o=E.ZSL.inferFromImplicitShape(s,i),l=E.ZSL.sizeFromShape(o);E.ZSL.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=r.texData.get(a.dataId);return!u.isPacked||(0,hE.P0)(a.shape,o)||null!==u.texture&&(0,hE.P0)(u.shape,o)?(r.incRef(a.dataId),{dataId:a.dataId,shape:o,dtype:a.dtype}):function(e,t,r){let n=[(0,hE.N0)(e.shape),...(0,hE.Ph)(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[(0,hE.N0)(t),...(0,hE.Ph)(t)],i=new hC.R(s,n),o=r.runWebGLProgram(i,[a],e.dtype,[n],!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,o,r)}let h$={kernelName:E.R23,backendName:"webgl",kernelFunc:hA};class hR{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i=4*Math.floor(r/4),o=r%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${E.ZSL.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%r>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${1===o}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}class hF{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(r/4),h=r%4,p=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";"all"===t?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):"any"===t&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${1===h}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${2===h}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${3===h}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}function h_(e,t,r,n){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let r=t.length?t[t.length-1].outSize:e[1],n=E.C0T.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l;let{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===r?0===i?new hR({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new hR({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new hF({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},r),l=s,s=n.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(l)}return s}class hD{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.rank=r.length;let n=(0,ht.bf)(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=Array(t);for(let t=0;t<e.length;t++)n[e[t]]=r[t];return n.join()}(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}class hO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=(0,ht.bf)(this.rank),a=(0,he.Fd)("rc",this.rank),s=Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}function hL(e,t,r){let n=(0,E._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hO(e.shape,t):new hD(e.shape,t);return r.runWebGLProgram(n,[e],e.dtype)}function hM(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return function(e,t,r,n){let a=e.shape.length,s=E.ZSL.parseAxisParam(t,e.shape),i=s,o=E.C0T.getAxesPermutation(i,a),l=null!=o,u=e;l&&(u=hL(e,o,n),i=E.C0T.getInnerMostAxes(i.length,a)),E.C0T.assertAxesAreInnerMostDims("sum",i,a);let[h,p]=E.C0T.computeOutAndReduceShapes(u.shape,i),d=h;r&&(d=E.C0T.expandShapeToKeepDim(h,s));let c=E.ZSL.sizeFromShape(p),f=hA({inputs:{x:u},attrs:{shape:[E.ZSL.sizeFromShape(e.shape)/c,c]},backend:n}),m=h_(f,(0,E.chL)(e.dtype),"sum",n),g=hA({inputs:{x:m},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),l&&n.disposeIntermediateTensorInfo(u),g}(a,s,i,r)}let hP={kernelName:E.WuN,backendName:"webgl",kernelFunc:hM};function hz(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{perm:i}=a,o=Array(s.shape.length);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];if(n.shouldExecuteOnCPU([s])){let e=n.texData.get(s.dataId).values,r=(0,hS.Q5)(e,s.shape,s.dtype,i,o);t=n.makeTensorInfo(o,s.dtype),n.texData.get(t.dataId).values=r}else t=hL(s,i,n);return t}let hB={kernelName:E.wx0,backendName:"webgl",kernelFunc:hz};function hW({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u;let h=e.shape.length,p=t.shape.length,d=r?e.shape[h-2]:e.shape[h-1],c=n?t.shape[p-1]:t.shape[p-2],f=r?e.shape[h-1]:e.shape[h-2],m=n?t.shape[p-2]:t.shape[p-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=E.ZSL.sizeFromShape(g),x=E.ZSL.sizeFromShape(y),v=E.ZEY.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);E.ZSL.assert(d===c,()=>`Error in matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let w=r?[b,d,f]:[b,f,d],T=n?[x,m,c]:[x,c,m],S=hA({inputs:{x:e},backend:a,attrs:{shape:w}}),N=hA({inputs:{x:t},backend:a,attrs:{shape:T}}),k=[S,N],I=Math.max(b,x),C=r?S.shape[1]:S.shape[2],A=null!=s,$=null!=i,R="leakyrelu"===l,F=null!=l?hx(l,!0):null,_=A||$||R||null!=F;if((1===f||1===m)&&C>1e3&&!1===_){let e=S,t=N;r&&(e=hz({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),k.push(e)),n&&(t=hz({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),k.push(t));let s=1!==m,i=1===m,o=e;s&&(o=hA({inputs:{x:e},backend:a,attrs:{shape:[I,C,1]}}),k.push(o));let l=t;i&&(l=hA({inputs:{x:t},backend:a,attrs:{shape:[I,1,C]}}),k.push(l));let h=hk({inputs:{a:o,b:l},backend:a});u=hM({inputs:{x:h},backend:a,attrs:{axis:1===m?2:1,keepDims:!0}}),k.push(h)}else{let l=(0,E.TuY)(e.dtype,t.dtype),h=new hv(w,T,[I,f,m],r,n,A,F,$,R),p=[S,N];if(null!=s&&p.push(s),$&&p.push(i),R){let e=a.makeTensorInfo([],"float32",E.ZSL.createScalarValue(o,"float32"));p.push(e),k.push(e)}u=a.runWebGLProgram(h,p,l)}let D=hA({inputs:{x:u},backend:a,attrs:{shape:v}});for(let e of(k.push(u),k))a.disposeIntermediateTensorInfo(e);return D}let hV={kernelName:E.Dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=n;return hW({a,b:s,transposeA:l,transposeB:u,backend:r,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},hU="return abs(x);",hG={kernelName:E.ljI,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{x:a}=r;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=n.texData.get(a.dataId),t=(0,hS.f8)(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}return t=(0,E._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hm.rf(a.shape,hU):new hf.hE(a.shape,hU),n.runWebGLProgram(t,[a],a.dtype)}},hZ=hy({opSnippet:hf.dR+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),hj={kernelName:E.Vvy,backendName:"webgl",kernelFunc:hZ},hK=hy({opSnippet:hf.dR+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),hH={kernelName:E.PH8,backendName:"webgl",kernelFunc:hK},hY="return a + b;",hQ=hb({opSnippet:hY,packedOpSnippet:hY,supportsComplex:!0,cpuKernelImpl:hS.Gs}),hq={kernelName:E.OMN,backendName:"webgl",kernelFunc:hQ};class hX{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];this.variableNames.forEach(e=>{r.push(`float v${e} = get${e}AtOutCoords();`)});let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        float result = ${n};
        setOutput(result);
      }
    `}}class hJ{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];this.variableNames.forEach(e=>{r.push(`vec4 v${e} = get${e}AtOutCoords();`)});let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        vec4 result = ${n};
        setOutput(result);
      }
    `}}let h0={kernelName:E.EkD,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n}=t;if(1===r.length)return ha({inputs:{x:r[0]},backend:n});if(r.length>(0,E._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),a=e({inputs:r.slice(0,t),backend:n}),s=e({inputs:r.slice(t),backend:n});return e({inputs:[a,s],backend:n})}let a=r.map(e=>e.dtype).reduce((e,t)=>(0,E.TuY)(e,t)),s=r.map(e=>e.shape),i=(0,E._K2)().getBool("WEBGL_PACK")?new hJ(r[0].shape,s):new hX(r[0].shape,s);return n.runWebGLProgram(i,r,a)}},h1={kernelName:E.u8Z,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=E.ZSL.parseAxisParam(i,s.shape),h=u,p=E.C0T.getAxesPermutation(h,l),d=s;null!=p&&(d=hz({inputs:{x:s},backend:n,attrs:{perm:p}}),h=E.C0T.getInnerMostAxes(h.length,l)),E.C0T.assertAxesAreInnerMostDims("all",h,l);let[c,f]=E.C0T.computeOutAndReduceShapes(d.shape,h),m=hA({inputs:{x:d},backend:n,attrs:{shape:[-1,E.ZSL.sizeFromShape(f)]}}),g=h_(m,m.dtype,"all",n);return t=o?hA({inputs:{x:g},backend:n,attrs:{shape:E.C0T.expandShapeToKeepDim(c,u)}}):hA({inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(d),t}},h2={kernelName:E.FSt,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=E.ZSL.parseAxisParam(i,s.shape),h=u,p=E.C0T.getAxesPermutation(h,l),d=s;null!=p&&(d=hz({inputs:{x:s},backend:n,attrs:{perm:p}}),h=E.C0T.getInnerMostAxes(h.length,l)),E.C0T.assertAxesAreInnerMostDims("any",h,l);let[c,f]=E.C0T.computeOutAndReduceShapes(d.shape,h),m=hA({inputs:{x:d},backend:n,attrs:{shape:[-1,E.ZSL.sizeFromShape(f)]}}),g=h_(m,m.dtype,"any",n);return t=o?hA({inputs:{x:g},backend:n,attrs:{shape:E.C0T.expandShapeToKeepDim(c,u)}}):hA({inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(d),t}};class h3{constructor(e,t,r){this.variableNames=["A"];let{windowSize:n,batchSize:a,outSize:s}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class h4{constructor(e,t,r,n){let a,s;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E.ZSL.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let i=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),n||this.variableNames.push("bestIndicesA");let o=this.outputShape,l=o.length,u=(0,ht.bf)(l),h=(0,he.Jp)("coords",l);if(1===i){s=l+1;let e=(0,ht.bf)(s);a=`
        ${e} sourceLocR = ${e}(${h.join()}, 0);
        ++${h[l-1]};
        ${e} sourceLocG = ${e}(${h.join()}, 0);
        ++${h[l-2]};
        ${e} sourceLocA = ${e}(${h.join()}, 0);
        --${h[l-1]};
        ${e} sourceLocB = ${e}(${h.join()}, 0);
        --${h[l-2]};`}else s=l,a=`
        ${u} sourceLocR = coords;
        ++${h[l-1]};
        ${u} sourceLocG = coords;
        ++${h[l-2]};
        ${u} sourceLocA = coords;
        --${h[l-1]};
        ${u} sourceLocB = coords;
        --${h[l-2]};`;let p=["x","y","z","w","u","v"].slice(0,s),d="."+p[s-1],c=p.map(e=>"int "+e),f=(0,he.Jp)("sourceLocR",s-1).concat("inIdx.r"),m=(0,he.Jp)("sourceLocG",s-1).concat("inIdx.g"),g=(0,he.Jp)("sourceLocB",s-1).concat("inIdx.b"),y=(0,he.Jp)("sourceLocA",s-1).concat("inIdx.a"),b="max"===r?"greaterThan":"lessThan",x=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${g.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,w=n?"":`
      float getBestIndicesAChannel(${c.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${c.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${w}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${h[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${h[l-2]} < ${o[l-2]-1};
        ${a}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function h9(e,t,r,n){let a=[r];if(E.C0T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,t.shape.length),!(0,E._K2)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let r=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&r.push(o=e.unpackTensor(t));let[l,u]=E.C0T.computeOutAndReduceShapes(o.shape,a),h=hA({inputs:{x:o},backend:e,attrs:{shape:[-1,E.ZSL.sizeFromShape(u)]}});r.push(h);let p=function e(t,r,n,a=null){let s=r.shape[0],i=r.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);let o=E.C0T.computeOptimalWindowSize(i),l=new h3({windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},n,null==a),u=[r];null!=a&&u.push(a);let h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=e(t,r,n,h);return t.disposeIntermediateTensorInfo(h),p}(e,h,n);r.push(p);let d=hA({inputs:{x:p},backend:e,attrs:{shape:l}});return r.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return function e(t,r,n,a=null){let s=null!=a?a.shape:r.shape,i=s[s.length-1],o=new h4(s,E.C0T.computeOptimalWindowSize(i),n,null==a),l=null==a?[r]:[r,a],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===r.shape.length){let a=e(t,r,n,u);return t.disposeIntermediateTensorInfo(u),a}return u}(e,t,n)}let h5={kernelName:E.Jp_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=E.ZSL.parseAxisParam(s,a.shape),o=E.C0T.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=hz({inputs:{x:a},backend:r,attrs:{perm:o}})),i=E.C0T.getInnerMostAxes(i.length,l.shape.length)),E.C0T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=h9(r,l,i[0],"max");return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),h}},h6={kernelName:E.p_m,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=E.ZSL.parseAxisParam(s,a.shape),o=E.C0T.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=hz({inputs:{x:a},backend:r,attrs:{perm:o}})),i=E.C0T.getInnerMostAxes(i.length,l.shape.length)),E.C0T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=h9(r,l,i[0],"min");return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),h}},h8=hy({opSnippet:hf.dR+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),h7={kernelName:E.QKF,backendName:"webgl",kernelFunc:h8},pe=hy({opSnippet:hf.dR+"return log(x + sqrt(x * x + 1.0));"}),pt={kernelName:E.epO,backendName:"webgl",kernelFunc:pe},pr=hy({opSnippet:hf.dR+`
  return atan(x);
`}),pn={kernelName:E.TyE,backendName:"webgl",kernelFunc:pr},pa=hb({opSnippet:u8+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+hr+`
  return result;
`}),ps={kernelName:E.lxb,backendName:"webgl",kernelFunc:pa},pi=hy({opSnippet:hf.dR+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`}),po={kernelName:E.zP9,backendName:"webgl",kernelFunc:pi};class pl{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),r){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?a?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let x=4*Math.floor(s/4),v=s%4,w=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${w}
          }

          int xC = xCCorner + ${x};
          if (${1===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${2===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${3===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${w}
          }
        }
        setOutput(${b});
      }
    `}}class pu{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),r){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),T=s%4,S=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${w}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${w};
            if (${1===T}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${2===T}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${3===T}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${S}
            }
          }
        }
        setOutput(${v});
      }
    `}}let ph={kernelName:E.ho8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;(0,hE.CE)(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=E.C0T.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&E.ZSL.arraysEqual(u.inShape,u.outShape))return ha({inputs:{x:a},backend:r});let h=new pl(u,"avg",!1);return r.runWebGLProgram(h,[a],"float32")}},pp={kernelName:E.cS,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n,h=new pu(E.C0T.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),"avg",!1);return r.runWebGLProgram(h,[a],"float32")}};class pd{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${1/(t*r)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class pc{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*r*n)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let pf={kernelName:E.wwC,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=new pc(E.C0T.computePool3DInfo(s.shape,i,o,[1,1,1],l,u));return r.runWebGLProgram(h,[a],s.dtype)}},pm={kernelName:E.VCH,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t;(0,hE.CE)([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=n,u=new pd(E.C0T.computePool2DInfo(s.shape,i,o,1,l));return r.runWebGLProgram(u,[a],s.dtype)}},pg={kernelName:E.jAQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;return hW({a,b:s,transposeA:i,transposeB:o,backend:r})}};class py{constructor(e,t,r,n,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],E.C0T.assertAndGetBroadcastShape(e,t),E.C0T.assertAndGetBroadcastShape(e,r);let i="0.0";null!=n&&(E.C0T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(E.C0T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class pb{constructor(e,t,r,n,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],E.C0T.assertAndGetBroadcastShape(e,t),E.C0T.assertAndGetBroadcastShape(e,r);let i="vec4(0.0)";null!=n&&(E.C0T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(E.C0T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}}let px={kernelName:E.i5R,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,mean:a,variance:s,offset:i,scale:o}=e;E.ZSL.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E.ZSL.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E.ZSL.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=r;null==l&&(l=.001);let u=[n,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=(0,E._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new pb(n.shape,a.shape,s.shape,h,p,l):new py(n.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class pv{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let r=(0,ht.bf)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=function(e){if(1===e)return"sourceLoc";if(e<=6)return pw.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),a=e.map((e,t)=>`sourceLoc.${pw[t]} = start[${t}] + coords.${pw[t]};`);t=`
        ${r} sourceLoc;
        ${r} coords = getOutputCoords();
        ${a.join("\n")}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${n}));
      }
    `}}let pw=["x","y","z","w","u","v"];class pT{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=(0,ht.bf)(this.rank),r=(0,he.Jp)("coords",this.rank),n=(0,he.Jp)("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${n[t]} = ${r[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}}function pS(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n,[o,l]=E.Kro.parseSliceParams(a,s,i);if(E.Kro.assertParamsValid(a,o,l),0===E.ZSL.sizeFromShape(l))return r.makeTensorInfo(l,a.dtype,[]);if(r.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=r.texData.get(a.dataId),t=(0,hS.J3)(e.values,o,l,a.shape,a.dtype);return r.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=r.texData.get(a.dataId),h=E.Kro.isSliceContinous(a.shape,o,l);if(u||!h){let e=(0,E._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pT(l):new pv(l),t=[o];return r.runWebGLProgram(e,[a],a.dtype,t)}return r.uploadToGPU(a.dataId),function(e,t,r,n){let a=n.texData.get(e.dataId),s=n.makeTensorInfo(r,e.dtype),i=n.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=r,i.dtype=e.dtype;let o=E.Kro.computeFlatOffset(t,E.ZSL.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,r)}let pN={kernelName:E.JiE,backendName:"webgl",kernelFunc:pS},pk={kernelName:E.Ik2,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;E.ZSL.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=E.C0T.getReshaped(a.shape,s,o),u=E.C0T.getPermuted(l.length,s.length),h=E.C0T.getReshapedPermuted(a.shape,s,o),p=E.C0T.getSliceBeginCoords(i,s.length),d=E.C0T.getSliceSize(h,i,s.length),c=[],f=hA({inputs:{x:a},backend:r,attrs:{shape:l}}),m=hz({inputs:{x:f},backend:r,attrs:{perm:u}}),g=hA({inputs:{x:m},backend:r,attrs:{shape:h}}),y=pS({inputs:{x:g},backend:r,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>r.disposeIntermediateTensorInfo(e)),y}},pI={kernelName:E.N4F,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.readSync(a.dataId),l=r.readSync(s.dataId),u=(0,hS.jm)(o,l,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,u)}},pC=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,pE=`
  return float(int(a.r) & int(b.r));
`,pA={kernelName:E.HNs,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{a,b:s}=r,i=(0,E._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,E._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,s])||1===o){let e=n.texData.get(a.dataId).values,t=n.texData.get(s.dataId).values,[r,i]=(0,hS.PA)(a.shape,s.shape,e,t,a.dtype),o=n.makeTensorInfo(i,a.dtype);return n.texData.get(o.dataId).values=r,o}return t=i?new hn(pC,a.shape,s.shape,!1):new u7(pE,a.shape,s.shape),n.runWebGLProgram(t,[a,s],a.dtype)}},p$={kernelName:E.vj7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.readSync(n.dataId),i=r.readSync(a.dataId),o=E.C0T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},pR=hb({opSnippet:"return float(a != b);",cpuKernelImpl:hS.ad,dtype:"bool"}),pF={kernelName:E.ylV,backendName:"webgl",kernelFunc:pR};function p_(e){let{inputs:t,backend:r}=e,{input:n}=t;return ha({inputs:{x:r.texData.get(n.dataId).complexTensorInfos.real},backend:r})}let pD={kernelName:E.LRy,backendName:"webgl",kernelFunc:p_},pO={kernelName:E.KXH,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n,attrs:a}=t,{x:s}=r,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return ha({inputs:{x:s},backend:n});let t=E.Ul9(s.shape),r=e({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=hi({inputs:{real:r,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(r),a}if("complex64"===s.dtype){let t=p_({inputs:{input:s},backend:n}),r=e({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),r}if(!E.ZSL.hasEncodingLoss(s.dtype,i)){let e=ha({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(n.shouldExecuteOnCPU([s])){let e=n.texData.get(s.dataId).values,[t,r,a]=(0,hS.Kf)(e,s.shape,s.dtype,i);return n.makeTensorInfo(t,r,a)}if("int32"===i)return function(e,t){let r=new hf.hE(e.shape,"return float(int(x));"),n=t.runWebGLProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}(s,n);if("bool"===i){let e=n.makeTensorInfo([],"bool",E.ZSL.getTypedArrayFromDType("bool",1)),t=pR({inputs:{a:s,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},pL="return ceil(x);",pM=hy({opSnippet:pL,packedOpSnippet:pL,cpuKernelImpl:hS.Md}),pP={kernelName:E.QDP,backendName:"webgl",kernelFunc:pM};class pz{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class pB{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}let pW={kernelName:E.vaV,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{clipValueMin:i,clipValueMax:o}=a;return t=(0,E._K2)().getBool("WEBGL_PACK_CLIP")?new pB(s.shape):new pz(s.shape),n.runWebGLProgram(t,[s],s.dtype,[[i],[o]])}};class pV{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function pU(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}let pG={kernelName:E.$zE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=r.texData.get(n.dataId),s=new pV(n.shape),i=[pU(n,a.complexTensorInfos.real),pU(n,a.complexTensorInfos.imag)];return r.runWebGLProgram(s,i,i[0].dtype)}};class pZ{constructor(e){this.outputShape=[],this.outputShape=E.C0T.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];let r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let n=t[e-1];r.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${n}));`)}let n=t.length,a=t[t.length-1];r.push(`else setOutput(getT${n}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join("\n        ")}
      }
    `}}class pj{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=E.C0T.computeOutShape(e,t);let r=this.outputShape,n=r.length,a=(0,ht.bf)(n),s=(0,he.Jp)("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((e,t)=>`T${t}`);let o=Array(e.length-1);o[0]=e[0][t];for(let r=1;r<o.length;r++)o[r]=o[r-1]+e[r][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`
        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${pK(i,l,t)}),
            vec2(${pK(u,l,t)}));
        }`}let d=o.length,c=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${pK(i,l,c)}),
          vec2(${pK(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(e=>"int "+e)}) {
        ${p}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${r[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${r[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${r[n-2]} &&
            ${s[n-1]} < ${r[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}}function pK(e,t,r){let n=e.indexOf(t);return e.map((e,t)=>t===n?`${e} - ${r}`:e).join()}function pH(e){let{inputs:t,backend:r}=e,{input:n}=t;return ha({inputs:{x:r.texData.get(n.dataId).complexTensorInfos.imag},backend:r})}let pY={kernelName:E.dv8,backendName:"webgl",kernelFunc:pH};function pQ(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=E.ZSL.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);E.C0T.assertParamsConsistent(i,s);let o=E.C0T.computeOutShape(t.map(e=>e.shape),s);if(0===E.ZSL.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>E.ZSL.sizeFromShape(e.shape)>0);return 1===l.length?ha({inputs:{x:l[0]},backend:r}):function e(t,r,n){let a=t[0].dtype;if("complex64"===a){let a=t.map(e=>p_({inputs:{input:e},backend:n})),s=t.map(e=>pH({inputs:{input:e},backend:n})),i=e(a,r,n),o=e(s,r,n),l=hi({inputs:{real:i,imag:o},backend:n});return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}let s=n.shouldExecuteOnCPU(t);if("string"===a&&(s=!0),s){let e=t.map(e=>{let t=E.ZSL.sizeFromShape(e.shape.slice(r));return hA({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),s=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=E.C0T.computeOutShape(e.map(e=>e.shape),1),o=1===e[0].shape[0],l=(0,hS.dv)(s,i,a,o),u=E.C0T.computeOutShape(t.map(e=>e.shape),r),h=n.makeTensorInfo(u,a,l);return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}let i=t.filter(e=>E.ZSL.sizeFromShape(e.shape)>0),o=(0,E._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){let e=o?new hf.hE(t[0].shape,hf.UC):new hm.rf(t[0].shape,hf.UC);return n.runWebGLProgram(e,t,a)}let l=(0,E._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>l){let t=[];for(let a=0;a<i.length;a+=l){let s=i.slice(a,a+l);t.push(e(s,r,n))}let a=e(t,r,n);for(let e of t)n.disposeIntermediateTensorInfo(e);return a}if(o){let e=new pj(i.map(e=>e.shape),r);return n.runWebGLProgram(e,i,a)}let{tensors2D:u,outShape:h}=function(e,t,r){let n=E.C0T.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>hA({inputs:{x:e},attrs:{shape:[-1,E.ZSL.sizeFromShape(e.shape.slice(t))]},backend:r})),outShape:n}}(i,r,n),p=new pZ(u.map(e=>e.shape)),d=n.runWebGLProgram(p,u,a);u.forEach(e=>n.disposeIntermediateTensorInfo(e));let c=hA({inputs:{x:d},attrs:{shape:h},backend:n});return n.disposeIntermediateTensorInfo(d),c}(l,s,r)}let pq={kernelName:E.$dB,backendName:"webgl",kernelFunc:pQ};class pX{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g="",y="";r&&(g=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,y="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${m?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${m?1:2}], coords[${m?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${2===f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${y}
        setOutput(result);
      }
    `}}class pJ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,r=e.padInfo.top,n=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${2===f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class p0{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<u;e++)h+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<u;e++)h+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(u+1)/2;t++){let r=2*t;if(h+=`
           xC = xCCorner + ${r*o};
           `,1===i){if(r<u&&(s%2==1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }
               `,1===o&&r>0?h+=`
                 xC${r} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${r} = vec4(previous.zw, xTexelC${r}.xy);
                   } else {
                     xC${r} = vec4(0.0, 0.0, xTexelC${r}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xC${r} = xTexelC${r};
                 `,r+1<u)){let e=s%2==0?E.ZSL.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                     xTexelC${r+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${r+1}.zw = vec2(0.0);
                     }
                     xTexelC${r+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${r+1} = vec4(previous.zw, xTexelC${r+1}.xy);
                     } else {
                      xC${r+1} = vec4(0.0, 0.0, xTexelC${r+1}.xy);
                     }
                     `:h+=`
                     xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.xy);
                     `):1===e?h+=`
                     xC${r+1} = xTexelC${r};
                     `:h+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                       xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${r+1}.zw = vec2(0.0);
                       }
                       xTexelC${r+1}Ready = 1;
                     }

                     xC${r+1} = xTexelC${r+1};
                     `}}else r<u&&(s%2==1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.0);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
               `,r+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${r+1} = vec4(xTexelC${r+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(
                   xTexelC${r}.xy, xTexelC${r+1}.xy);
               `,r+1<u&&(h+=`
                   xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
                 `)));r<u&&(h+=`
             wTexel = getW(r, ${r}, d1, d2);
             dotProd += xC${r}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${r}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,r+1<u&&(h+=`
               wTexel = getW(r, ${r+1}, d1, d2);
               dotProd += xC${r+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${r+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   
     }
   
     }
   `;let p="",d="";r&&(p=n?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:a?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:`vec4 activation(vec4 x) {
           ${r}
         }`,d="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${d}
         setOutput(result);
       }
     `}}var p1=r(29709);class p2{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length);let{dataFormat:r}=t,n=(0,p1.B)(),a="channelsLast"===r,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${n.output} = result;
      }
    `}}function p3(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&1===r&&e[0]>1?[e[0],1]:null}function p4({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l;let u=e.shape,h=n.texData.get(e.dataId),p=r.inChannels,d=u[0]*u[1]*u[2],c=r.outChannels,f="channelsLast"===r.dataFormat,m=[];if(null!=s){let e=p3(s.shape,f);null!=e&&(s=hA({inputs:{x:s},backend:n,attrs:{shape:e}}),m.push(s))}if(null!=a){let e=p3(a.shape,f);null!=e&&(a=hA({inputs:{x:a},backend:n,attrs:{shape:e}}),m.push(a))}if(!((1===d||1===c)&&p>1e3)&&h.isPacked&&f&&null!=h.texture&&u[2]%2!=0&&E.ZSL.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,r.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,E.ZSL.assert(hE.P0(h.shape,d.shape),()=>`packed reshape ${h.shape} to ${d.shape} isn't free`);let f=hA({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});m.push(f);let g=hW({a:d,b:f,backend:n,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=n.texData.get(g.dataId);E.ZSL.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=c,y.shape=r.outShape,(l=ha({inputs:{x:g},backend:n})).shape=r.outShape,m.push(g)}else{let u=r.outHeight*r.outWidth,h=hA({inputs:{x:e},backend:n,attrs:{shape:f?[r.batchSize,u,r.inChannels]:[r.batchSize,r.inChannels,u]}}),p=hA({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=hW({a:f?h:p,b:f?p:h,transposeA:!f,transposeB:!1,backend:n,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=hA({inputs:{x:d},backend:n,attrs:{shape:r.outShape}}),m.push(h),m.push(p),m.push(d)}for(let e of m)n.disposeIntermediateTensorInfo(e);return l}function p9({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=r,f="channelsLast"===c,m=l*u*h,g=d*p,y=[r.batchSize,m,g],b=[];if(null!=s){let e=p3(s.shape,f);null!=e&&(s=hA({inputs:{x:s},backend:n,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=p3(a.shape,f);null!=e&&(a=hA({inputs:{x:a},backend:n,attrs:{shape:e}}),b.push(a))}let x=hA({inputs:{x:t},backend:n,attrs:{shape:[1,m,E.ZSL.sizeFromShape(t.shape)/m]}});b.push(x);let v=new p2(y,r),w=[e.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],T=n.runWebGLProgram(v,[e],"float32",w),S=hA({inputs:{x:T},backend:n,attrs:{shape:y}});b.push(T),b.push(S);let N=null!=a,k=null!=s,I="leakyrelu"===o,C=o?hx(o,!0):null,A=new hv(f?S.shape:x.shape,f?x.shape:S.shape,f?[r.batchSize,g,r.outChannels]:[r.batchSize,r.outChannels,g],!0,!1,N,C,k,I),$=f?[S,x]:[x,S];if(a&&$.push(a),k&&$.push(s),I){let e=n.makeTensorInfo([],"float32",E.ZSL.createScalarValue(i,"float32"));$.push(e),b.push(e)}let R=n.runWebGLProgram(A,$,"float32"),F=hA({inputs:{x:R},backend:n,attrs:{shape:r.outShape}});for(let e of(b.push(R),b))n.disposeIntermediateTensorInfo(e);return F}let p5={kernelName:E.p2J,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i}=r,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=E.C0T.convertConv2DDataFormat(u),c=E.C0T.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1===c.filterHeight&&1===c.filterWidth&&1===c.dilationHeight&&1===c.dilationWidth&&1===c.strideHeight&&1===c.strideWidth&&("SAME"===c.padInfo.type||"VALID"===c.padInfo.type))t=p4({x:s,filter:i,convInfo:c,backend:n});else if(c.strideWidth<=2&&"channelsLast"===d&&(0,E._K2)().getBool("WEBGL_EXP_CONV")){let e=new p0(c),r=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=n.runWebGLProgram(e,[s,i],"float32",r)}else if((0,E._K2)().getBool("WEBGL_CONV_IM2COL"))t=p9({x:s,filter:i,convInfo:c,backend:n});else{let e=new pX(c);t=n.runWebGLProgram(e,[s,i],"float32")}let f=hA({inputs:{x:t},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(t),f}};class p6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class p8{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class p7{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class de{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=r-1-e.padInfo.top,u=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let dt={kernelName:E.rFm,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=n,p=E.C0T.convertConv2DDataFormat(l),d=new p6(E.C0T.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p));return r.runWebGLProgram(d,[a,s],"float32")}};class dr{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length);let t=e.filterHeight,r=e.filterWidth,n=t-1-e.padInfo.top,a=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}let dn={kernelName:E.jfg,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=n,p=E.C0T.convertConv2DDataFormat(u),d=E.C0T.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p);if((0,E._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){let e=[[d.strideHeight,d.strideWidth]],t=new dr(d);return r.runWebGLProgram(t,[a,s],"float32",e)}{let e=new p8(d);return r.runWebGLProgram(e,[a,s],"float32")}}},da={kernelName:E.A1h,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n,u=new pJ(E.C0T.computeConv3DInfo(a.shape,s.shape,i,l,o));return r.runWebGLProgram(u,[a,s],"float32")}},ds={kernelName:E.iGz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=n,u=new p7(E.C0T.computeConv3DInfo(a.shape,l,i,1,o));return r.runWebGLProgram(u,[a,s],"float32")}},di={kernelName:E.gC7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=n,u=new de(E.C0T.computeConv3DInfo(l,s.shape,o,1,i));return r.runWebGLProgram(u,[a,s],"float32")}},dl=hy({opSnippet:hg+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${hr}
  return result;
`}),du={kernelName:E.Mn0,backendName:"webgl",kernelFunc:dl},dh=hy({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),dp={kernelName:E.MnK,backendName:"webgl",kernelFunc:dh};class dd{constructor(e,t,r,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=r;this.outputShape=[u,h,p,l];let[d,c]=[`${i-1}.0`,`${o-1}.0`],[f,m,g]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[y,b,x]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${c} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${c}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${b};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${c} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===n?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}let dc={kernelName:E.MRQ,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,h=new dd(a.shape,s.shape,o,l,u);return r.runWebGLProgram(h,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(o||(o={}));class df{constructor(e,t,r,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===o.Prod?"1.0":"0.0",i=r?s:`getX(${dm(a,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",h="";r?(u=n?`end != ${l-1}`:"end != 0",h=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",h=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${(0,ht.bf)(a)} coords = getOutputCoords();
        int end = ${dg(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${h};
          ${dg(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${dm(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function dm(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function dg(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function dy(e,t,r,n,a,s){let i=t.shape.length,o=E.C0T.getAxesPermutation([n],i),l=t;null!=o&&(l=hz({inputs:{x:t},backend:r,attrs:{perm:o}}));let u=E.C0T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let h=l.shape[u],p=ha({inputs:{x:l},backend:r});for(let t=0;t<=Math.ceil(Math.log2(h))-1;t++){let n=new df(e,l.shape,!1,s),a=[[t]],i=p;p=r.runWebGLProgram(n,[p],p.dtype,a),r.disposeIntermediateTensorInfo(i)}if(a){let t=new df(e,l.shape,a,s),n=p;p=r.runWebGLProgram(t,[p],p.dtype),r.disposeIntermediateTensorInfo(n)}if(null!=o){let e=hz({inputs:{x:p},backend:r,attrs:{perm:E.C0T.getUndoAxesPermutation(o)}});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(l),e}return p}let db={kernelName:E.jj_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:l}=n;return dy(o.Prod,a,r,s,i,l)}},dx={kernelName:E.nY8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:l}=n;return dy(o.Sum,a,r,s,i,l)}},dv={kernelName:E.wNW,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(1===a.shape.length){let e=r.readSync(a.dataId),t=r.readSync(s.dataId),n=(0,hS.jm)(e,t,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,n)}if(2===a.shape.length){let e=r.bufferSync(a),t=r.bufferSync(s),n=(0,hS.h0)(e,t,i,o);return r.makeTensorInfo(n.shape,s.dtype,n.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class dw{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}let dT={kernelName:E.TMz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f=new dw("NHWC"===i?[o,p,d,c]:[o,c,p,d],s,i);return r.runWebGLProgram(f,[a],a.dtype)}};class dS{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";r&&(l=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,u="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${u}
        setOutput(result);
      }
    `}}class dN{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,u6.ik)(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<h;e++)p+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let e=0;e<h;e++)p+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(h+1)/2;e++){let t=2*e;if(p+=`
          xC = xCCorner + ${t*l};
          `,1===o){if(t<h&&(i%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===l&&t>0?p+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<h)){let e=i%2==0?E.ZSL.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:p+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?p+=`
                    xC${t+1} = xTexelC${t};
                    `:p+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<h&&(i%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<h&&(p+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<h&&(p+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<h&&(p+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  
      }
    `;let d="",c="";r&&(d=n?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`vec4 activation(vec4 x) {
          ${r}
        }`,c="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${c}
        setOutput(result);
      }
    `}}let dk={kernelName:E.tGH,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i}=r,{strides:o,pad:l,dilations:u,dimRoundingMode:h}=a,p=u;null==p&&(p=[1,1]),E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let d=E.C0T.computeConv2DInfo(s.shape,i.shape,o,p,l,h,!0);t=(0,E._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new dN(d):new dS(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(t,[s,i],"float32",c)}};class dI{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class dC{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=r-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let dE={kernelName:E.X$8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=n,p=new dI(E.C0T.computeConv2DInfo(a.shape,h,i,o,l,u,!0));return r.runWebGLProgram(p,[a,s],"float32")}},dA={kernelName:E.nVu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=n,p=new dC(E.C0T.computeConv2DInfo(h,s.shape,i,o,l,u,!0));return r.runWebGLProgram(p,[a,s],"float32")}};class d${constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}let dR={kernelName:E.ORI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=[...n.shape,...n.shape],s=E.ZSL.sizeFromShape(n.shape),i=hA({inputs:{x:n},backend:r,attrs:{shape:[s]}}),o=new d$(s),l=r.runWebGLProgram(o,[i],i.dtype),u=hA({inputs:{x:l},backend:r,attrs:{shape:a}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),u}};class dF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:r,padInfo:n,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=n;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${h}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}let d_={kernelName:E.jxD,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i}=r,{strides:o,pad:l,dilations:u}=a,h=E.C0T.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new dF(h),d=hA({inputs:{x:t=n.runWebGLProgram(p,[s,i],"float32")},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(t),d}},dD={kernelName:E.Qgm,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,{allDims:s,summedDims:i,idDims:o}=E.C0T.decodeEinsumEquation(a,t.length);E.C0T.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=E.C0T.getEinsumComputePath(i,o),h=u.length,p=null,d=s.length,c=[];for(let e=0;e<h;++e){for(let n of u[e]){let e;let{permutationIndices:a,expandDims:s}=E.C0T.getEinsumPermutation(d,o[n]);E.C0T.isIdentityPermutation(a)?e=t[n]:(e=hz({inputs:{x:t[n]},backend:r,attrs:{perm:a}}),c.push(e));let i=e.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);E.ZSL.arraysEqual(e.shape,i)||(e=hA({inputs:{x:e},backend:r,attrs:{shape:i}}),c.push(e)),null===p?p=e:(p=hk({inputs:{a:e,b:p},backend:r}),c.push(p))}e<h-1&&(l[e]>=0&&(p=hM({inputs:{x:p},backend:r,attrs:{axis:l[e]-(s.length-d),keepDims:!1}}),c.push(p)),d--)}for(let e of c)e!==p&&r.disposeIntermediateTensorInfo(e);return p}},dO=hy({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),dL={kernelName:E.Pah,backendName:"webgl",kernelFunc:dO},dM=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,dP={kernelName:E.rsH,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r}=e,{dy:n,y:a}=t,s=(0,E._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hn(dM,n.shape,a.shape):new u7("return (b >= 0.0) ? a : a * (b + 1.0);",n.shape,a.shape);return r.runWebGLProgram(s,[n,a],n.dtype)}},dz=hb({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:hS.PP}),dB={kernelName:E.BRl,backendName:"webgl",kernelFunc:dz},dW=hy({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${E.C0T.ERF_P};
  float a1 = ${E.C0T.ERF_A1};
  float a2 = ${E.C0T.ERF_A2};
  float a3 = ${E.C0T.ERF_A3};
  float a4 = ${E.C0T.ERF_A4};
  float a5 = ${E.C0T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),dV={kernelName:E._s9,backendName:"webgl",kernelFunc:dW},dU=hy({opSnippet:hg+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:hS.E$,dtype:"float32"}),dG={kernelName:E.ox3,backendName:"webgl",kernelFunc:dU};function dZ(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(E.ZSL.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),hA({inputs:{x:s},backend:n,attrs:{shape:o}})}let dj={kernelName:E.ybN,backendName:"webgl",kernelFunc:dZ},dK="return exp(x) - 1.0;",dH=hy({opSnippet:dK,packedOpSnippet:dK,cpuKernelImpl:hS.SF}),dY={kernelName:E.ybj,backendName:"webgl",kernelFunc:dH};class dQ{constructor(e,t,r){let n;this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let s=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${a}.0`:"1.0";if("real"===e)n="return real * expR - imag * expI;";else if("imag"===e)n="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${n}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function dq(e,t,r){let n=r.texData.get(e.dataId),a=E.ZSL.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=hA({inputs:{x:e},backend:r,attrs:{shape:[a/s,s]}}),o=i.shape,l=new dQ("real",o,t),u=new dQ("imag",o,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:o},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:o}],p=r.runWebGLProgram(l,h,"float32"),d=r.runWebGLProgram(u,h,"float32"),c=hi({inputs:{real:p,imag:d},backend:r});r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d);let f=hA({inputs:{x:c},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(c),f}let dX={kernelName:E.rGP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t;return dq(n,!1,r)}};class dJ{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function d0(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:s}=r;if("string"===(s=s||E.ZSL.inferDtype(a))){let e=E.ZSL.getArrayFromDType(s,E.ZSL.sizeFromShape(n));return e.fill(a),t.makeTensorInfo(n,s,e)}{let e=new dJ(n,a),r=[[a]];return t.runWebGLProgram(e,[],s,r)}}let d1={kernelName:E.SQl,backendName:"webgl",kernelFunc:d0};class d2{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let d3={kernelName:E.BxF,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=new d2(r.shape);return t.runWebGLProgram(n,[r],r.dtype)}},d4="return floor(x);",d9=hy({opSnippet:d4,packedOpSnippet:d4,cpuKernelImpl:hS.CJ}),d5={kernelName:E.ZgB,backendName:"webgl",kernelFunc:d9},d6=hb({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),d8={kernelName:E.ElG,backendName:"webgl",kernelFunc:d6};var d7=r(45524);class ce{constructor(e){this.variableNames=["A"];let t=(0,p1.B)(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class ct{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=(0,p1.B)(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}let cr={kernelName:E.awo,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{pixels:s}=t,{numChannels:i}=a,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,h]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[h,u],d=[h,u,i];if(l||o){let e=(0,E._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==n||e!==cn)&&(cn=e,n=document.createElement("canvas").getContext("2d",{willReadFrequently:cn})),n.canvas.width=u,n.canvas.height=h,n.drawImage(s,0,0,u,h),s=n.canvas}let c=r.makeTensorInfo(p,"int32");r.texData.get(c.dataId).usage=d7.tT.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(c.dataId),s);let f=(0,E._K2)().getBool("WEBGL_PACK")?new ct(d):new ce(d),m=r.runWebGLProgram(f,[c],"int32");return r.disposeData(c.dataId),m}},cn=(0,E._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),ca={kernelName:E.aAr,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=r,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=E.C0T.convertConv2DDataFormat(p),y=E.C0T.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[],x=null!=o,v=null!=l,w="leakyrelu"===f,T=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=hA({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,p)),v&&e.push(t(l,p)),w){let t=n.makeTensorInfo([],"float32",E.ZSL.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1===y.filterHeight&&1===y.filterWidth&&1===y.dilationHeight&&1===y.dilationWidth&&1===y.strideHeight&&1===y.strideWidth&&("SAME"===y.padInfo.type||"VALID"===y.padInfo.type))t=p4({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else if(y.strideWidth<=2&&"channelsLast"===g&&(0,E._K2)().getBool("WEBGL_EXP_CONV")){let e=new p0(y,x,f?hx(f,!0):null,v,w),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],a=T();t=n.runWebGLProgram(e,a,"float32",r)}else if((0,E._K2)().getBool("WEBGL_CONV_IM2COL"))t=p9({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=new pX(y,x,f?hx(f,!1):null,v,w),r=T();t=n.runWebGLProgram(e,r,"float32")}let S=hA({inputs:{x:t},backend:n,attrs:{shape:y.outShape}});return b.push(t),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}},cs={kernelName:E.T7M,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=r,{strides:u,pad:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=a,m=[],g=p;null==g&&(g=[1,1]),E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);let y=E.C0T.computeConv2DInfo(s.shape,i.shape,u,g,h,d,!0),b=(0,E._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=c?hx(c,b):null,v=[s,i],w=null!=o,T=null!=l,S="leakyrelu"===c;if(w&&v.push(o),T&&v.push(l),S){let e=n.makeTensorInfo([],"float32",E.ZSL.createScalarValue(f,"float32"));v.push(e),m.push(e)}t=b?new dN(y,w,x,T,S):new dS(y,w,x,T,S);let N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],k=n.runWebGLProgram(t,v,"float32",N);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),k}};class ci{constructor(e,t,r,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=r;let a=(0,ht.bf)(r.length),s=`
    int index;`;for(let e=0;e<this.sliceDim;e++)s+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}let co={kernelName:E.O4G,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=a.shape,i=s[s.length-1],o=E.ZSL.sizeFromShape(n.shape),[l,u,h,p]=E.C0T.prepareAndValidate(n,a),d=hA({inputs:{x:a},backend:r,attrs:{shape:[u,i]}}),c=hA({inputs:{x:n},backend:r,attrs:{shape:[E.ZSL.sizeFromShape(n.shape)/h,h]}});if(r.shouldExecuteOnCPU([n,a])||"string"===n.dtype){let e=r.readSync(a.dataId),t=r.bufferSync(n),s=(0,hS.UF)(e,t,n.dtype,u,i,h,p,n.shape,o);return r.makeTensorInfo(l,n.dtype,s.values)}let f=new ci(i,p,[u,h],n.shape),m=r.runWebGLProgram(f,[c,d],c.dtype),g=hA({inputs:{x:m},backend:r,attrs:{shape:l}});return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(m),g}};class cl{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let r=(0,ht.bf)(this.rank),n=function(e,t){let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let t=0;t<e.length;t++)2===t?n.push("index"):n.push(`${r[t]}`);return n.join()}(e,0);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}}function cu(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n,l=E.ZSL.parseAxisParam(i,a.shape)[0];if((0,E._K2)().get("DEBUG")){let e=r.readSync(s.dataId),t=a.shape[l];for(let r=0;r<e.length;++r){let n=e[r];E.ZSL.assert(n<=t-1&&n>=0,()=>`GatherV2: the index value ${n} is not in [0, ${t-1}]`)}}let u=E.C0T.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=E.ZSL.sizeFromShape(s.shape),p=[],d=hA({inputs:{x:a},backend:r,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=hA({inputs:{x:s},backend:r,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(r.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=r.bufferSync(c),t=r.bufferSync(d),n=(0,hS.QM)(t,e,f);return p.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(u.outputShape,n.dtype,n.values)}let m=new cl(d.shape,f),g=r.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=hA({inputs:{x:g},backend:r,attrs:{shape:u.outputShape}});return p.forEach(e=>r.disposeIntermediateTensorInfo(e)),y}let ch={kernelName:E.mxL,backendName:"webgl",kernelFunc:cu},cp=hb({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:hS.Tm,dtype:"bool"}),cd={kernelName:E.XhZ,backendName:"webgl",kernelFunc:cp},cc=hb({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:hS.BW}),cf={kernelName:E.lLS,backendName:"webgl",kernelFunc:cc},cm={kernelName:E.OAQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t;return dq(n,!0,r)}},cg=hy({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),cy={kernelName:E.gIW,backendName:"webgl",kernelFunc:cg},cb=hy({opSnippet:"return float(isinf(x));",dtype:"bool"}),cx={kernelName:E.E3$,backendName:"webgl",kernelFunc:cb},cv=hy({opSnippet:"return float(isnan(x));",dtype:"bool"}),cw={kernelName:E.iPs,backendName:"webgl",kernelFunc:cv},cT=hb({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:hS.uw,dtype:"bool"}),cS={kernelName:E.mIA,backendName:"webgl",kernelFunc:cT},cN=hb({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:hS.mo,dtype:"bool"}),ck={kernelName:E.CwD,backendName:"webgl",kernelFunc:cN},cI={kernelName:E.mnI,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=(0,hS.AC)(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}},cC=hy({opSnippet:hg+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:hS.rI}),cE={kernelName:E.tG8,backendName:"webgl",kernelFunc:cC},cA=hy({opSnippet:hg+`
  return log(1.0 + x);
`}),c$={kernelName:E.Cg$,backendName:"webgl",kernelFunc:cA},cR=hb({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),cF={kernelName:E.RUm,backendName:"webgl",kernelFunc:cR},c_=hy({opSnippet:"return float(!(x >= 1.0));"}),cD={kernelName:E.nZd,backendName:"webgl",kernelFunc:c_},cO=hb({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),cL={kernelName:E.LXA,backendName:"webgl",kernelFunc:cO};class cM{constructor(e,t,r,n,a){let s;this.variableNames=["x"],this.outputShape=[];let i=e[3]-1;this.outputShape=e;let o=`float(${r}) + float(${n}) * sum`;s=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${s};
        setOutput(val);
      }
    `}}class cP{constructor(e,t,r,n,a){let s;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e[3]-1;this.outputShape=e;let o=`float(${r}) + float(${n}) * sum`;s=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${s};
        setOutput(result);
      }
    `}}let cz={kernelName:E.jM4,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n,u=(0,E._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new cP(a.shape,s,i,o,l):new cM(a.shape,s,i,o,l);return r.runWebGLProgram(u,[a],a.dtype)}};class cB{constructor(e,t,r,n,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=n,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}let cW={kernelName:E.ToN,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=n,p=new cB(a.shape,o,l,u,h);return r.runWebGLProgram(p,[a,s,i],a.dtype)}};function cV(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{reductionIndices:i,keepDims:o}=a,l=s.shape.length,u=E.ZSL.parseAxisParam(i,s.shape),h=u,p=E.C0T.getAxesPermutation(h,l),d=null!=p,c=n.shouldExecuteOnCPU([s]),f=s;if(d){if(c){let e=n.texData.get(f.dataId).values,t=Array(l);for(let e=0;e<t.length;e++)t[e]=s.shape[p[e]];let r=(0,hS.Q5)(e,s.shape,s.dtype,p,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=hL(s,p,n);h=E.C0T.getInnerMostAxes(h.length,l)}E.C0T.assertAxesAreInnerMostDims("max",h,l);let[m,g]=E.C0T.computeOutAndReduceShapes(f.shape,h),y=m;if(o&&(y=E.C0T.expandShapeToKeepDim(m,u)),c){let e=n.texData.get(f.dataId).values,r=(0,hS.rw)(e,E.ZSL.sizeFromShape(g),y,s.dtype);t=n.makeTensorInfo(y,s.dtype),n.texData.get(t.dataId).values=r}else t=function(e,t,r,n){let a=E.ZSL.sizeFromShape(t),s=E.ZSL.sizeFromShape(e.shape),i=hA({inputs:{x:e},attrs:{shape:[s/a,a]},backend:n}),o=h_(i,e.dtype,"max",n),l=hA({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}(f,g,y,n);return d&&n.disposeIntermediateTensorInfo(f),t}let cU={kernelName:E.VAI,backendName:"webgl",kernelFunc:cV},cG=hb({opSnippet:u8+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+hr+`
  return result;
`,cpuKernelImpl:hS.Dy}),cZ={kernelName:E.LDN,backendName:"webgl",kernelFunc:cG},cj={kernelName:E.t3d,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;(0,hE.CE)(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=E.C0T.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&E.ZSL.arraysEqual(u.inShape,u.outShape))return ha({inputs:{x:a},backend:r});let h=new pl(u,"max",!1);return r.runWebGLProgram(h,[a],a.dtype)}},cK={kernelName:E.ySp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=n,h=new pu(E.C0T.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),"max",!1);return r.runWebGLProgram(h,[a],a.dtype)}};class cH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,r=e.strideWidth,n=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${a*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class cY{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let cQ={kernelName:E.cHb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=E.C0T.computePool3DInfo(s.shape,i,o,[1,1,1],l,u),p=new pu(h,"max",!0),d=r.runWebGLProgram(p,[s],s.dtype),c=new cY(h),f=r.runWebGLProgram(c,[a,d],s.dtype);return r.disposeIntermediateTensorInfo(d),f}},cq={kernelName:E.RXX,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t;(0,hE.CE)([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=n,p=E.C0T.computePool2DInfo(s.shape,o,l,1,u,h),d=new pl(p,"max",!0),c=r.runWebGLProgram(d,[s],s.dtype),f=new cH(p),m=r.runWebGLProgram(f,[a,c],s.dtype);return r.disposeIntermediateTensorInfo(c),m}},cX={kernelName:E.TL8,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;E.ZSL.assert(4===n.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];E.ZSL.assert(E.C0T.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let u=E.C0T.computePool2DInfo(n.shape,a,s,l,i),[h,p]=function(e,t,r,n){let a=new pl(r,"max",!1),s=n.runWebGLProgram(a,[e],"float32");return a=new pl(r,"max",!0,!0,t),[s,n.runWebGLProgram(a,[e],"float32")]}(n,o,u,r);return[h,p]}},cJ={kernelName:E.g5A,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{keepDims:a,axis:s}=t,i=n.shape.length,o=E.ZSL.parseAxisParam(s,n.shape),l=o,u=E.C0T.getAxesPermutation(l,i),h=null!=u,p=r.shouldExecuteOnCPU([n]),d=[],c=n;if(h){if(p){let e=r.texData.get(c.dataId).values,t=Array(i);for(let e=0;e<t.length;e++)t[e]=n.shape[u[e]];let a=(0,hS.Q5)(e,n.shape,n.dtype,u,t);c=r.makeTensorInfo(t,n.dtype),r.texData.get(c.dataId).values=a}else c=hL(n,u,r);d.push(c),l=E.C0T.getInnerMostAxes(l.length,i)}E.C0T.assertAxesAreInnerMostDims("sum",l,i);let[f,m]=E.C0T.computeOutAndReduceShapes(c.shape,l),g=f;a&&(g=E.C0T.expandShapeToKeepDim(f,o));let y=function(e,t,r,n){let a=E.ZSL.sizeFromShape(t),s=E.ZSL.sizeFromShape(e.shape),i=hA({inputs:{x:e},attrs:{shape:[s/a,a]},backend:n}),o=h_(i,"float32","mean",n),l=hA({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}(c,m,g,r);for(let e of d)r.disposeIntermediateTensorInfo(e);return y}},c0={kernelName:E.lNG,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=E.ZSL.parseAxisParam(i,s.shape),h=u,p=E.C0T.getAxesPermutation(h,l),d=s;null!=p&&(d=hz({inputs:{x:s},backend:n,attrs:{perm:p}}),h=E.C0T.getInnerMostAxes(h.length,s.shape.length)),E.C0T.assertAxesAreInnerMostDims("min",h,l);let[c,f]=E.C0T.computeOutAndReduceShapes(d.shape,h),m=hA({inputs:{x:d},backend:n,attrs:{shape:[-1,E.ZSL.sizeFromShape(f)]}}),g=h_(m,m.dtype,"min",n);return t=o?hA({inputs:{x:g},backend:n,attrs:{shape:E.C0T.expandShapeToKeepDim(c,u)}}):hA({inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(d),t}},c1=hb({opSnippet:u8+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+hr+`
  return result;
`,cpuKernelImpl:hS.h}),c2={kernelName:E.LG0,backendName:"webgl",kernelFunc:c1};class c3{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=(0,ht.bf)(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),l="reflect"===r?0:1;if(1===n){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}}class c4{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=(0,ht.bf)(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=(0,he.Jp)("rc",n),l=(0,he.Jp)("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,h=1===n?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===r?0:1,d="";if(1===n){let e=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${o[n-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{let e=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${o[n-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${e}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${o[n-1]} += 1;
          if(${u}) {
            ${e}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}}let c9={kernelName:E.x7F,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{paddings:a,mode:s}=r,i=(0,E._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new c4(n.shape,a,s):new c3(n.shape,a,s);return t.runWebGLProgram(i,[n],n.dtype)}},c5=hb({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+hr+`
  return result;
`}),c6={kernelName:E.BLA,backendName:"webgl",kernelFunc:c5};class c8{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}let c7=hb({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),fe={kernelName:E.sDr,backendName:"webgl",kernelFunc:c7},ft="return a - b;",fr=hb({opSnippet:ft,packedOpSnippet:ft,supportsComplex:!0,cpuKernelImpl:hS.lL}),fn={kernelName:E.PbM,backendName:"webgl",kernelFunc:fr};function fa(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=E.ZSL.parseAxisParam([s],a.shape),o=cV({inputs:{x:a},backend:r,attrs:{reductionIndices:i,keepDims:!1}}),l=E.C0T.expandShapeToKeepDim(o.shape,i),u=hA({inputs:{x:o},backend:r,attrs:{shape:l}}),h=fr({inputs:{a:a,b:u},backend:r}),p=dU({inputs:{x:h},backend:r}),d=hM({inputs:{x:p},backend:r,attrs:{axis:i,keepDims:!1}}),c=hA({inputs:{x:d},backend:r,attrs:{shape:l}}),f=c7({inputs:{a:p,b:c},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),f}let fs={kernelName:E.rFG,backendName:"webgl",kernelFunc:fa},fi={kernelName:E.WT3,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n,l=o?a:fa({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),u=new c8(l.shape[0],l.shape[1],s),h=r.runWebGLProgram(u,[l],"int32",[[i]]);return o||r.disposeIntermediateTensorInfo(l),h}},fo=hf.dR+`
  return -x;
`,fl=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fu={kernelName:E.l0G,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{x:a}=r;if(n.shouldExecuteOnCPU([a])){let e=n.texData.get(a.dataId),[t,r]=(0,hS.rQ)(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}return t=(0,E._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hm.rf(a.shape,fl):new hf.hE(a.shape,fo),n.runWebGLProgram(t,[a],a.dtype)}},fh=E.kpo.c7,fp={kernelName:E.SDM,backendName:"webgl",kernelFunc:function(e){E.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,{selectedIndices:u}=fh(r.readSync(a.dataId),r.readSync(s.dataId),i,o,l);return r.makeTensorInfo([u.length],"int32",new Int32Array(u))}},fd=E.kpo.ZS,fc={kernelName:E.Zl4,backendName:"webgl",kernelFunc:function(e){E.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n,{selectedIndices:h,validOutputs:p}=fd(r.readSync(a.dataId),r.readSync(s.dataId),i,o,l,u);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([],"int32",new Int32Array([p]))]}},ff=E.kpo.ut,fm={kernelName:E.e0f,backendName:"webgl",kernelFunc:function(e){E.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,{selectedIndices:h,selectedScores:p}=ff(r.readSync(a.dataId),r.readSync(s.dataId),i,o,l,u);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([p.length],"float32",new Float32Array(p))]}};class fg{constructor(e,t,r,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${r}),
                      float(index == coords.y)));
      }
    `}}let fy={kernelName:E.urI,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n,u=E.ZSL.sizeFromShape(a.shape),h=new fg(u,i,o,l),p=hA({inputs:{x:a},backend:r,attrs:{shape:[u]}}),d=r.runWebGLProgram(h,[p],s);r.disposeIntermediateTensorInfo(p);let c=hA({inputs:{x:d},backend:r,attrs:{shape:[...a.shape,i]}});return r.disposeIntermediateTensorInfo(d),c}};function fb(e){let{inputs:t,backend:r}=e,{x:n}=t;if("complex64"!==n.dtype)return d0({attrs:{shape:n.shape,dtype:n.dtype,value:"string"===n.dtype?"":0},backend:r});{let e=p_({inputs:{input:n},backend:r}),t=fb({inputs:{x:e},backend:r}),a=pH({inputs:{input:n},backend:r}),s=fb({inputs:{x:a},backend:r}),i=hi({inputs:{real:t,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),i}}let fx={kernelName:E.xJ3,backendName:"webgl",kernelFunc:fb},fv={kernelName:E.LWX,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n}=t,{x:a}=r;if("string"===a.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==a.dtype)return d0({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n});{let t=p_({inputs:{input:a},backend:n}),r=e({inputs:{x:t},backend:n}),s=pH({inputs:{input:a},backend:n}),i=fb({inputs:{x:s},backend:n}),o=hi({inputs:{real:r,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}}},fw={kernelName:E.mM$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(1===t.length)return dZ({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{E.ZSL.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),E.ZSL.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=pQ({inputs:t.map(e=>{let t=dZ({inputs:{input:e},backend:r,attrs:{dim:a}});return o.push(t),t}),backend:r,attrs:{axis:a}});return o.forEach(e=>r.disposeIntermediateTensorInfo(e)),l}};class fT{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=(0,ht.bf)(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(1===n){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}}class fS{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=(0,ht.bf)(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=(0,he.Jp)("rc",n),l=(0,he.Jp)("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,h=1===n?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${u}) {
      `,1===n?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,1===n?"":`  ${o[n-1]} += 1;
         if(${u}) {`],d=1===n?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===n?2:4;e<t;e++)c+=`
        ${p[e]}
        if (${d}) {
          result[${e}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${e}] = getChannel(getX(${l.join()}), ${h});
        }
      `;c+=1===n?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}}let fN=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;if(0===E.ZSL.sizeFromShape(a.shape))return d0({backend:r,attrs:{shape:s.map((e,t)=>e[0]+a.shape[t]+e[1]),value:i,dtype:a.dtype}});let o=(0,E._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fS(a.shape,s,i):new fT(a.shape,s,i),l=[[i]];return r.runWebGLProgram(o,[a],a.dtype,l)},fk={kernelName:E.ODT,backendName:"webgl",kernelFunc:fN},fI=hb({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+hr+`
  return result;
`}),fC={kernelName:E.pyJ,backendName:"webgl",kernelFunc:fI},fE={kernelName:E.kdj,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=E.ZSL.parseAxisParam(i,s.shape),p=h,d=E.C0T.getAxesPermutation(p,l),c=s;if(null!=d&&(c=hz({inputs:{x:s},backend:n,attrs:{perm:d}}),p=E.C0T.getInnerMostAxes(p.length,l),u.push(c)),E.C0T.assertAxesAreInnerMostDims("prod",p,l),n.shouldExecuteOnCPU([c])){let e=n.texData.get(c.dataId).values,{outVals:r,outShape:a,outDtype:s}=(0,hS.Og)(c.shape,c.dtype,e,p);t=n.makeTensorInfo(a,s,r)}else{let[e,r]=E.C0T.computeOutAndReduceShapes(c.shape,p),a=hA({inputs:{x:c},backend:n,attrs:{shape:[-1,E.ZSL.sizeFromShape(r)]}}),i=h_(a,(0,E.chL)(s.dtype),"prod",n);t=hA({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(o){u.push(t);let e=E.C0T.expandShapeToKeepDim(t.shape,h);t=hA({inputs:{x:t},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),t}},fA={kernelName:E.oJ2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,l=a.map(e=>r.readSync(e.dataId)),u=a.map(e=>e.shape),h=r.readSync(s.dataId),p=r.readSync(i.dataId),[d,c,f]=(0,hS.G4)(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map(e=>r.makeTensorInfo([e.length],"int32",e)),g=r.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},f$={kernelName:E.CQC,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:s}=t,i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,h]=(0,hS.Oy)(i,n.shape,n.dtype,o,a.shape,l,s.shape);return[r.makeTensorInfo([u.length],"int32",u),r.makeTensorInfo([h.length],n.dtype,h)]}},fR={kernelName:E.mH5,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=n,u=r.readSync(a.dataId),h=r.readSync(s.dataId),p=r.readSync(i.dataId),d=o.map(e=>r.readSync(e.dataId)),c=o.map(e=>e.shape),[f,m]=(0,hS.G3)(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return r.makeTensorInfo(f,s.dtype,m)}},fF=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=(0,hS.we)(n,a,s,i);return t.makeTensorInfo([o.length],i,o)},f_={kernelName:E.Q6t,backendName:"webgl",kernelFunc:fF},fD=hy({opSnippet:"return 1.0 / x;"}),fO={kernelName:E.huO,backendName:"webgl",kernelFunc:fD},fL=hy({opSnippet:hf.dR+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),fM={kernelName:E.fUj,backendName:"webgl",kernelFunc:fL},fP=hy({opSnippet:hf.dR+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),fz={kernelName:E.P_L,backendName:"webgl",kernelFunc:fP};class fB{constructor(e,t,r,n,a){let s;this.variableNames=["A"],this.outputShape=[];let[i,o,l,u]=e;this.outputShape=[i,t,r,u];let h=[n&&t>1?o-1:o,n&&r>1?l-1:l],p=[n&&t>1?t-1:t,n&&r>1?r-1:r];s=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/p[0]},
          ${h[1]/p[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${s};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class fW{constructor(e,t,r,n,a){let s;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,o,l,u]=e;this.outputShape=[i,t,r,u];let h=[n&&t>1?o-1:o,n&&r>1?l-1:l],p=[n&&t>1?t-1:t,n&&r>1?r-1:r];s=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/p[0]},
          ${h[1]/p[1]},
          ${h[1]/p[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${s};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}let fV={kernelName:E.hgw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,h=(0,E._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fW(a.shape,l,u,s,i):new fB(a.shape,l,u,s,i);return r.runWebGLProgram(h,[a],"float32")}};class fU{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],l=[r&&s>1?s-1:s,r&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}let fG={kernelName:E.FCQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new fU(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}};class fZ{constructor(e,t,r,n,a){let s;this.variableNames=["A"],this.outputShape=[];let[i,o,l,u]=e;this.outputShape=[i,t,r,u];let h=[n&&t>1?o-1:o,n&&r>1?l-1:l],p=[n&&t>1?t-1:t,n&&r>1?r-1:r];s=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/p[0]},
          ${h[1]/p[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${s};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class fj{constructor(e,t,r,n,a){let s;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,o,l,u]=e;this.outputShape=[i,t,r,u];let h=[n&&t>1?o-1:o,n&&r>1?l-1:l],p=[n&&t>1?t-1:t,n&&r>1?r-1:r];s=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/p[0]},
          ${h[1]/p[1]},
          ${h[1]/p[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${s};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}let fK={kernelName:E.jOE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,h=(0,E._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fj(a.shape,l,u,s,i):new fZ(a.shape,l,u,s,i);return r.runWebGLProgram(h,[a],a.dtype)}};class fH{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],l=[r&&s>1?s-1:s,r&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}let fY={kernelName:E.XQy,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new fH(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}};class fQ{constructor(e,t){this.variableNames=["x"];let r=e.length;if(r>4)throw Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,1===r){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=r=>-1!==t.indexOf(r)&&1!==e[r]?`${e[r]} - coords[${r}] - 1`:`coords[${r}]`,a=e.map((e,t)=>n(t)).join(","),s=(0,ht.bf)(r);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}class fq{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let r=e.length;if(r>4)throw Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;let n=(0,he.Jp)("rc",r),a=`${n[r-1]} + 1 < ${this.outputShape[r-1]}`,s=`${n[r-2]} + 1 < ${this.outputShape[r-2]}`,i=(0,ht.bf)(r);function o(r){let n=e.map((n,a)=>-1!==t.indexOf(a)&&1!==e[a]?`${e[a]} - ${r[a]} - 1`:`${r[a]}`),a=n.join(","),s=n.slice(-2).join(",");return`getChannel(getX(${a}), vec2(${s}))`}1===r?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(n.slice())};
          if(${a}){
            result.g = ${function(e){return e[r-1]="("+e[r-1]+" + 1)",o(e)}(n.slice())};
          }
          if(${s}) {
            result.b = ${function(e){return e[r-2]="("+e[r-2]+" + 1)",o(e)}(n.slice())};
            if(${a}) {
              result.a = ${function(e){return e[r-1]="("+e[r-1]+" + 1)",e[r-2]="("+e[r-2]+" + 1)",o(e)}(n.slice())};
            }
          }
          setOutput(result);
        }
    `}}let fX={kernelName:E.D7i,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n,i=a.shape.length,o=E.ZSL.parseAxisParam(s,a.shape);if(0===i)return ha({inputs:{x:a},backend:r});let l=(0,E._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fq(a.shape,o):new fQ(a.shape,o);return r.runWebGLProgram(l,[a],a.dtype)}};class fJ{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=e[1],n=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let f0={kernelName:E.BK4,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=new fJ(n.shape,s),[l,u]=E.C0T.getImageCenter(i,n.shape[1],n.shape[2]),h=[[l,u,Math.sin(a),Math.cos(a)]];return r.runWebGLProgram(o,[n],n.dtype,h)}},f1=hy({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),f2={kernelName:E.hVg,backendName:"webgl",kernelFunc:f1},f3=hy({opSnippet:"return inversesqrt(x);",cpuKernelImpl:hS.tc}),f4={kernelName:E.TOR,backendName:"webgl",kernelFunc:f3};class f9{constructor(e,t,r,n,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=(0,ht.bf)(a.length),u=(0,ht.bf)(s.length),h="";1===r?h="i":2===r&&(h="i, j");let p=`getIndices(${h})`,d="";1===n?d="i":2===n&&(d="i, coords[1]");let c=`getUpdates(${d})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}class f5{constructor(e,t,r,n,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=(0,ht.bf)(a.length),u=(0,ht.bf)(s.length),h="";1===r?h="i":2===r&&(h="i, j");let p=`getIndices(${h})`,d="";1===n?d="i":2===n&&(d="i, coords[1]");let c=`getUpdates(${d})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}let f6={kernelName:E.pJc,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{indices:s,updates:i}=r,{shape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=E.C0T.calculateShapes(i,s,o),c=[d/h,h];if(0===d)return n.makeTensorInfo(o,s.dtype);let f=hA({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=hA({inputs:{x:i},backend:n,attrs:{shape:[u,h]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));t=(0,E._K2)().getBool("WEBGL_PACK")?new f5(u,l,f.shape.length,m.shape.length,p,c):new f9(u,l,f.shape.length,m.shape.length,p,c);let y=n.runWebGLProgram(t,[m,f,g],m.dtype),b=hA({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}};class f8{constructor(e,t,r,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===(0,E._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${s}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===n?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}let f7={kernelName:E.uWl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=new f8(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return r.runWebGLProgram(o,[a,s],"int32",l)}};class me{constructor(e,t,r){let n,a;if(this.variableNames=["c","a","b"],this.outputShape=t,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(1===r)a="resRC",n="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let n=0;n<t.length;n++)i.push(`${r[n]}`),n<e&&s.push(`${r[n]}`);n=s.join(),a=i.join()}let s=(0,ht.bf)(r);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}let mt={kernelName:E.l6P,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=new me(n.shape.length,a.shape,a.shape.length);return r.runWebGLProgram(i,[n,a,s],(0,E.TuY)(a.dtype,s.dtype))}},mr=hy({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${E.C0T.SELU_SCALEALPHA};
  float scale = ${E.C0T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),mn={kernelName:E.u$b,backendName:"webgl",kernelFunc:mr},ma=hy({opSnippet:hg+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:hS.BC}),ms={kernelName:E.vI1,backendName:"webgl",kernelFunc:ma},mi=hy({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),mo={kernelName:E.YVe,backendName:"webgl",kernelFunc:mi},ml=hy({opSnippet:hg+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${hr}
  return result;
`}),mu={kernelName:E.hql,backendName:"webgl",kernelFunc:ml},mh=hy({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),mp={kernelName:E.J3C,backendName:"webgl",kernelFunc:mh},md=hy({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),mc={kernelName:E.Fin,backendName:"webgl",kernelFunc:md},mf={kernelName:E.A8B,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;E.ZSL.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=fN({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),p=E.C0T.getReshaped(h.shape,s,o,!1),d=E.C0T.getPermuted(p.length,s.length,!1),c=E.C0T.getReshapedPermuted(h.shape,s,o,!1),f=hA({inputs:{x:h},backend:r,attrs:{shape:p}}),m=hz({inputs:{x:f},backend:r,attrs:{perm:d}}),g=hA({inputs:{x:m},backend:r,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach(e=>r.disposeIntermediateTensorInfo(e)),g}},mm={kernelName:E.C8s,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
         ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.readSync(n.dataId),l=r.readSync(a.dataId),u=r.readSync(s.dataId),h=r.readSync(i.dataId)[0],[p,d,c,f,m]=(0,hS.sB)(o,n.shape,n.dtype,l,a.dtype,u,h);return[r.makeTensorInfo(d,n.dtype,p),r.makeTensorInfo([d[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}},mg={kernelName:E.BoJ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape ${n.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.readSync(a.dataId)),o=r.readSync(n.dataId),l=Array.from(r.readSync(s.dataId)),[u,h,p]=(0,hS.vo)(o,n.shape,n.dtype,i,l);return[r.makeTensorInfo(h,n.dtype,u),r.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},my={kernelName:E.L6G,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
              ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,h]=(0,hS.zN)(i,n.shape,n.dtype,o,l,!0);return r.makeTensorInfo(h,n.dtype,u)}},mb={kernelName:E.DvZ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
             ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,h]=(0,hS.zN)(i,n.shape,n.dtype,o,l);return r.makeTensorInfo(h,n.dtype,u)}},mx={kernelName:E.jgd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=E.C0T.calculateShapes(s,a,o);if("string"===s.dtype){let e=r.bufferSync(a),t=r.bufferSync(s),n=E.ZSL.decodeString(r.readSync(i.dataId)[0]),c=(0,hS.fC)(e,t,o,d,h,u,l,p,n,!1);return r.makeTensorInfo(o,c.dtype,c.values)}let c=new f9(u,l,a.shape.length,s.shape.length,p,[d,1],!1),f=r.runWebGLProgram(c,[s,a,i],s.dtype),m=hA({inputs:{x:f},backend:r,attrs:{shape:o}});return r.disposeIntermediateTensorInfo(f),m}},mv={kernelName:E.Blb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=E.ZSL.parseAxisParam(i,a.shape)[0],l=E.C0T.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let n=pS({inputs:{x:a},backend:r,attrs:{begin:u,size:t}});return u[o]+=e,n})}},mw="return sqrt(x);",mT=hy({opSnippet:mw,packedOpSnippet:mw,cpuKernelImpl:hS.LF}),mS={kernelName:E.dFH,backendName:"webgl",kernelFunc:mT},mN=hy({opSnippet:"return x * x;"}),mk={kernelName:E.M6A,backendName:"webgl",kernelFunc:mN},mI="return (a - b) * (a - b);",mC=hb({opSnippet:mI,packedOpSnippet:mI}),mE={kernelName:E.Ddj,backendName:"webgl",kernelFunc:mC},mA={kernelName:E.GZp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;if("string"!==a.dtype)throw Error("Input must be of datatype string");let s=r.readSync(a.dataId),i=E.C0T.fromUint8ToStringArray(s),o=(0,hS.yZ)(i,"string",n);return r.makeTensorInfo(a.shape,"string",o)}},m$={kernelName:E.pnw,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:r}){let{x:n}=e,a=hf.dR+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new hf.hE(n.shape,a);return r.runWebGLProgram(s,[n],n.dtype)}};class mR{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;let n=r.length,a=(0,ht.bf)(r.length),s=(0,ht.bf)(r.length),i="";if(1===n)i="coords * strides + begin";else{let e=0;i=r.map((t,n)=>(e++,1===r.length?`coords * strides[${n}] + begin[${n}]`:`coords[${e-1}] * strides[${n}] + begin[${n}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}let mF={kernelName:E.UcO,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=E.Kro.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=hA({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){E.ZSL.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let e=E.Kro.computeOutShape(x,v,w),r=pS({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=hA({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(r)}else if(n.shouldExecuteOnCPU([s])){let e=n.readSync(s.dataId),r=(0,E.ra8)(s.shape,s.dtype,e),a=(0,hS.cy)(f,r,w,x);t=n.makeTensorInfo(m,s.dtype,a.values)}else{let e=new mR(x,w,f);t=n.runWebGLProgram(e,[s],s.dtype)}let T=hA({inputs:{x:t},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(t),T}},m_={kernelName:E.YAb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:h,dataSplits:p}=t,d=r.readSync(h.dataId),c=r.readSync(p.dataId),[f,m]=(0,hS.UC)(d,c,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(p.shape,"int32",m)]}},mD={kernelName:E.iW0,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.readSync(s.dataId),l=r.readSync(i.dataId)[0],[u,h,p]=(0,hS.S6)(o,l,a),d=h.length;return[r.makeTensorInfo([d,2],"int32",u),r.makeTensorInfo([d],"string",h),r.makeTensorInfo([2],"int32",new Int32Array(p))]}},mO={kernelName:E.$jE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=r.readSync(s.dataId),o=(0,hS.fW)(i,a);return r.makeTensorInfo(s.shape,"int32",o)}},mL=hy({opSnippet:"return tan(x);"}),mM={kernelName:E.oFs,backendName:"webgl",kernelFunc:mL},mP=hy({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),mz={kernelName:E.iuW,backendName:"webgl",kernelFunc:mP},mB={kernelName:E.X4r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{tensor:a,indices:s,updates:i}=t,{}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=E.C0T.calculateShapes(i,s,a.shape),d=[p/u,u];if(0===p)return r.makeTensorInfo(a.shape,s.dtype);let c=hA({inputs:{x:s},backend:r,attrs:{shape:[l,o]}}),f=hA({inputs:{x:i},backend:r,attrs:{shape:[l,u]}}),m=hA({inputs:{x:a},backend:r,attrs:{shape:d}}),g=new f9(l,o,c.shape.length,f.shape.length,h,d,!1,!0),y=r.runWebGLProgram(g,[f,c,m],m.dtype),b=hA({inputs:{x:y},backend:r,attrs:{shape:a.shape}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),b}};class mW{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[n]*t[n];this.outputShape=r,this.rank=r.length;let n=(0,ht.bf)(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let t=0;t<e.length;t++)n.push(`imod(${r[t]}, ${e[t]})`);return n.join()}(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function mV(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;if("string"===a.dtype||a.shape.length>5){let e=r.readSync(a.dataId),t="string"===a.dtype?e.map(e=>E.ZSL.decodeString(e)):e,n=(0,E.ra8)(a.shape,a.dtype,t),i=(0,hS.$O)(n,s);return r.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new mW(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}let mU={kernelName:E.FAs,backendName:"webgl",kernelFunc:mV};class mG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class mZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function mj(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function mK(e){let t=1;for(;t<e;)t*=2;return t}let mH={kernelName:E.TBb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n,o=(0,E._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,E._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(r.shouldExecuteOnCPU([a])||h<o||s>l){let e=r.readSync(a.dataId),[t,n]=(0,hS.xt)(e,u,a.dtype,s,i);return[r.makeTensorInfo(t.shape,t.dtype,t.values),r.makeTensorInfo(n.shape,n.dtype,n.values)]}if(0===s)return u[u.length-1]=0,[r.makeTensorInfo(u,a.dtype,[]),r.makeTensorInfo(u,"int32",[])];if(1===h)return[a,d0({attrs:{shape:u,dtype:"int32",value:0},backend:r})];let p=r.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?r.unpackTensor(a):a,f=E.ZSL.sizeFromShape(u)/h,m=hA({inputs:{x:c},attrs:{shape:[f,h]},backend:r});d&&mj(r,c);let g=mK(s),y=mK(h),b=null,x=()=>null===b?[m,m]:[m,b],v=(e,t,n)=>{let a=x(),s=new mG(n),i=[[h],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=r.runWebGLProgram(s,a,"int32",i),mj(r,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let r=e;r>=1;r/=2)v(t,r,[f,y])}for(let e=y;e>g;e/=2){let t=x(),n=new mZ([f,e/2]),a=[[h],[null===b?1:0],[g]],s=b;b=r.runWebGLProgram(n,t,"int32",a),mj(r,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=pS({inputs:{x:b},backend:r,attrs:{begin:0,size:[f,s]}}),mj(r,w);let T=cu({inputs:{x:m,indices:b},backend:r,attrs:{axis:1,batchDims:1}});mj(r,m);let S=u.slice(0,-1);S.push(s),w=b,b=hA({inputs:{x:b},attrs:{shape:S},backend:r}),mj(r,w);let N=T;return T=hA({inputs:{x:T},attrs:{shape:S},backend:r}),mj(r,N),[T,b]}};class mY{constructor(e,t,r,n,a,s){let i;switch(this.variableNames=["Image","Transforms"],this.outputShape=s,n){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===r?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}let mQ={kernelName:E.dLy,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=new mY(p,d,i,o,l,[h,f,m,c]);return r.runWebGLProgram(g,[a,s],"float32")}},mq={kernelName:E.EwU,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;(0,hE.CE)(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=(0,hS.M_)(i,a,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}},mX={kernelName:E.dXR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=[],p=Array(i).fill(0),d=a.shape.slice();d[s]=1;let c=Array(o);for(let e=0;e<c.length;e++){p[s]=e;let t=pS({inputs:{x:a},backend:r,attrs:{begin:p,size:d}}),n=hA({inputs:{x:t},backend:r,attrs:{shape:l}});c[e]=n,h.push(t)}return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}};class mJ{constructor(e,t){this.variableNames=["x","segmentIds"];let r=e.windowSize,n=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/r);this.outputShape=[n,i];let o=4*Math.floor(r/4),l=r%4,u=`
        sumValue += dot(values, segFilter);
    `,h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let p="";a%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${1===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}}for(let e of[hV,hG,hj,hH,hq,h0,h1,h2,h5,h6,h7,pt,pn,ps,po,ph,pp,pf,pm,pg,px,pk,pI,pA,p$,pO,pP,pW,ho,pG,pq,p5,dt,dn,da,ds,di,du,dp,dc,db,dx,dv,dT,dk,dE,dA,dR,d_,dD,dL,dP,dB,dV,dG,dj,dY,dX,d1,d3,d5,d8,cr,ca,cs,co,ch,cd,cf,hs,cm,pY,cy,cx,cw,hh,cS,ck,cI,cE,c$,cF,cD,cL,cz,cW,cU,cZ,cj,cK,cQ,cq,cX,cJ,c0,c2,c9,c6,fi,hI,fu,fp,fc,fm,pF,fy,fv,fw,fk,fC,hc,fE,fA,f$,fR,f_,pD,fe,fO,fM,fz,h$,fV,fG,fK,fY,fX,f0,f2,f4,f6,f7,mt,mn,ms,mo,mu,mp,pN,fs,mc,mf,mm,mg,my,mb,mx,mv,mS,mk,mE,mA,m$,mF,m_,mD,mO,fn,hP,mM,mz,mB,mU,mH,mQ,hB,mq,mX,{kernelName:E.pPe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n,o=a.shape.length,l=[],u=0,h=E.C0T.getAxesPermutation([u],o),p=a;null!=h&&(p=hz({inputs:{x:a},backend:r,attrs:{perm:h}}),l.push(p),u=E.C0T.getInnerMostAxes(1,o)[0]);let d=E.C0T.segment_util.computeOutShape(p.shape,u,i),c=E.ZSL.sizeFromShape([p.shape[u]]),f=hA({inputs:{x:p},backend:r,attrs:{shape:[-1,c]}});l.push(f);let m=(0,E.chL)(a.dtype),g=(e,t,n,a,s)=>{let i=e.shape[0],o=e.shape[1],u=E.C0T.segment_util.segOpComputeOptimalWindowSize(o,s),h=new mJ({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),p=r.compileAndRun(h,[e,n],a);if(l.push(p),p.shape[1]===s)return p;let d=fF({backend:r,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=mV({inputs:{x:d},backend:r,attrs:{reps:[o/u]}});return l.push(d),l.push(c),g(p,t,c,a,s)},y=hA({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:r,attrs:{shape:d}}),b=y;return null!=h&&(l.push(y),b=hz({inputs:{x:b},backend:r,attrs:{perm:E.C0T.getUndoAxesPermutation(h)}})),l.forEach(e=>r.disposeIntermediateTensorInfo(e)),b}},fx])(0,E.tAK)(e);E.bgA,nW.r},92952:e=>{e.exports=r;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,r){this.low=0|e,this.high=0|t,this.unsigned=!!r}function n(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=n;var a={},s={};function i(e,t){var r,n,i;return t?(e>>>=0,(i=0<=e&&e<256)&&(n=s[e]))?n:(r=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=r),r):(e|=0,(i=-128<=e&&e<128)&&(n=a[e]))?n:(r=l(e,e<0?-1:0,!1),i&&(a[e]=r),r)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=c)return T}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=i,r.fromNumber=o,r.fromBits=l;var u=Math.pow;function h(e,t,r){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(r=t,t=!1):t=!!t,(r=r||10)<2||36<r)throw RangeError("radix");if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return h(e.substring(1),t,r).neg();for(var n,a=o(u(r,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),p=parseInt(e.substring(i,i+l),r);if(l<8){var d=o(u(r,l));s=s.mul(d).add(o(p))}else s=(s=s.mul(a)).add(o(p))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?h(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=p;var d=0x100000000,c=0xffffffffffffffff,f=0x8000000000000000,m=i(0x1000000),g=i(0);r.ZERO=g;var y=i(0,!0);r.UZERO=y;var b=i(1);r.ONE=b;var x=i(1,!0);r.UONE=x;var v=i(-1);r.NEG_ONE=v;var w=l(-1,0x7fffffff,!1);r.MAX_VALUE=w;var T=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=T;var S=l(0,-0x80000000,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(!this.eq(S))return"-"+this.neg().toString(e);var t=o(e),r=this.div(t),n=r.mul(t).sub(this);return r.toString(e)+n.toInt().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),h=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return h+i;for(;h.length<6;)h="0"+h;i=""+h+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return(1&this.low)==1},N.isEven=function(){return(1&this.low)==0},N.equals=function(e){return n(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return 0>this.comp(e)},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return 0>=this.comp(e)},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(n(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},N.neg=N.negate,N.add=function(e){n(e)||(e=p(e));var t,r,a=this.high>>>16,s=65535&this.high,i=this.low>>>16,o=65535&this.low,u=e.high>>>16,h=65535&e.high,d=e.low>>>16,c=65535&e.low,f=0,m=0;return t=0+((r=0+(o+c))>>>16),r&=65535,t+=i+d,m+=t>>>16,t&=65535,m+=s+h,f+=m>>>16,m&=65535,f+=a+u,l(t<<16|r,(f&=65535)<<16|m,this.unsigned)},N.subtract=function(e){return n(e)||(e=p(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(n(e)||(e=p(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var r,a,s=this.high>>>16,i=65535&this.high,u=this.low>>>16,h=65535&this.low,d=e.high>>>16,c=65535&e.high,f=e.low>>>16,y=65535&e.low,b=0,x=0;return r=0+((a=0+h*y)>>>16),a&=65535,r+=u*y,x+=r>>>16,r&=65535,r+=h*f,x+=r>>>16,r&=65535,x+=i*y,b+=x>>>16,x&=65535,x+=u*f,b+=x>>>16,x&=65535,x+=h*c,b+=x>>>16,x&=65535,b+=s*y+i*f+u*c+h*d,l(r<<16|a,(b&=65535)<<16|x,this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(n(e)||(e=p(e)),e.isZero())throw Error("division by zero");if(t){var r,a,s;return this.unsigned||-0x80000000!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(r=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(r)),s=r.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){for(var i=Math.ceil(Math.log(r=Math.max(1,Math.floor(a.toNumber()/e.toNumber())))/Math.LN2),h=i<=48?1:u(2,i-48),d=o(r),c=d.mul(e);c.isNegative()||c.gt(a);)r-=h,c=(d=o(r,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),a=a.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return(n(e)||(e=p(e)),t)?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return n(e)||(e=p(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return n(e)||(e=p(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return n(e)||(e=p(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return(n(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return(n(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(n(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?l(t,0,this.unsigned):l(t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},81190:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});let n=(0,r(67401).A)("Camera",[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]])},30098:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});let n=(0,r(67401).A)("Sparkles",[["path",{d:"M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z",key:"4pj2yx"}],["path",{d:"M20 3v4",key:"1olli1"}],["path",{d:"M22 5h-4",key:"1gvqau"}],["path",{d:"M4 17v2",key:"vumght"}],["path",{d:"M5 18H3",key:"zchphs"}]])},38684:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});let n=(0,r(67401).A)("Upload",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"17 8 12 3 7 8",key:"t8dd8p"}],["line",{x1:"12",x2:"12",y1:"3",y2:"15",key:"widbto"}]])},5565:(e,t,r)=>{"use strict";r.d(t,{default:()=>a.a});var n=r(4146),a=r.n(n)},87970:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"Image",{enumerable:!0,get:function(){return v}});let n=r(60306),a=r(29955),s=r(95155),i=a._(r(12115)),o=n._(r(47650)),l=n._(r(36107)),u=r(40666),h=r(41159),p=r(83621);r(42363);let d=r(63576),c=n._(r(65514)),f=r(45353),m={deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/looksense.github.io/_next/image",loader:"default",dangerouslyAllowSVG:!1,unoptimized:!1};function g(e,t,r,n,a,s,i){let o=null==e?void 0:e.src;e&&e["data-loaded-src"]!==o&&(e["data-loaded-src"]=o,("decode"in e?e.decode():Promise.resolve()).catch(()=>{}).then(()=>{if(e.parentElement&&e.isConnected){if("empty"!==t&&a(!0),null==r?void 0:r.current){let t=new Event("load");Object.defineProperty(t,"target",{writable:!1,value:e});let n=!1,a=!1;r.current({...t,nativeEvent:t,currentTarget:e,target:e,isDefaultPrevented:()=>n,isPropagationStopped:()=>a,persist:()=>{},preventDefault:()=>{n=!0,t.preventDefault()},stopPropagation:()=>{a=!0,t.stopPropagation()}})}(null==n?void 0:n.current)&&n.current(e)}}))}function y(e){return i.use?{fetchPriority:e}:{fetchpriority:e}}"undefined"==typeof window&&(globalThis.__NEXT_IMAGE_IMPORTED=!0);let b=(0,i.forwardRef)((e,t)=>{let{src:r,srcSet:n,sizes:a,height:o,width:l,decoding:u,className:h,style:p,fetchPriority:d,placeholder:c,loading:m,unoptimized:b,fill:x,onLoadRef:v,onLoadingCompleteRef:w,setBlurComplete:T,setShowAltText:S,sizesInput:N,onLoad:k,onError:I,...C}=e,E=(0,i.useCallback)(e=>{e&&(I&&(e.src=e.src),e.complete&&g(e,c,v,w,T,b,N))},[r,c,v,w,T,I,b,N]),A=(0,f.useMergedRef)(t,E);return(0,s.jsx)("img",{...C,...y(d),loading:m,width:l,height:o,decoding:u,"data-nimg":x?"fill":"1",className:h,style:p,sizes:a,srcSet:n,src:r,ref:A,onLoad:e=>{g(e.currentTarget,c,v,w,T,b,N)},onError:e=>{S(!0),"empty"!==c&&T(!0),I&&I(e)}})});function x(e){let{isAppRouter:t,imgAttributes:r}=e,n={as:"image",imageSrcSet:r.srcSet,imageSizes:r.sizes,crossOrigin:r.crossOrigin,referrerPolicy:r.referrerPolicy,...y(r.fetchPriority)};return t&&o.default.preload?(o.default.preload(r.src,n),null):(0,s.jsx)(l.default,{children:(0,s.jsx)("link",{rel:"preload",href:r.srcSet?void 0:r.src,...n},"__nimg-"+r.src+r.srcSet+r.sizes)})}let v=(0,i.forwardRef)((e,t)=>{let r=(0,i.useContext)(d.RouterContext),n=(0,i.useContext)(p.ImageConfigContext),a=(0,i.useMemo)(()=>{let e=m||n||h.imageConfigDefault,t=[...e.deviceSizes,...e.imageSizes].sort((e,t)=>e-t),r=e.deviceSizes.sort((e,t)=>e-t);return{...e,allSizes:t,deviceSizes:r}},[n]),{onLoad:o,onLoadingComplete:l}=e,f=(0,i.useRef)(o);(0,i.useEffect)(()=>{f.current=o},[o]);let g=(0,i.useRef)(l);(0,i.useEffect)(()=>{g.current=l},[l]);let[y,v]=(0,i.useState)(!1),[w,T]=(0,i.useState)(!1),{props:S,meta:N}=(0,u.getImgProps)(e,{defaultLoader:c.default,imgConf:a,blurComplete:y,showAltText:w});return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(b,{...S,unoptimized:N.unoptimized,placeholder:N.placeholder,fill:N.fill,onLoadRef:f,onLoadingCompleteRef:g,setBlurComplete:v,setShowAltText:T,sizesInput:e.sizes,ref:t}),N.priority?(0,s.jsx)(x,{isAppRouter:!r,imgAttributes:S}):null]})});("function"==typeof t.default||"object"==typeof t.default&&null!==t.default)&&void 0===t.default.__esModule&&(Object.defineProperty(t.default,"__esModule",{value:!0}),Object.assign(t.default,t),e.exports=t.default)},95714:e=>{!function(){var t={675:function(e,t){"use strict";t.byteLength=function(e){var t=l(e),r=t[0],n=t[1];return(r+n)*3/4-n},t.toByteArray=function(e){var t,r,s=l(e),i=s[0],o=s[1],u=new a((i+o)*3/4-o),h=0,p=o>0?i-4:i;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[h++]=t>>16&255,u[h++]=t>>8&255,u[h++]=255&t;return 2===o&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[h++]=255&t),1===o&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[h++]=t>>8&255,u[h++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,s=[],i=0,o=n-a;i<o;i+=16383)s.push(function(e,t,n){for(var a,s=[],i=t;i<n;i+=3)s.push(r[(a=(e[i]<<16&0xff0000)+(e[i+1]<<8&65280)+(255&e[i+2]))>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return s.join("")}(e,i,i+16383>o?o:i+16383));return 1===a?s.push(r[(t=e[n-1])>>2]+r[t<<4&63]+"=="):2===a&&s.push(r[(t=(e[n-2]<<8)+e[n-1])>>10]+r[t>>4&63]+r[t<<2&63]+"="),s.join("")};for(var r=[],n=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,o=s.length;i<o;++i)r[i]=s[i],n[s.charCodeAt(i)]=i;function l(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");-1===r&&(r=t);var n=r===t?0:4-r%4;return[r,n]}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},72:function(e,t,r){"use strict";var n=r(675),a=r(783),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function i(e){if(e>0x7fffffff)throw RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,o.prototype),t}function o(e,t,r){if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return h(e)}return l(e,t,r)}function l(e,t,r){if("string"==typeof e)return function(e,t){if(("string"!=typeof t||""===t)&&(t="utf8"),!o.isEncoding(t))throw TypeError("Unknown encoding: "+t);var r=0|c(e,t),n=i(r),a=n.write(e,t);return a!==r&&(n=n.slice(0,a)),n}(e,t);if(ArrayBuffer.isView(e))return p(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(A(e,ArrayBuffer)||e&&A(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(A(e,SharedArrayBuffer)||e&&A(e.buffer,SharedArrayBuffer)))return function(e,t,r){var n;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),o.prototype),n}(e,t,r);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');var n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return o.from(n,t,r);var a=function(e){if(o.isBuffer(e)){var t,r=0|d(e.length),n=i(r);return 0===n.length||e.copy(n,0,0,r),n}return void 0!==e.length?"number"!=typeof e.length||(t=e.length)!=t?i(0):p(e):"Buffer"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return o.from(e[Symbol.toPrimitive]("string"),t,r);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function u(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return u(e),i(e<0?0:0|d(e))}function p(e){for(var t=e.length<0?0:0|d(e.length),r=i(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e){if(e>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function c(e,t){if(o.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||A(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;for(var a=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return k(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return C(e).length;default:if(a)return n?-1:k(e).length;t=(""+t).toLowerCase(),a=!0}}function f(e,t,r){var a,s,i=!1;if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===r||r>this.length)&&(r=this.length),r<=0||(r>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var a="",s=t;s<r;++s)a+=$[e[s]];return a}(this,t,r);case"utf8":case"utf-8":return b(this,t,r);case"ascii":return function(e,t,r){var n="";r=Math.min(e.length,r);for(var a=t;a<r;++a)n+=String.fromCharCode(127&e[a]);return n}(this,t,r);case"latin1":case"binary":return function(e,t,r){var n="";r=Math.min(e.length,r);for(var a=t;a<r;++a)n+=String.fromCharCode(e[a]);return n}(this,t,r);case"base64":return a=t,s=r,0===a&&s===this.length?n.fromByteArray(this):n.fromByteArray(this.slice(a,s));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,r){for(var n=e.slice(t,r),a="",s=0;s<n.length;s+=2)a+=String.fromCharCode(n[s]+256*n[s+1]);return a}(this,t,r);default:if(i)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function m(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function g(e,t,r,n,a){var s;if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>0x7fffffff?r=0x7fffffff:r<-0x80000000&&(r=-0x80000000),(s=r=+r)!=s&&(r=a?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(a)return -1;r=e.length-1}else if(r<0){if(!a)return -1;r=0}if("string"==typeof t&&(t=o.from(t,n)),o.isBuffer(t))return 0===t.length?-1:y(e,t,r,n,a);if("number"==typeof t)return(t&=255,"function"==typeof Uint8Array.prototype.indexOf)?a?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):y(e,[t],r,n,a);throw TypeError("val must be string, number or Buffer")}function y(e,t,r,n,a){var s,i=1,o=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;i=2,o/=2,l/=2,r/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){var h=-1;for(s=r;s<o;s++)if(u(e,s)===u(t,-1===h?0:s-h)){if(-1===h&&(h=s),s-h+1===l)return h*i}else -1!==h&&(s-=s-h),h=-1}else for(r+l>o&&(r=o-l),s=r;s>=0;s--){for(var p=!0,d=0;d<l;d++)if(u(e,s+d)!==u(t,d)){p=!1;break}if(p)return s}return -1}function b(e,t,r){r=Math.min(e.length,r);for(var n=[],a=t;a<r;){var s,i,o,l,u=e[a],h=null,p=u>239?4:u>223?3:u>191?2:1;if(a+p<=r)switch(p){case 1:u<128&&(h=u);break;case 2:(192&(s=e[a+1]))==128&&(l=(31&u)<<6|63&s)>127&&(h=l);break;case 3:s=e[a+1],i=e[a+2],(192&s)==128&&(192&i)==128&&(l=(15&u)<<12|(63&s)<<6|63&i)>2047&&(l<55296||l>57343)&&(h=l);break;case 4:s=e[a+1],i=e[a+2],o=e[a+3],(192&s)==128&&(192&i)==128&&(192&o)==128&&(l=(15&u)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&l<1114112&&(h=l)}null===h?(h=65533,p=1):h>65535&&(h-=65536,n.push(h>>>10&1023|55296),h=56320|1023&h),n.push(h),a+=p}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}function x(e,t,r){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>r)throw RangeError("Trying to access beyond buffer length")}function v(e,t,r,n,a,s){if(!o.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw RangeError('"value" argument is out of bounds');if(r+n>e.length)throw RangeError("Index out of range")}function w(e,t,r,n,a,s){if(r+n>e.length||r<0)throw RangeError("Index out of range")}function T(e,t,r,n,s){return t=+t,r>>>=0,s||w(e,t,r,4,34028234663852886e22,-34028234663852886e22),a.write(e,t,r,n,23,4),r+4}function S(e,t,r,n,s){return t=+t,r>>>=0,s||w(e,t,r,8,17976931348623157e292,-17976931348623157e292),a.write(e,t,r,n,52,8),r+8}t.Buffer=o,t.SlowBuffer=function(e){return+e!=e&&(e=0),o.alloc(+e)},t.INSPECT_MAX_BYTES=50,t.kMaxLength=0x7fffffff,o.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),o.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.byteOffset}}),o.poolSize=8192,o.from=function(e,t,r){return l(e,t,r)},Object.setPrototypeOf(o.prototype,Uint8Array.prototype),Object.setPrototypeOf(o,Uint8Array),o.alloc=function(e,t,r){return(u(e),e<=0)?i(e):void 0!==t?"string"==typeof r?i(e).fill(t,r):i(e).fill(t):i(e)},o.allocUnsafe=function(e){return h(e)},o.allocUnsafeSlow=function(e){return h(e)},o.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==o.prototype},o.compare=function(e,t){if(A(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),A(t,Uint8Array)&&(t=o.from(t,t.offset,t.byteLength)),!o.isBuffer(e)||!o.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var r=e.length,n=t.length,a=0,s=Math.min(r,n);a<s;++a)if(e[a]!==t[a]){r=e[a],n=t[a];break}return r<n?-1:n<r?1:0},o.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(e,t){if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return o.alloc(0);if(void 0===t)for(r=0,t=0;r<e.length;++r)t+=e[r].length;var r,n=o.allocUnsafe(t),a=0;for(r=0;r<e.length;++r){var s=e[r];if(A(s,Uint8Array)&&(s=o.from(s)),!o.isBuffer(s))throw TypeError('"list" argument must be an Array of Buffers');s.copy(n,a),a+=s.length}return n},o.byteLength=c,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},o.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},o.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},o.prototype.toString=function(){var e=this.length;return 0===e?"":0==arguments.length?b(this,0,e):f.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(e){if(!o.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===o.compare(this,e)},o.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},s&&(o.prototype[s]=o.prototype.inspect),o.prototype.compare=function(e,t,r,n,a){if(A(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),!o.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===a&&(a=this.length),t<0||r>e.length||n<0||a>this.length)throw RangeError("out of range index");if(n>=a&&t>=r)return 0;if(n>=a)return -1;if(t>=r)return 1;if(t>>>=0,r>>>=0,n>>>=0,a>>>=0,this===e)return 0;for(var s=a-n,i=r-t,l=Math.min(s,i),u=this.slice(n,a),h=e.slice(t,r),p=0;p<l;++p)if(u[p]!==h[p]){s=u[p],i=h[p];break}return s<i?-1:i<s?1:0},o.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},o.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},o.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},o.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var a,s,i,o,l,u,h,p,d,c,f,m,g=this.length-t;if((void 0===r||r>g)&&(r=g),e.length>0&&(r<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var y=!1;;)switch(n){case"hex":return function(e,t,r,n){r=Number(r)||0;var a=e.length-r;n?(n=Number(n))>a&&(n=a):n=a;var s=t.length;n>s/2&&(n=s/2);for(var i=0;i<n;++i){var o=parseInt(t.substr(2*i,2),16);if(o!=o)break;e[r+i]=o}return i}(this,e,t,r);case"utf8":case"utf-8":return l=t,u=r,E(k(e,this.length-l),this,l,u);case"ascii":return h=t,p=r,E(I(e),this,h,p);case"latin1":case"binary":return a=this,s=e,i=t,o=r,E(I(s),a,i,o);case"base64":return d=t,c=r,E(C(e),this,d,c);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return f=t,m=r,E(function(e,t){for(var r,n,a=[],s=0;s<e.length&&!((t-=2)<0);++s)n=(r=e.charCodeAt(s))>>8,a.push(r%256),a.push(n);return a}(e,this.length-f),this,f,m);default:if(y)throw TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),y=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},o.prototype.slice=function(e,t){var r=this.length;e=~~e,t=void 0===t?r:~~t,e<0?(e+=r)<0&&(e=0):e>r&&(e=r),t<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);var n=this.subarray(e,t);return Object.setPrototypeOf(n,o.prototype),n},o.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||x(e,t,this.length);for(var n=this[e],a=1,s=0;++s<t&&(a*=256);)n+=this[e+s]*a;return n},o.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||x(e,t,this.length);for(var n=this[e+--t],a=1;t>0&&(a*=256);)n+=this[e+--t]*a;return n},o.prototype.readUInt8=function(e,t){return e>>>=0,t||x(e,1,this.length),this[e]},o.prototype.readUInt16LE=function(e,t){return e>>>=0,t||x(e,2,this.length),this[e]|this[e+1]<<8},o.prototype.readUInt16BE=function(e,t){return e>>>=0,t||x(e,2,this.length),this[e]<<8|this[e+1]},o.prototype.readUInt32LE=function(e,t){return e>>>=0,t||x(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+0x1000000*this[e+3]},o.prototype.readUInt32BE=function(e,t){return e>>>=0,t||x(e,4,this.length),0x1000000*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},o.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||x(e,t,this.length);for(var n=this[e],a=1,s=0;++s<t&&(a*=256);)n+=this[e+s]*a;return n>=(a*=128)&&(n-=Math.pow(2,8*t)),n},o.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||x(e,t,this.length);for(var n=t,a=1,s=this[e+--n];n>0&&(a*=256);)s+=this[e+--n]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},o.prototype.readInt8=function(e,t){return(e>>>=0,t||x(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},o.prototype.readInt16LE=function(e,t){e>>>=0,t||x(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?0xffff0000|r:r},o.prototype.readInt16BE=function(e,t){e>>>=0,t||x(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?0xffff0000|r:r},o.prototype.readInt32LE=function(e,t){return e>>>=0,t||x(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},o.prototype.readInt32BE=function(e,t){return e>>>=0,t||x(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},o.prototype.readFloatLE=function(e,t){return e>>>=0,t||x(e,4,this.length),a.read(this,e,!0,23,4)},o.prototype.readFloatBE=function(e,t){return e>>>=0,t||x(e,4,this.length),a.read(this,e,!1,23,4)},o.prototype.readDoubleLE=function(e,t){return e>>>=0,t||x(e,8,this.length),a.read(this,e,!0,52,8)},o.prototype.readDoubleBE=function(e,t){return e>>>=0,t||x(e,8,this.length),a.read(this,e,!1,52,8)},o.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){var a=Math.pow(2,8*r)-1;v(this,e,t,r,a,0)}var s=1,i=0;for(this[t]=255&e;++i<r&&(s*=256);)this[t+i]=e/s&255;return t+r},o.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){var a=Math.pow(2,8*r)-1;v(this,e,t,r,a,0)}var s=r-1,i=1;for(this[t+s]=255&e;--s>=0&&(i*=256);)this[t+s]=e/i&255;return t+r},o.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,1,255,0),this[t]=255&e,t+1},o.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,4,0xffffffff,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},o.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,4,0xffffffff,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var a=Math.pow(2,8*r-1);v(this,e,t,r,a-1,-a)}var s=0,i=1,o=0;for(this[t]=255&e;++s<r&&(i*=256);)e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+r},o.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var a=Math.pow(2,8*r-1);v(this,e,t,r,a-1,-a)}var s=r-1,i=1,o=0;for(this[t+s]=255&e;--s>=0&&(i*=256);)e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+r},o.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},o.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,4,0x7fffffff,-0x80000000),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},o.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||v(this,e,t,4,0x7fffffff,-0x80000000),e<0&&(e=0xffffffff+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeFloatLE=function(e,t,r){return T(this,e,t,!0,r)},o.prototype.writeFloatBE=function(e,t,r){return T(this,e,t,!1,r)},o.prototype.writeDoubleLE=function(e,t,r){return S(this,e,t,!0,r)},o.prototype.writeDoubleBE=function(e,t,r){return S(this,e,t,!1,r)},o.prototype.copy=function(e,t,r,n){if(!o.isBuffer(e))throw TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r||0===e.length||0===this.length)return 0;if(t<0)throw RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw RangeError("Index out of range");if(n<0)throw RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var a=n-r;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,r,n);else if(this===e&&r<t&&t<n)for(var s=a-1;s>=0;--s)e[s+t]=this[s+r];else Uint8Array.prototype.set.call(e,this.subarray(r,n),t);return a},o.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw TypeError("encoding must be a string");if("string"==typeof n&&!o.isEncoding(n))throw TypeError("Unknown encoding: "+n);if(1===e.length){var a,s=e.charCodeAt(0);("utf8"===n&&s<128||"latin1"===n)&&(e=s)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw RangeError("Out of range index");if(r<=t)return this;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(a=t;a<r;++a)this[a]=e;else{var i=o.isBuffer(e)?e:o.from(e,n),l=i.length;if(0===l)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=i[a%l]}return this};var N=/[^+/0-9A-Za-z-_]/g;function k(e,t){t=t||1/0;for(var r,n=e.length,a=null,s=[],i=0;i<n;++i){if((r=e.charCodeAt(i))>55295&&r<57344){if(!a){if(r>56319||i+1===n){(t-=3)>-1&&s.push(239,191,189);continue}a=r;continue}if(r<56320){(t-=3)>-1&&s.push(239,191,189),a=r;continue}r=(a-55296<<10|r-56320)+65536}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,r<128){if((t-=1)<0)break;s.push(r)}else if(r<2048){if((t-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else if(r<1114112){if((t-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}else throw Error("Invalid code point")}return s}function I(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}function C(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(N,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function E(e,t,r,n){for(var a=0;a<n&&!(a+r>=t.length)&&!(a>=e.length);++a)t[a+r]=e[a];return a}function A(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}var $=function(){for(var e="0123456789abcdef",t=Array(256),r=0;r<16;++r)for(var n=16*r,a=0;a<16;++a)t[n+a]=e[r]+e[a];return t}()},783:function(e,t){t.read=function(e,t,r,n,a){var s,i,o=8*a-n-1,l=(1<<o)-1,u=l>>1,h=-7,p=r?a-1:0,d=r?-1:1,c=e[t+p];for(p+=d,s=c&(1<<-h)-1,c>>=-h,h+=o;h>0;s=256*s+e[t+p],p+=d,h-=8);for(i=s&(1<<-h)-1,s>>=-h,h+=n;h>0;i=256*i+e[t+p],p+=d,h-=8);if(0===s)s=1-u;else{if(s===l)return i?NaN:1/0*(c?-1:1);i+=Math.pow(2,n),s-=u}return(c?-1:1)*i*Math.pow(2,s-n)},t.write=function(e,t,r,n,a,s){var i,o,l,u=8*s-a-1,h=(1<<u)-1,p=h>>1,d=23===a?5960464477539062e-23:0,c=n?0:s-1,f=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(isNaN(t=Math.abs(t))||t===1/0?(o=isNaN(t)?1:0,i=h):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),i+p>=1?t+=d/l:t+=d*Math.pow(2,1-p),t*l>=2&&(i++,l/=2),i+p>=h?(o=0,i=h):i+p>=1?(o=(t*l-1)*Math.pow(2,a),i+=p):(o=t*Math.pow(2,p-1)*Math.pow(2,a),i=0));a>=8;e[r+c]=255&o,c+=f,o/=256,a-=8);for(i=i<<a|o,u+=a;u>0;e[r+c]=255&i,c+=f,i/=256,u-=8);e[r+c-f]|=128*m}}},r={};function n(e){var a=r[e];if(void 0!==a)return a.exports;var s=r[e]={exports:{}},i=!0;try{t[e](s,s.exports,n),i=!1}finally{i&&delete r[e]}return s.exports}n.ab="//";var a=n(72);e.exports=a}()},53003:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"AmpStateContext",{enumerable:!0,get:function(){return n}});let n=r(60306)._(r(12115)).default.createContext({})},675:(e,t)=>{"use strict";function r(e){let{ampFirst:t=!1,hybrid:r=!1,hasQuery:n=!1}=void 0===e?{}:e;return t||r&&n}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isInAmpMode",{enumerable:!0,get:function(){return r}})},40666:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"getImgProps",{enumerable:!0,get:function(){return o}}),r(42363);let n=r(35859),a=r(41159);function s(e){return void 0!==e.default}function i(e){return void 0===e?e:"number"==typeof e?Number.isFinite(e)?e:NaN:"string"==typeof e&&/^[0-9]+$/.test(e)?parseInt(e,10):NaN}function o(e,t){var r;let o,l,u,{src:h,sizes:p,unoptimized:d=!1,priority:c=!1,loading:f,className:m,quality:g,width:y,height:b,fill:x=!1,style:v,overrideSrc:w,onLoad:T,onLoadingComplete:S,placeholder:N="empty",blurDataURL:k,fetchPriority:I,decoding:C="async",layout:E,objectFit:A,objectPosition:$,lazyBoundary:R,lazyRoot:F,..._}=e,{imgConf:D,showAltText:O,blurComplete:L,defaultLoader:M}=t,P=D||a.imageConfigDefault;if("allSizes"in P)o=P;else{let e=[...P.deviceSizes,...P.imageSizes].sort((e,t)=>e-t),t=P.deviceSizes.sort((e,t)=>e-t);o={...P,allSizes:e,deviceSizes:t}}if(void 0===M)throw Error("images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config");let z=_.loader||M;delete _.loader,delete _.srcSet;let B="__next_img_default"in z;if(B){if("custom"===o.loader)throw Error('Image with src "'+h+'" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader')}else{let e=z;z=t=>{let{config:r,...n}=t;return e(n)}}if(E){"fill"===E&&(x=!0);let e={intrinsic:{maxWidth:"100%",height:"auto"},responsive:{width:"100%",height:"auto"}}[E];e&&(v={...v,...e});let t={responsive:"100vw",fill:"100vw"}[E];t&&!p&&(p=t)}let W="",V=i(y),U=i(b);if((r=h)&&"object"==typeof r&&(s(r)||void 0!==r.src)){let e=s(h)?h.default:h;if(!e.src)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received "+JSON.stringify(e));if(!e.height||!e.width)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received "+JSON.stringify(e));if(l=e.blurWidth,u=e.blurHeight,k=k||e.blurDataURL,W=e.src,!x){if(V||U){if(V&&!U){let t=V/e.width;U=Math.round(e.height*t)}else if(!V&&U){let t=U/e.height;V=Math.round(e.width*t)}}else V=e.width,U=e.height}}let G=!c&&("lazy"===f||void 0===f);(!(h="string"==typeof h?h:W)||h.startsWith("data:")||h.startsWith("blob:"))&&(d=!0,G=!1),o.unoptimized&&(d=!0),B&&h.endsWith(".svg")&&!o.dangerouslyAllowSVG&&(d=!0);let Z=i(g),j=Object.assign(x?{position:"absolute",height:"100%",width:"100%",left:0,top:0,right:0,bottom:0,objectFit:A,objectPosition:$}:{},O?{}:{color:"transparent"},v),K=L||"empty"===N?null:"blur"===N?'url("data:image/svg+xml;charset=utf-8,'+(0,n.getImageBlurSvg)({widthInt:V,heightInt:U,blurWidth:l,blurHeight:u,blurDataURL:k||"",objectFit:j.objectFit})+'")':'url("'+N+'")',H=K?{backgroundSize:j.objectFit||"cover",backgroundPosition:j.objectPosition||"50% 50%",backgroundRepeat:"no-repeat",backgroundImage:K}:{},Y=function(e){let{config:t,src:r,unoptimized:n,width:a,quality:s,sizes:i,loader:o}=e;if(n)return{src:r,srcSet:void 0,sizes:void 0};let{widths:l,kind:u}=function(e,t,r){let{deviceSizes:n,allSizes:a}=e;if(r){let e=/(^|\s)(1?\d?\d)vw/g,t=[];for(let n;n=e.exec(r);n)t.push(parseInt(n[2]));if(t.length){let e=.01*Math.min(...t);return{widths:a.filter(t=>t>=n[0]*e),kind:"w"}}return{widths:a,kind:"w"}}return"number"!=typeof t?{widths:n,kind:"w"}:{widths:[...new Set([t,2*t].map(e=>a.find(t=>t>=e)||a[a.length-1]))],kind:"x"}}(t,a,i),h=l.length-1;return{sizes:i||"w"!==u?i:"100vw",srcSet:l.map((e,n)=>o({config:t,src:r,quality:s,width:e})+" "+("w"===u?e:n+1)+u).join(", "),src:o({config:t,src:r,quality:s,width:l[h]})}}({config:o,src:h,unoptimized:d,width:V,quality:Z,sizes:p,loader:z});return{props:{..._,loading:G?"lazy":f,fetchPriority:I,width:V,height:U,decoding:C,className:m,style:{...j,...H},sizes:Y.sizes,srcSet:Y.srcSet,src:w||Y.src},meta:{unoptimized:d,priority:c,placeholder:N,fill:x}}}},36107:(e,t,r)=>{"use strict";var n=r(2818);Object.defineProperty(t,"__esModule",{value:!0}),function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(t,{default:function(){return g},defaultHead:function(){return d}});let a=r(60306),s=r(29955),i=r(95155),o=s._(r(12115)),l=a._(r(31172)),u=r(53003),h=r(81147),p=r(675);function d(e){void 0===e&&(e=!1);let t=[(0,i.jsx)("meta",{charSet:"utf-8"},"charset")];return e||t.push((0,i.jsx)("meta",{name:"viewport",content:"width=device-width"},"viewport")),t}function c(e,t){return"string"==typeof t||"number"==typeof t?e:t.type===o.default.Fragment?e.concat(o.default.Children.toArray(t.props.children).reduce((e,t)=>"string"==typeof t||"number"==typeof t?e:e.concat(t),[])):e.concat(t)}r(42363);let f=["name","httpEquiv","charSet","itemProp"];function m(e,t){let{inAmpMode:r}=t;return e.reduce(c,[]).reverse().concat(d(r).reverse()).filter(function(){let e=new Set,t=new Set,r=new Set,n={};return a=>{let s=!0,i=!1;if(a.key&&"number"!=typeof a.key&&a.key.indexOf("$")>0){i=!0;let t=a.key.slice(a.key.indexOf("$")+1);e.has(t)?s=!1:e.add(t)}switch(a.type){case"title":case"base":t.has(a.type)?s=!1:t.add(a.type);break;case"meta":for(let e=0,t=f.length;e<t;e++){let t=f[e];if(a.props.hasOwnProperty(t)){if("charSet"===t)r.has(t)?s=!1:r.add(t);else{let e=a.props[t],r=n[t]||new Set;("name"!==t||!i)&&r.has(e)?s=!1:(r.add(e),n[t]=r)}}}}return s}}()).reverse().map((e,t)=>{let a=e.key||t;if(n.env.__NEXT_OPTIMIZE_FONTS&&!r&&"link"===e.type&&e.props.href&&["https://fonts.googleapis.com/css","https://use.typekit.net/"].some(t=>e.props.href.startsWith(t))){let t={...e.props||{}};return t["data-href"]=t.href,t.href=void 0,t["data-optimized-fonts"]=!0,o.default.cloneElement(e,t)}return o.default.cloneElement(e,{key:a})})}let g=function(e){let{children:t}=e,r=(0,o.useContext)(u.AmpStateContext),n=(0,o.useContext)(h.HeadManagerContext);return(0,i.jsx)(l.default,{reduceComponentsToState:m,headManager:n,inAmpMode:(0,p.isInAmpMode)(r),children:t})};("function"==typeof t.default||"object"==typeof t.default&&null!==t.default)&&void 0===t.default.__esModule&&(Object.defineProperty(t.default,"__esModule",{value:!0}),Object.assign(t.default,t),e.exports=t.default)},35859:(e,t)=>{"use strict";function r(e){let{widthInt:t,heightInt:r,blurWidth:n,blurHeight:a,blurDataURL:s,objectFit:i}=e,o=n?40*n:t,l=a?40*a:r,u=o&&l?"viewBox='0 0 "+o+" "+l+"'":"";return"%3Csvg xmlns='http://www.w3.org/2000/svg' "+u+"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='"+(u?"none":"contain"===i?"xMidYMid":"cover"===i?"xMidYMid slice":"none")+"' style='filter: url(%23b);' href='"+s+"'/%3E%3C/svg%3E"}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"getImageBlurSvg",{enumerable:!0,get:function(){return r}})},83621:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"ImageConfigContext",{enumerable:!0,get:function(){return s}});let n=r(60306)._(r(12115)),a=r(41159),s=n.default.createContext(a.imageConfigDefault)},41159:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(t,{VALID_LOADERS:function(){return r},imageConfigDefault:function(){return n}});let r=["default","imgix","cloudinary","akamai","custom"],n={deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/_next/image",loader:"default",loaderFile:"",domains:[],disableStaticImages:!1,minimumCacheTTL:60,formats:["image/webp"],dangerouslyAllowSVG:!1,contentSecurityPolicy:"script-src 'none'; frame-src 'none'; sandbox;",contentDispositionType:"attachment",localPatterns:void 0,remotePatterns:[],unoptimized:!1}},4146:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(t,{default:function(){return l},getImageProps:function(){return o}});let n=r(60306),a=r(40666),s=r(87970),i=n._(r(65514));function o(e){let{props:t}=(0,a.getImgProps)(e,{defaultLoader:i.default,imgConf:{deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/looksense.github.io/_next/image",loader:"default",dangerouslyAllowSVG:!1,unoptimized:!1}});for(let[e,r]of Object.entries(t))void 0===r&&delete t[e];return{props:t}}let l=s.Image},65514:(e,t)=>{"use strict";function r(e){let{config:t,src:r,width:n,quality:a}=e;return t.path+"?url="+encodeURIComponent(r)+"&w="+n+"&q="+(a||75)}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return n}}),r.__next_img_default=!0;let n=r},31172:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return o}});let n=r(12115),a="undefined"==typeof window,s=a?()=>{}:n.useLayoutEffect,i=a?()=>{}:n.useEffect;function o(e){let{headManager:t,reduceComponentsToState:r}=e;function o(){if(t&&t.mountedInstances){let a=n.Children.toArray(Array.from(t.mountedInstances).filter(Boolean));t.updateHead(r(a,e))}}if(a){var l;null==t||null==(l=t.mountedInstances)||l.add(e.children),o()}return s(()=>{var r;return null==t||null==(r=t.mountedInstances)||r.add(e.children),()=>{var r;null==t||null==(r=t.mountedInstances)||r.delete(e.children)}}),s(()=>(t&&(t._pendingUpdate=o),()=>{t&&(t._pendingUpdate=o)})),i(()=>(t&&t._pendingUpdate&&(t._pendingUpdate(),t._pendingUpdate=null),()=>{t&&t._pendingUpdate&&(t._pendingUpdate(),t._pendingUpdate=null)})),null}},39567:(e,t,r)=>{var n=r(61774),a=r(91171),s=r(76793),i=r(40139),o=r(69489),l=r(43727),u=r(93783);u.alea=n,u.xor128=a,u.xorwow=s,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},61774:function(e,t,r){var n;!function(e,a,s){function i(e){var t,r=this,n=(t=0xefc8249d,function(e){e=String(e);for(var r=0;r<e.length;r++){var n=.02519603282416938*(t+=e.charCodeAt(r));t=n>>>0,n-=t,n*=t,t=n>>>0,n-=t,t+=0x100000000*n}return(t>>>0)*23283064365386963e-26});r.next=function(){var e=2091639*r.s0+23283064365386963e-26*r.c;return r.s0=r.s1,r.s1=r.s2,r.s2=e-(r.c=0|e)},r.c=1,r.s0=n(" "),r.s1=n(" "),r.s2=n(" "),r.s0-=n(e),r.s0<0&&(r.s0+=1),r.s1-=n(e),r.s1<0&&(r.s1+=1),r.s2-=n(e),r.s2<0&&(r.s2+=1)}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var r=new i(e),n=t&&t.state,a=r.next;return a.int32=function(){return 0x100000000*r.next()|0},a.double=function(){return a()+(2097152*a()|0)*11102230246251565e-32},a.quick=a,n&&("object"==typeof n&&o(n,r),a.state=function(){return o(r,{})}),a}a&&a.exports?a.exports=l:r.amdD&&r.amdO?void 0!==(n=(function(){return l}).call(t,r,t,a))&&(a.exports=n):this.alea=l}(0,e=r.nmd(e),r.amdD)},43727:function(e,t,r){var n;!function(e,a,s){function i(e){var t=this,r="";t.next=function(){var e=t.b,r=t.c,n=t.d,a=t.a;return e=e<<25^e>>>7^r,r=r-n|0,n=n<<24^n>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^r,t.c=r=r-n|0,t.d=n<<16^r>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-0x61c88647,t.d=0x517cc1b7,e===Math.floor(e)?(t.a=e/0x100000000|0,t.b=0|e):r+=e;for(var n=0;n<r.length+20;n++)t.b^=0|r.charCodeAt(n),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var r=new i(e),n=t&&t.state,a=function(){return(r.next()>>>0)/0x100000000};return a.double=function(){do var e=((r.next()>>>11)+(r.next()>>>0)/0x100000000)/2097152;while(0===e);return e},a.int32=r.next,a.quick=a,n&&("object"==typeof n&&o(n,r),a.state=function(){return o(r,{})}),a}a&&a.exports?a.exports=l:r.amdD&&r.amdO?void 0!==(n=(function(){return l}).call(t,r,t,a))&&(a.exports=n):this.tychei=l}(0,e=r.nmd(e),r.amdD)},91171:function(e,t,r){var n;!function(e,a,s){function i(e){var t=this,r="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:r+=e;for(var n=0;n<r.length+64;n++)t.x^=0|r.charCodeAt(n),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var r=new i(e),n=t&&t.state,a=function(){return(r.next()>>>0)/0x100000000};return a.double=function(){do var e=((r.next()>>>11)+(r.next()>>>0)/0x100000000)/2097152;while(0===e);return e},a.int32=r.next,a.quick=a,n&&("object"==typeof n&&o(n,r),a.state=function(){return o(r,{})}),a}a&&a.exports?a.exports=l:r.amdD&&r.amdO?void 0!==(n=(function(){return l}).call(t,r,t,a))&&(a.exports=n):this.xor128=l}(0,e=r.nmd(e),r.amdD)},69489:function(e,t,r){var n;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,r,n=t.w,a=t.X,s=t.i;return t.w=n=n+0x61c88647|0,r=a[s+34&127],e=a[s=s+1&127],r^=r<<13,e^=e<<17,r^=r>>>15,e^=e>>>12,r=a[s]=r^e,t.i=s,r+(n^n>>>16)|0},function(e,t){var r,n,a,s,i,o=[],l=128;for(t===(0|t)?(n=t,t=null):(t+="\0",n=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(n^=t.charCodeAt((s+32)%t.length)),0===s&&(i=n),n^=n<<10,n^=n>>>15,n^=n<<4,n^=n>>>13,s>=0&&(i=i+0x61c88647|0,a=0==(r=o[127&s]^=n+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)n=o[a+34&127],r=o[a=a+1&127],n^=n<<13,r^=r<<17,n^=n>>>15,r^=r>>>12,o[a]=n^r;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var r=new i(e),n=t&&t.state,a=function(){return(r.next()>>>0)/0x100000000};return a.double=function(){do var e=((r.next()>>>11)+(r.next()>>>0)/0x100000000)/2097152;while(0===e);return e},a.int32=r.next,a.quick=a,n&&(n.X&&o(n,r),a.state=function(){return o(r,{})}),a}a&&a.exports?a.exports=l:r.amdD&&r.amdO?void 0!==(n=(function(){return l}).call(t,r,t,a))&&(a.exports=n):this.xor4096=l}(0,e=r.nmd(e),r.amdD)},40139:function(e,t,r){var n;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,r,n=t.x,a=t.i;return e=n[a],e^=e>>>7,r=e^e<<24^((e=n[a+1&7])^e>>>10)^((e=n[a+3&7])^e>>>3)^((e=n[a+4&7])^e<<7),e=n[a+7&7],e^=e<<13,r^=e^e<<9,n[a]=r,t.i=a+1&7,r},function(e,t){var r,n=[];if(t===(0|t))n[0]=t;else for(r=0,t=""+t;r<t.length;++r)n[7&r]=n[7&r]<<15^t.charCodeAt(r)+n[r+1&7]<<13;for(;n.length<8;)n.push(0);for(r=0;r<8&&0===n[r];++r);for(8==r?n[7]=-1:n[r],e.x=n,e.i=0,r=256;r>0;--r)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var r=new i(e),n=t&&t.state,a=function(){return(r.next()>>>0)/0x100000000};return a.double=function(){do var e=((r.next()>>>11)+(r.next()>>>0)/0x100000000)/2097152;while(0===e);return e},a.int32=r.next,a.quick=a,n&&(n.x&&o(n,r),a.state=function(){return o(r,{})}),a}a&&a.exports?a.exports=l:r.amdD&&r.amdO?void 0!==(n=(function(){return l}).call(t,r,t,a))&&(a.exports=n):this.xorshift7=l}(0,e=r.nmd(e),r.amdD)},76793:function(e,t,r){var n;!function(e,a,s){function i(e){var t=this,r="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:r+=e;for(var n=0;n<r.length+64;n++)t.x^=0|r.charCodeAt(n),n==r.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var r=new i(e),n=t&&t.state,a=function(){return(r.next()>>>0)/0x100000000};return a.double=function(){do var e=((r.next()>>>11)+(r.next()>>>0)/0x100000000)/2097152;while(0===e);return e},a.int32=r.next,a.quick=a,n&&("object"==typeof n&&o(n,r),a.state=function(){return o(r,{})}),a}a&&a.exports?a.exports=l:r.amdD&&r.amdO?void 0!==(n=(function(){return l}).call(t,r,t,a))&&(a.exports=n):this.xorwow=l}(0,e=r.nmd(e),r.amdD)},93783:function(e,t,r){var n;!function(a,s,i){var o,l=i.pow(256,6),u=i.pow(2,52),h=2*u;function p(e,t,r){var n=[],p=f(function e(t,r){var n,a=[],s=typeof t;if(r&&"object"==s)for(n in t)try{a.push(e(t[n],r-1))}catch(e){}return a.length?a:"string"==s?t:t+"\0"}((t=!0==t?{entropy:!0}:t||{}).entropy?[e,m(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(256):(e=new Uint8Array(256),(a.crypto||a.msCrypto).getRandomValues(e)),m(e)}catch(e){var t=a.navigator,r=t&&t.plugins;return[+new Date,a,r,a.screen,m(s)]}}():e,3),n),g=new d(n),y=function(){for(var e=g.g(6),t=l,r=0;e<u;)e=(e+r)*256,t*=256,r=g.g(1);for(;e>=h;)e/=2,t/=2,r>>>=1;return(e+r)/t};return y.int32=function(){return 0|g.g(4)},y.quick=function(){return g.g(4)/0x100000000},y.double=y,f(m(g.S),s),(t.pass||r||function(e,t,r,n){return(n&&(n.S&&c(n,g),e.state=function(){return c(g,{})}),r)?(i.random=e,t):e})(y,p,"global"in t?t.global:this==i,t.state)}function d(e){var t,r=e.length,n=this,a=0,s=n.i=n.j=0,i=n.S=[];for(r||(e=[r++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+e[a%r]+(t=i[a])],i[s]=t;(n.g=function(e){for(var t,r=0,a=n.i,s=n.j,i=n.S;e--;)t=i[a=255&a+1],r=256*r+i[255&(i[a]=i[s=255&s+t])+(i[s]=t)];return n.i=a,n.j=s,r})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var r,n=e+"",a=0;a<n.length;)t[255&a]=255&(r^=19*t[255&a])+n.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(f(i.random(),s),e.exports){e.exports=p;try{o=r(41234)}catch(e){}}else void 0!==(n=(function(){return p}).call(t,r,t,e))&&(e.exports=n)}("undefined"!=typeof self?self:this,[],Math)}}]);